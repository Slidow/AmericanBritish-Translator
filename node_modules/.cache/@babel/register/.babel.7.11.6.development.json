{
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/routes/api.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/routes/api.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/routes/api.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/routes/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/routes/",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nconst Translator = require('../components/translator.js');\n\nmodule.exports = function (app) {\n  const translator = new Translator();\n  app.route('/api/translate').post((req, res) => {\n    let text = req.body.text;\n    let locale = req.body.locale;\n\n    if (text === \"\") {\n      res.json({\n        error: 'No text to translate'\n      });\n      return;\n    } else if (!locale || !text) {\n      res.json({\n        error: 'Required field(s) missing'\n      });\n      return;\n    }\n\n    if (locale === \"american-to-british\") {\n      let translation = translator.getAmericanTranslation(text);\n\n      if (!translation || translation === text) {\n        res.json({\n          text,\n          translation: \"Everything looks good to me!\"\n        });\n        return;\n      } else {\n        res.json({\n          text,\n          translation\n        });\n        return;\n      }\n    } else if (locale === \"british-to-american\") {\n      let translation = translator.getBritishTranslation(text);\n\n      if (!translation || translation === text) {\n        res.json({\n          text,\n          translation: \"Everything looks good to me!\"\n        });\n        return;\n      } else {\n        res.json({\n          text,\n          translation\n        });\n        return;\n      }\n    } else {\n      res.json({\n        error: \"Invalid value for locale field\"\n      });\n      return;\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJUcmFuc2xhdG9yIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJ0cmFuc2xhdG9yIiwicm91dGUiLCJwb3N0IiwicmVxIiwicmVzIiwidGV4dCIsImJvZHkiLCJsb2NhbGUiLCJqc29uIiwiZXJyb3IiLCJ0cmFuc2xhdGlvbiIsImdldEFtZXJpY2FuVHJhbnNsYXRpb24iLCJnZXRCcml0aXNoVHJhbnNsYXRpb24iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLFVBQVUsR0FBR0MsT0FBTyxDQUFDLDZCQUFELENBQTFCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsR0FBVixFQUFlO0FBRTlCLFFBQU1DLFVBQVUsR0FBRyxJQUFJTCxVQUFKLEVBQW5CO0FBRUFJLEVBQUFBLEdBQUcsQ0FBQ0UsS0FBSixDQUFVLGdCQUFWLEVBQ0dDLElBREgsQ0FDUSxDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNsQixRQUFJQyxJQUFJLEdBQUdGLEdBQUcsQ0FBQ0csSUFBSixDQUFTRCxJQUFwQjtBQUNBLFFBQUlFLE1BQU0sR0FBR0osR0FBRyxDQUFDRyxJQUFKLENBQVNDLE1BQXRCOztBQUVBLFFBQUlGLElBQUksS0FBSyxFQUFiLEVBQWlCO0FBQ2ZELE1BQUFBLEdBQUcsQ0FBQ0ksSUFBSixDQUFTO0FBQUVDLFFBQUFBLEtBQUssRUFBRTtBQUFULE9BQVQ7QUFDQTtBQUNELEtBSEQsTUFJSyxJQUFJLENBQUNGLE1BQUQsSUFBVyxDQUFDRixJQUFoQixFQUFzQjtBQUN6QkQsTUFBQUEsR0FBRyxDQUFDSSxJQUFKLENBQVM7QUFBRUMsUUFBQUEsS0FBSyxFQUFFO0FBQVQsT0FBVDtBQUNBO0FBQ0Q7O0FBRUQsUUFBSUYsTUFBTSxLQUFLLHFCQUFmLEVBQXNDO0FBQ3BDLFVBQUlHLFdBQVcsR0FBR1YsVUFBVSxDQUFDVyxzQkFBWCxDQUFrQ04sSUFBbEMsQ0FBbEI7O0FBQ0EsVUFBSSxDQUFDSyxXQUFELElBQWdCQSxXQUFXLEtBQUtMLElBQXBDLEVBQTBDO0FBQ3hDRCxRQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBUztBQUFDSCxVQUFBQSxJQUFEO0FBQU9LLFVBQUFBLFdBQVcsRUFBRTtBQUFwQixTQUFUO0FBQ0E7QUFDRCxPQUhELE1BR007QUFDSk4sUUFBQUEsR0FBRyxDQUFDSSxJQUFKLENBQVM7QUFBQ0gsVUFBQUEsSUFBRDtBQUFPSyxVQUFBQTtBQUFQLFNBQVQ7QUFDQTtBQUNEO0FBQ0YsS0FURCxNQVVLLElBQUlILE1BQU0sS0FBSyxxQkFBZixFQUFzQztBQUN6QyxVQUFJRyxXQUFXLEdBQUdWLFVBQVUsQ0FBQ1kscUJBQVgsQ0FBaUNQLElBQWpDLENBQWxCOztBQUNBLFVBQUksQ0FBQ0ssV0FBRCxJQUFnQkEsV0FBVyxLQUFLTCxJQUFwQyxFQUEwQztBQUN4Q0QsUUFBQUEsR0FBRyxDQUFDSSxJQUFKLENBQVM7QUFBQ0gsVUFBQUEsSUFBRDtBQUFPSyxVQUFBQSxXQUFXLEVBQUU7QUFBcEIsU0FBVDtBQUNBO0FBQ0QsT0FIRCxNQUdNO0FBQ0pOLFFBQUFBLEdBQUcsQ0FBQ0ksSUFBSixDQUFTO0FBQUNILFVBQUFBLElBQUQ7QUFBT0ssVUFBQUE7QUFBUCxTQUFUO0FBQ0E7QUFDRDtBQUNGLEtBVEksTUFVQTtBQUNITixNQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBUztBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBVCxPQUFUO0FBQ0E7QUFDRDtBQUVGLEdBdkNIO0FBd0NELENBNUNEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uZXdfbmFtZS9EZXNrdG9wL2JyaXRpc2ggdHJhbnNsYXRvci9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBUcmFuc2xhdG9yID0gcmVxdWlyZSgnLi4vY29tcG9uZW50cy90cmFuc2xhdG9yLmpzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFwcCkge1xuICBcbiAgY29uc3QgdHJhbnNsYXRvciA9IG5ldyBUcmFuc2xhdG9yKCk7XG5cbiAgYXBwLnJvdXRlKCcvYXBpL3RyYW5zbGF0ZScpXG4gICAgLnBvc3QoKHJlcSwgcmVzKSA9PiB7XG4gICAgICBsZXQgdGV4dCA9IHJlcS5ib2R5LnRleHQ7XG4gICAgICBsZXQgbG9jYWxlID0gcmVxLmJvZHkubG9jYWxlO1xuXG4gICAgICBpZiAodGV4dCA9PT0gXCJcIikge1xuICAgICAgICByZXMuanNvbih7IGVycm9yOiAnTm8gdGV4dCB0byB0cmFuc2xhdGUnIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBlbHNlIGlmICghbG9jYWxlIHx8ICF0ZXh0KSB7XG4gICAgICAgIHJlcy5qc29uKHsgZXJyb3I6ICdSZXF1aXJlZCBmaWVsZChzKSBtaXNzaW5nJyB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAobG9jYWxlID09PSBcImFtZXJpY2FuLXRvLWJyaXRpc2hcIikge1xuICAgICAgICBsZXQgdHJhbnNsYXRpb24gPSB0cmFuc2xhdG9yLmdldEFtZXJpY2FuVHJhbnNsYXRpb24odGV4dClcbiAgICAgICAgaWYgKCF0cmFuc2xhdGlvbiB8fCB0cmFuc2xhdGlvbiA9PT0gdGV4dCkge1xuICAgICAgICAgIHJlcy5qc29uKHt0ZXh0LCB0cmFuc2xhdGlvbjogXCJFdmVyeXRoaW5nIGxvb2tzIGdvb2QgdG8gbWUhXCJ9KVxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfWVsc2Uge1xuICAgICAgICAgIHJlcy5qc29uKHt0ZXh0LCB0cmFuc2xhdGlvbn0pO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZWxzZSBpZiAobG9jYWxlID09PSBcImJyaXRpc2gtdG8tYW1lcmljYW5cIikge1xuICAgICAgICBsZXQgdHJhbnNsYXRpb24gPSB0cmFuc2xhdG9yLmdldEJyaXRpc2hUcmFuc2xhdGlvbih0ZXh0KVxuICAgICAgICBpZiAoIXRyYW5zbGF0aW9uIHx8IHRyYW5zbGF0aW9uID09PSB0ZXh0KSB7XG4gICAgICAgICAgcmVzLmpzb24oe3RleHQsIHRyYW5zbGF0aW9uOiBcIkV2ZXJ5dGhpbmcgbG9va3MgZ29vZCB0byBtZSFcIn0pXG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9ZWxzZSB7XG4gICAgICAgICAgcmVzLmpzb24oe3RleHQsIHRyYW5zbGF0aW9ufSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgcmVzLmpzb24oeyBlcnJvcjogXCJJbnZhbGlkIHZhbHVlIGZvciBsb2NhbGUgZmllbGRcIiB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgfSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "Translator",
        "require",
        "module",
        "exports",
        "app",
        "translator",
        "route",
        "post",
        "req",
        "res",
        "text",
        "body",
        "locale",
        "json",
        "error",
        "translation",
        "getAmericanTranslation",
        "getBritishTranslation"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,6BAAD,CAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAe;AAE9B,QAAMC,UAAU,GAAG,IAAIL,UAAJ,EAAnB;AAEAI,EAAAA,GAAG,CAACE,KAAJ,CAAU,gBAAV,EACGC,IADH,CACQ,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClB,QAAIC,IAAI,GAAGF,GAAG,CAACG,IAAJ,CAASD,IAApB;AACA,QAAIE,MAAM,GAAGJ,GAAG,CAACG,IAAJ,CAASC,MAAtB;;AAEA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AACfD,MAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT;AACA;AACD,KAHD,MAIK,IAAI,CAACF,MAAD,IAAW,CAACF,IAAhB,EAAsB;AACzBD,MAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT;AACA;AACD;;AAED,QAAIF,MAAM,KAAK,qBAAf,EAAsC;AACpC,UAAIG,WAAW,GAAGV,UAAU,CAACW,sBAAX,CAAkCN,IAAlC,CAAlB;;AACA,UAAI,CAACK,WAAD,IAAgBA,WAAW,KAAKL,IAApC,EAA0C;AACxCD,QAAAA,GAAG,CAACI,IAAJ,CAAS;AAACH,UAAAA,IAAD;AAAOK,UAAAA,WAAW,EAAE;AAApB,SAAT;AACA;AACD,OAHD,MAGM;AACJN,QAAAA,GAAG,CAACI,IAAJ,CAAS;AAACH,UAAAA,IAAD;AAAOK,UAAAA;AAAP,SAAT;AACA;AACD;AACF,KATD,MAUK,IAAIH,MAAM,KAAK,qBAAf,EAAsC;AACzC,UAAIG,WAAW,GAAGV,UAAU,CAACY,qBAAX,CAAiCP,IAAjC,CAAlB;;AACA,UAAI,CAACK,WAAD,IAAgBA,WAAW,KAAKL,IAApC,EAA0C;AACxCD,QAAAA,GAAG,CAACI,IAAJ,CAAS;AAACH,UAAAA,IAAD;AAAOK,UAAAA,WAAW,EAAE;AAApB,SAAT;AACA;AACD,OAHD,MAGM;AACJN,QAAAA,GAAG,CAACI,IAAJ,CAAS;AAACH,UAAAA,IAAD;AAAOK,UAAAA;AAAP,SAAT;AACA;AACD;AACF,KATI,MAUA;AACHN,MAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT;AACA;AACD;AAEF,GAvCH;AAwCD,CA5CD",
      "sourceRoot": "/Users/new_name/Desktop/british translator/routes/",
      "sourcesContent": [
        "'use strict';\n\nconst Translator = require('../components/translator.js');\n\nmodule.exports = function (app) {\n  \n  const translator = new Translator();\n\n  app.route('/api/translate')\n    .post((req, res) => {\n      let text = req.body.text;\n      let locale = req.body.locale;\n\n      if (text === \"\") {\n        res.json({ error: 'No text to translate' });\n        return;\n      }\n      else if (!locale || !text) {\n        res.json({ error: 'Required field(s) missing' });\n        return;\n      }\n\n      if (locale === \"american-to-british\") {\n        let translation = translator.getAmericanTranslation(text)\n        if (!translation || translation === text) {\n          res.json({text, translation: \"Everything looks good to me!\"})\n          return;\n        }else {\n          res.json({text, translation});\n          return;\n        }\n      }\n      else if (locale === \"british-to-american\") {\n        let translation = translator.getBritishTranslation(text)\n        if (!translation || translation === text) {\n          res.json({text, translation: \"Everything looks good to me!\"})\n          return;\n        }else {\n          res.json({text, translation});\n          return;\n        }\n      }\n      else {\n        res.json({ error: \"Invalid value for locale field\" });\n        return;\n      }\n\n    });\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1705353737843
  },
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/components/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/components/translator.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/components/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/components/translator.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/components/translator.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/components/translator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/components/",
        "sourceFileName": "translator.js"
      }
    },
    "ast": null,
    "code": "const americanOnly = require('./american-only.js');\n\nconst americanToBritishSpelling = require('./american-to-british-spelling.js');\n\nconst americanToBritishTitles = require(\"./american-to-british-titles.js\");\n\nconst britishOnly = require('./british-only.js');\n\nclass Translator {\n  reverseDict(dict) {\n    const entries = Object.entries(dict);\n    const reverseDict = entries.reduce((accumulator, [key, value]) => {\n      accumulator[value] = key;\n      return accumulator;\n    }, {});\n    return reverseDict;\n  }\n\n  tokenize(text) {\n    return text.match(/\\b(?:\\d{1,2}:\\d{2}|\\w+('\\w+)?)\\b/g) || [];\n  }\n\n  tokenizeWithPunctuation(text) {\n    return text.match(/\\b(?:\\w+('\\w+)?|\\w+),?|[^\\w\\s.]/g) || [];\n  }\n\n  getAmericanTranslation(initialText) {\n    const combineData = { ...americanOnly,\n      ...americanToBritishSpelling\n    };\n    const titleData = { ...this.reverseDict(americanToBritishTitles)\n    };\n    const words = this.tokenize(initialText);\n    const wordsWithPunc = this.tokenizeWithPunctuation(initialText);\n    let translatedText = \"\";\n    let punctuation = '';\n\n    if (initialText.match(/\\W$/)) {\n      punctuation = initialText.match(/\\W$/)[0];\n    }\n\n    for (let index = 0; index < words.length; index++) {\n      const word = words[index];\n      const wordWithPunc = wordsWithPunc[index];\n      const twoWords = `${word} ${words[index + 1]}`;\n      const threeWords = `${word} ${words[index + 1]} ${words[index + 2]}`;\n      let virgule = '';\n\n      if (wordWithPunc.match(/,$/)) {\n        virgule = ',';\n      }\n\n      if (combineData[threeWords.toLowerCase()]) {\n        translatedText += `<span class=\"highlight\">${combineData[threeWords.toLowerCase()]}</span>` + \" \";\n        index += 2;\n      } else if (combineData[twoWords.toLowerCase()]) {\n        translatedText += `<span class=\"highlight\">${combineData[twoWords.toLowerCase()]}</span>` + \" \";\n        index += 1;\n      } else if (combineData[word.toLowerCase()]) {\n        translatedText += `<span class=\"highlight\">${combineData[word.toLowerCase()]}</span>` + \" \";\n      } else if (titleData[word.toLowerCase()]) {\n        translatedText += `<span class=\"highlight\">${word}</span>` + \" \";\n      } else if (word.match(/:/)) {\n        translatedText += `<span class=\"highlight\">${word.replace(/:/, '.')}</span>` + \" \";\n      } else {\n        translatedText += word + virgule + \" \";\n        virgule = false;\n      }\n    }\n\n    return translatedText.trim() + punctuation;\n  }\n\n  tokenizeBritish(text) {\n    return text.match(/\\b(?:\\d{1,2}[:.]\\d{2}|\\w+('\\w+)?)\\b/g) || [];\n  }\n\n  getBritishTranslation(initialText) {\n    const combineData = { ...britishOnly,\n      ...this.reverseDict(americanToBritishSpelling)\n    };\n    const titleData = { ...this.reverseDict(americanToBritishTitles)\n    };\n    const words = this.tokenizeBritish(initialText);\n    const wordsWithPunc = this.tokenizeWithPunctuation(initialText);\n    let translatedText = \"\";\n    let punctuation = '';\n\n    if (initialText.match(/\\W$/)) {\n      punctuation = initialText.match(/\\W$/)[0];\n    }\n\n    for (let index = 0; index < words.length; index++) {\n      const word = words[index];\n      const wordWithPunc = wordsWithPunc[index];\n      const twoWords = `${word} ${words[index + 1]}`;\n      const threeWords = `${word} ${words[index + 1]} ${words[index + 2]}`;\n      let virgule = '';\n\n      if (wordWithPunc.match(/,$/)) {\n        virgule = ',';\n      }\n\n      if (combineData[threeWords.toLowerCase()]) {\n        translatedText += `<span class=\"highlight\">${combineData[threeWords.toLowerCase()]}</span>` + \" \";\n        index += 2;\n      } else if (combineData[twoWords.toLowerCase()]) {\n        translatedText += `<span class=\"highlight\">${combineData[twoWords.toLowerCase()]}</span>` + \" \";\n        index += 1;\n      } else if (combineData[word.toLowerCase()]) {\n        translatedText += `<span class=\"highlight\">${combineData[word.toLowerCase()]}</span>` + \" \";\n      } else if (titleData[word.toLowerCase()]) {\n        translatedText += `<span class=\"highlight\">${word}.</span>` + \" \";\n      } else if (word.match(/\\b\\d{1,2}[.]\\d{2}\\b/)) {\n        translatedText += `<span class=\"highlight\">${word.replace(/\\./, ':')}</span>` + \" \";\n      } else {\n        translatedText += word + virgule + \" \";\n        virgule = false;\n      }\n    }\n\n    return translatedText.trim() + punctuation;\n  }\n\n}\n\nmodule.exports = Translator;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "translator.js"
      ],
      "names": [
        "americanOnly",
        "require",
        "americanToBritishSpelling",
        "americanToBritishTitles",
        "britishOnly",
        "Translator",
        "reverseDict",
        "dict",
        "entries",
        "Object",
        "reduce",
        "accumulator",
        "key",
        "value",
        "tokenize",
        "text",
        "match",
        "tokenizeWithPunctuation",
        "getAmericanTranslation",
        "initialText",
        "combineData",
        "titleData",
        "words",
        "wordsWithPunc",
        "translatedText",
        "punctuation",
        "index",
        "length",
        "word",
        "wordWithPunc",
        "twoWords",
        "threeWords",
        "virgule",
        "toLowerCase",
        "replace",
        "trim",
        "tokenizeBritish",
        "getBritishTranslation",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/new_name/Desktop/british translator/components/",
      "sourcesContent": [
        "const americanOnly = require('./american-only.js');\nconst americanToBritishSpelling = require('./american-to-british-spelling.js');\nconst americanToBritishTitles = require(\"./american-to-british-titles.js\")\nconst britishOnly = require('./british-only.js')\n\nclass Translator {\n\n    reverseDict(dict) {\n        const entries = Object.entries(dict);\n        const reverseDict = entries.reduce((accumulator, [key, value]) => {\n            accumulator[value] = key;\n            return accumulator;\n        }, {});\n\n        return reverseDict;\n    }\n\n    tokenize(text) {\n        return text.match(/\\b(?:\\d{1,2}:\\d{2}|\\w+('\\w+)?)\\b/g) || [];\n    }\n    tokenizeWithPunctuation(text) {\n        return text.match(/\\b(?:\\w+('\\w+)?|\\w+),?|[^\\w\\s.]/g) || [];\n    }\n\n\n    getAmericanTranslation(initialText) {\n        const combineData = {...americanOnly, ...americanToBritishSpelling};\n        const titleData = {...this.reverseDict(americanToBritishTitles)};\n        const words = this.tokenize(initialText);\n        const wordsWithPunc = this.tokenizeWithPunctuation(initialText);\n        let translatedText = \"\";\n        let punctuation = '';\n\n        if (initialText.match(/\\W$/)) {\n            punctuation = initialText.match(/\\W$/)[0];\n        }\n\n        for (let index = 0; index < words.length; index++) {\n            const word = words[index];\n            const wordWithPunc = wordsWithPunc[index];\n            const twoWords = `${word} ${words[index + 1]}`;\n            const threeWords = `${word} ${words[index + 1]} ${words[index + 2]}`;\n            let virgule = '';\n\n            if (wordWithPunc.match(/,$/)) {\n                virgule = ','\n            }\n\n            if (combineData[threeWords.toLowerCase()]) {\n                translatedText += `<span class=\"highlight\">${combineData[threeWords.toLowerCase()]}</span>` + \" \";\n                index += 2;\n            }else if (combineData[twoWords.toLowerCase()]) {\n                translatedText += `<span class=\"highlight\">${combineData[twoWords.toLowerCase()]}</span>` + \" \";\n                index += 1;\n            }else if (combineData[word.toLowerCase()]) {\n                translatedText += `<span class=\"highlight\">${combineData[word.toLowerCase()]}</span>` + \" \";\n            }else if (titleData[word.toLowerCase()]) {\n                translatedText += `<span class=\"highlight\">${word}</span>` + \" \";\n            }else if (word.match(/:/)) {\n                translatedText += `<span class=\"highlight\">${word.replace(/:/, '.')}</span>` + \" \";\n            }\n            \n            else {\n                translatedText += word + virgule + \" \";\n                virgule = false;\n            }\n\n        }\n        return translatedText.trim() + punctuation;\n    }\n\n    tokenizeBritish(text) {\n        return text.match(/\\b(?:\\d{1,2}[:.]\\d{2}|\\w+('\\w+)?)\\b/g) || [];\n    }\n\n    getBritishTranslation(initialText) {\n        const combineData = {...britishOnly, ...this.reverseDict(americanToBritishSpelling)};\n        const titleData = {...this.reverseDict(americanToBritishTitles)};\n        const words = this.tokenizeBritish(initialText);\n        const wordsWithPunc = this.tokenizeWithPunctuation(initialText);\n        let translatedText = \"\";\n        let punctuation = '';\n\n        if (initialText.match(/\\W$/)) {\n            punctuation = initialText.match(/\\W$/)[0];\n        }\n\n        for (let index = 0; index < words.length; index++) {\n            const word = words[index];\n            const wordWithPunc = wordsWithPunc[index];\n            const twoWords = `${word} ${words[index + 1]}`;\n            const threeWords = `${word} ${words[index + 1]} ${words[index + 2]}`;\n            let virgule = '';\n\n            if (wordWithPunc.match(/,$/)) {\n                virgule = ','\n            }\n\n            if (combineData[threeWords.toLowerCase()]) {\n                translatedText += `<span class=\"highlight\">${combineData[threeWords.toLowerCase()]}</span>` + \" \";\n                index += 2;\n            }else if (combineData[twoWords.toLowerCase()]) {\n                translatedText += `<span class=\"highlight\">${combineData[twoWords.toLowerCase()]}</span>` + \" \";\n                index += 1;\n            }else if (combineData[word.toLowerCase()]) {\n                translatedText += `<span class=\"highlight\">${combineData[word.toLowerCase()]}</span>` + \" \";\n            }else if (titleData[word.toLowerCase()]) {\n                translatedText += `<span class=\"highlight\">${word}.</span>` + \" \";\n            }else if (word.match(/\\b\\d{1,2}[.]\\d{2}\\b/)) {\n                translatedText += `<span class=\"highlight\">${word.replace(/\\./, ':')}</span>` + \" \";\n            }\n            \n            else {\n                translatedText += word + virgule + \" \";\n                virgule = false;\n            }\n\n        }\n        return translatedText.trim() + punctuation;\n    }  \n}\n\nmodule.exports = Translator;"
      ]
    },
    "sourceType": "module",
    "mtime": 1705444549974
  },
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/components/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/components/american-only.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/components/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/components/american-only.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/components/american-only.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/components/american-only.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/components/",
        "sourceFileName": "american-only.js"
      }
    },
    "ast": null,
    "code": "module.exports = {\n  \"acclimate\": \"acclimatise\",\n  \"acetaminophen\": \"paracetamol\",\n  \"baby carriage\": \"pram\",\n  \"backhoe\": \"digger\",\n  \"band-aid\": \"Elastoplast\",\n  \"bangs\": \"fringe\",\n  \"barrette\": \"hair slide\",\n  \"baseboard\": \"skirting board\",\n  \"bedroom community\": \"dormitory town\",\n  \"blacktop\": \"tarmac\",\n  \"bleachers\": \"stands\",\n  \"blinders\": \"blinkers\",\n  \"blood sausage\": \"black pudding\",\n  \"boardwalk\": \"promenade\",\n  \"bobby pin\": \"Kirby grip\",\n  \"booger\": \"bogey\",\n  \"bookmobile\": \"mobile library\",\n  \"breadbox\": \"bread bin\",\n  \"bullhorn\": \"loudhailer\",\n  \"burglarize\": \"burgle\",\n  \"burlap\": \"hessian\",\n  \"canadian bacon\": \"back bacon\",\n  \"candy apple\": \"toffee apple\",\n  \"candied apple\": \"toffee apple\",\n  \"careen\": \"career\",\n  \"catsup\": \"ketchup\",\n  \"cell phone\": \"mobile\",\n  \"cellphone\": \"mobile\",\n  \"certified mail\": \"recorded delivery\",\n  \"chapstick\": \"lip balm\",\n  \"charge account\": \"credit account\",\n  \"checkers\": \"draughts\",\n  \"checking account\": \"current account\",\n  \"cilantro\": \"coriander\",\n  \"cleats\": \"football boots\",\n  \"condo\": \"flat\",\n  \"costume party\": \"fancy-dress party\",\n  \"cotton candy\": \"candy floss\",\n  \"counterclockwise\": \"anti-clockwise\",\n  \"coveralls\": \"overalls\",\n  \"diaper\": \"nappy\",\n  \"discombobulated\": \"discomposed\",\n  \"dish towel\": \"tea towel\",\n  \"dishrag\": \"dishcloth\",\n  \"dish soap\": \"washing-up liquid\",\n  \"dishwashing liquid\": \"washing-up liquid\",\n  \"district attorney\": \"Crown Prosecutor\",\n  \"divided highway\": \"dual carriageway\",\n  \"doohickey\": \"wotsit\",\n  \"downspout\": \"drainpipe\",\n  \"drape\": \"curtain\",\n  \"drapes\": \"curtain\",\n  \"driver license\": \"driving licence\",\n  \"driver's license\": \"driving licence\",\n  \"drugstore\": \"chemist\",\n  \"drywall\": \"plasterboard\",\n  \"dumpster\": \"skip\",\n  \"eggplant\": \"aubergine\",\n  \"emergency brake\": \"handbrake\",\n  \"eminent domain\": \"compulsory purchase\",\n  \"envision\": \"to envisage\",\n  \"eraser\": \"rubber\",\n  \"expressway\": \"motorway\",\n  \"fanny pack\": \"bum bag\",\n  \"faucet\": \"tap\",\n  \"flashlight\": \"torch\",\n  \"flatware\": \"cutlery\",\n  \"freeway\": \"motorway\",\n  \"fries\": \"chips\",\n  \"french fries\": \"chips\",\n  \"french press\": \"cafetière\",\n  \"freshman\": \"fresher\",\n  \"front desk\": \"reception\",\n  \"frosting\": \"icing\",\n  \"garbage can\": \"dustbin\",\n  \"gasoline\": \"petrol\",\n  \"general delivery\": \"poste restante\",\n  \"grifter\": \"con man\",\n  \"ground beef\": \"mince\",\n  \"grunt\": \"squaddie\",\n  \"hard candy\": \"boiled sweets\",\n  \"heavy cream\": \"double cream\",\n  \"jackhammer\": \"pneumatic drill\",\n  \"jell-o\": \"jelly\",\n  \"ladybug\": \"ladybird\",\n  \"laundromat\": \"laundrette\",\n  \"learner's permit\": \"provisional driving licence\",\n  \"license plate\": \"number plate\",\n  \"license tag\": \"number plate\",\n  \"mail carrier\": \"postal worker\",\n  \"mailman\": \"postman\",\n  \"main street\": \"high street\",\n  \"mama\": \"mam\",\n  \"mamma\": \"mam\",\n  \"momma\": \"mam\",\n  \"mom\": \"mum\",\n  \"mass transit\": \"public transport\",\n  \"math\": \"maths\",\n  \"mohawk\": \"mohican\",\n  \"mortician\": \"undertaker\",\n  \"narc\": \"grass\",\n  \"nightcrawler\": \"earthworm\",\n  \"nightstick\": \"truncheon\",\n  \"nix\": \"cancel\",\n  \"obligated\": \"obliged\",\n  \"off-the-rack\": \"off-the-peg\",\n  \"oftentimes\": \"often\",\n  \"overpass\": \"flyover\",\n  \"pantyhose\": \"tights\",\n  \"paper route\": \"paper round\",\n  \"parking garage\": \"car park\",\n  \"parking lot\": \"car park\",\n  \"penitentiary\": \"prison\",\n  \"plastic wrap\": \"cling-film\",\n  \"play hooky\": \"bunk off\",\n  \"plexiglas\": \"Perspex\",\n  \"popsicle\": \"ice lolly\",\n  \"powdered sugar\": \"icing sugar\",\n  \"pre-authorized payment\": \"direct debit\",\n  \"pre-authorized withdrawal\": \"direct debit\",\n  \"public holiday\": \"bank holiday\",\n  \"rappel\": \"abseil\",\n  \"realtor\": \"estate agent\",\n  \"rif\": \"redundancy\",\n  \"rif'd\": \"made redundant\",\n  \"rowhouse\": \"terraced house\",\n  \"rube goldberg device\": \"Heath Robinson device\",\n  \"rube goldberg machine\": \"Heath Robinson device\",\n  \"rugola\": \"rocket\",\n  \"rutabaga\": \"swede\",\n  \"rv\": \"caravan\",\n  \"rv park\": \"caravan site\",\n  \"saran wrap\": \"cling film\",\n  \"scads\": \"great amounts\",\n  \"scallion\": \"spring onion\",\n  \"scalper\": \"ticket tout\",\n  \"scotch tape\": \"Sellotape\",\n  \"scuttlebutt\": \"rumour\",\n  \"sedan automobile\": \"saloon\",\n  \"self-rising flour\": \"self-raising flour\",\n  \"shredded cheese\": \"grated cheese\",\n  \"sidewalk\": \"pavement\",\n  \"skim milk\": \"skimmed milk\",\n  \"sneaker\": \"trainer\",\n  \"sneakers\": \"trainers\",\n  \"snuck\": \"sneaked\",\n  \"soccer\": \"football\",\n  \"soda pop\": \"soft drink\",\n  \"specialty\": \"speciality\",\n  \"spelunking\": \"caving\",\n  \"spring break\": \"Easter holiday\",\n  \"station wagon\": \"estate car\",\n  \"steam shovel\": \"digger\",\n  \"stickshift\": \"gear stick\",\n  \"stool pigeon\": \"grass\",\n  \"stoolie\": \"grass\",\n  \"stop light\": \"traffic light\",\n  \"streetcar\": \"tram\",\n  \"stroller\": \"pram\",\n  \"swap meet\": \"car boot sale\",\n  \"sweatpants\": \"track bottoms\",\n  \"tailpipe\": \"exhaust pipe\",\n  \"takeout\": \"takeaway\",\n  \"teleprompter\": \"compare autocue\",\n  \"thumbtack\": \"drawing pin\",\n  \"track meet\": \"athletics meeting\",\n  \"trash\": \"rubbish\",\n  \"trashcan\": \"bin\",\n  \"travel trailer\": \"caravan\",\n  \"turn signal\": \"turn-indicators\",\n  \"tylenol\": \"paracetamol\",\n  \"upscale\": \"upmarket\",\n  \"vacationer\": \"holidaymaker\",\n  \"vacay\": \"hols\",\n  \"variety meats\": \"offal\",\n  \"varmint\": \"vermin\",\n  \"varmit\": \"vermin\",\n  \"wastebasket\": \"wastepaper basket\",\n  \"windshield\": \"windscreen\",\n  \"yellow light\": \"amber\",\n  \"zip code\": \"postcode\",\n  \"zipper\": \"zip\",\n  \"zucchini\": \"courgette\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "american-only.js"
      ],
      "names": [
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/new_name/Desktop/british translator/components/",
      "sourcesContent": [
        "module.exports = {\n  \"acclimate\": \"acclimatise\",\n  \"acetaminophen\": \"paracetamol\",\n  \"baby carriage\": \"pram\",\n  \"backhoe\": \"digger\",\n  \"band-aid\": \"Elastoplast\",\n  \"bangs\": \"fringe\",\n  \"barrette\": \"hair slide\",\n  \"baseboard\": \"skirting board\",\n  \"bedroom community\": \"dormitory town\",\n  \"blacktop\": \"tarmac\",\n  \"bleachers\": \"stands\",\n  \"blinders\": \"blinkers\",\n  \"blood sausage\": \"black pudding\",\n  \"boardwalk\": \"promenade\",\n  \"bobby pin\": \"Kirby grip\",\n  \"booger\": \"bogey\",\n  \"bookmobile\": \"mobile library\",\n  \"breadbox\": \"bread bin\",\n  \"bullhorn\": \"loudhailer\",\n  \"burglarize\": \"burgle\",\n  \"burlap\": \"hessian\",\n  \"canadian bacon\": \"back bacon\",\n  \"candy apple\": \"toffee apple\",\n  \"candied apple\": \"toffee apple\",\n  \"careen\": \"career\",\n  \"catsup\": \"ketchup\",\n  \"cell phone\": \"mobile\",\n  \"cellphone\": \"mobile\",\n  \"certified mail\": \"recorded delivery\",\n  \"chapstick\": \"lip balm\",\n  \"charge account\": \"credit account\",\n  \"checkers\": \"draughts\",\n  \"checking account\": \"current account\",\n  \"cilantro\": \"coriander\",\n  \"cleats\": \"football boots\",\n  \"condo\": \"flat\",\n  \"costume party\": \"fancy-dress party\",\n  \"cotton candy\": \"candy floss\",\n  \"counterclockwise\": \"anti-clockwise\",\n  \"coveralls\": \"overalls\",\n  \"diaper\": \"nappy\",\n  \"discombobulated\": \"discomposed\",\n  \"dish towel\": \"tea towel\",\n  \"dishrag\": \"dishcloth\",\n  \"dish soap\": \"washing-up liquid\",\n  \"dishwashing liquid\": \"washing-up liquid\",\n  \"district attorney\": \"Crown Prosecutor\",\n  \"divided highway\": \"dual carriageway\",\n  \"doohickey\": \"wotsit\",\n  \"downspout\": \"drainpipe\",\n  \"drape\": \"curtain\",\n  \"drapes\": \"curtain\",\n  \"driver license\": \"driving licence\",\n  \"driver's license\": \"driving licence\",\n  \"drugstore\": \"chemist\",\n  \"drywall\": \"plasterboard\",\n  \"dumpster\": \"skip\",\n  \"eggplant\": \"aubergine\",\n  \"emergency brake\": \"handbrake\",\n  \"eminent domain\": \"compulsory purchase\",\n  \"envision\": \"to envisage\",\n  \"eraser\": \"rubber\",\n  \"expressway\": \"motorway\",\n  \"fanny pack\": \"bum bag\",\n  \"faucet\": \"tap\",\n  \"flashlight\": \"torch\",\n  \"flatware\": \"cutlery\",\n  \"freeway\": \"motorway\",\n  \"fries\": \"chips\",\n  \"french fries\": \"chips\",\n  \"french press\": \"cafetière\",\n  \"freshman\": \"fresher\",\n  \"front desk\": \"reception\",\n  \"frosting\": \"icing\",\n  \"garbage can\": \"dustbin\",\n  \"gasoline\": \"petrol\",\n  \"general delivery\": \"poste restante\",\n  \"grifter\": \"con man\",\n  \"ground beef\": \"mince\",\n  \"grunt\": \"squaddie\",\n  \"hard candy\": \"boiled sweets\",\n  \"heavy cream\": \"double cream\",\n  \"jackhammer\": \"pneumatic drill\",\n  \"jell-o\": \"jelly\",\n  \"ladybug\": \"ladybird\",\n  \"laundromat\": \"laundrette\",\n  \"learner's permit\": \"provisional driving licence\",\n  \"license plate\": \"number plate\",\n  \"license tag\": \"number plate\",\n  \"mail carrier\": \"postal worker\",\n  \"mailman\": \"postman\",\n  \"main street\": \"high street\",\n  \"mama\": \"mam\",\n  \"mamma\": \"mam\",\n  \"momma\": \"mam\",\n  \"mom\": \"mum\",\n  \"mass transit\": \"public transport\",\n  \"math\": \"maths\",\n  \"mohawk\": \"mohican\",\n  \"mortician\": \"undertaker\",\n  \"narc\": \"grass\",\n  \"nightcrawler\": \"earthworm\",\n  \"nightstick\": \"truncheon\",\n  \"nix\": \"cancel\",\n  \"obligated\": \"obliged\",\n  \"off-the-rack\": \"off-the-peg\",\n  \"oftentimes\": \"often\",\n  \"overpass\": \"flyover\",\n  \"pantyhose\": \"tights\",\n  \"paper route\": \"paper round\",\n  \"parking garage\": \"car park\",\n  \"parking lot\": \"car park\",\n  \"penitentiary\": \"prison\",\n  \"plastic wrap\": \"cling-film\",\n  \"play hooky\": \"bunk off\",\n  \"plexiglas\": \"Perspex\",\n  \"popsicle\": \"ice lolly\",\n  \"powdered sugar\": \"icing sugar\",\n  \"pre-authorized payment\": \"direct debit\",\n  \"pre-authorized withdrawal\": \"direct debit\",\n  \"public holiday\": \"bank holiday\",\n  \"rappel\": \"abseil\",\n  \"realtor\": \"estate agent\",\n  \"rif\": \"redundancy\",\n  \"rif'd\": \"made redundant\",\n  \"rowhouse\": \"terraced house\",\n  \"rube goldberg device\": \"Heath Robinson device\",\n  \"rube goldberg machine\": \"Heath Robinson device\",\n  \"rugola\": \"rocket\",\n  \"rutabaga\": \"swede\",\n  \"rv\": \"caravan\",\n  \"rv park\": \"caravan site\",\n  \"saran wrap\": \"cling film\",\n  \"scads\": \"great amounts\",\n  \"scallion\": \"spring onion\",\n  \"scalper\": \"ticket tout\",\n  \"scotch tape\": \"Sellotape\",\n  \"scuttlebutt\": \"rumour\",\n  \"sedan automobile\": \"saloon\",\n  \"self-rising flour\": \"self-raising flour\",\n  \"shredded cheese\": \"grated cheese\",\n  \"sidewalk\": \"pavement\",\n  \"skim milk\": \"skimmed milk\",\n  \"sneaker\": \"trainer\",\n  \"sneakers\": \"trainers\",\n  \"snuck\": \"sneaked\",\n  \"soccer\": \"football\",\n  \"soda pop\": \"soft drink\",\n  \"specialty\": \"speciality\",\n  \"spelunking\": \"caving\",\n  \"spring break\": \"Easter holiday\",\n  \"station wagon\": \"estate car\",\n  \"steam shovel\": \"digger\",\n  \"stickshift\": \"gear stick\",\n  \"stool pigeon\": \"grass\",\n  \"stoolie\": \"grass\",\n  \"stop light\": \"traffic light\",\n  \"streetcar\": \"tram\",\n  \"stroller\": \"pram\",\n  \"swap meet\": \"car boot sale\",\n  \"sweatpants\": \"track bottoms\",\n  \"tailpipe\": \"exhaust pipe\",\n  \"takeout\": \"takeaway\",\n  \"teleprompter\": \"compare autocue\",\n  \"thumbtack\": \"drawing pin\",\n  \"track meet\": \"athletics meeting\",\n  \"trash\": \"rubbish\",\n  \"trashcan\": \"bin\",\n  \"travel trailer\": \"caravan\",\n  \"turn signal\": \"turn-indicators\",\n  \"tylenol\": \"paracetamol\",\n  \"upscale\": \"upmarket\",\n  \"vacationer\": \"holidaymaker\",\n  \"vacay\": \"hols\",\n  \"variety meats\": \"offal\",\n  \"varmint\": \"vermin\",\n  \"varmit\": \"vermin\",\n  \"wastebasket\": \"wastepaper basket\",\n  \"windshield\": \"windscreen\",\n  \"yellow light\": \"amber\",\n  \"zip code\": \"postcode\",\n  \"zipper\": \"zip\",\n  \"zucchini\": \"courgette\"\n}\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1705335515271
  },
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/components/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/components/american-to-british-spelling.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/components/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/components/american-to-british-spelling.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/components/american-to-british-spelling.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/components/american-to-british-spelling.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/components/",
        "sourceFileName": "american-to-british-spelling.js"
      }
    },
    "ast": null,
    "code": "module.exports = {\n  \"accessorize\": \"accessorise\",\n  \"accessorized\": \"accessorised\",\n  \"accessorizes\": \"accessorises\",\n  \"accessorizing\": \"accessorising\",\n  \"acclimatization\": \"acclimatisation\",\n  \"acclimatize\": \"acclimatise\",\n  \"acclimatized\": \"acclimatised\",\n  \"acclimatizes\": \"acclimatises\",\n  \"acclimatizing\": \"acclimatising\",\n  \"accouterments\": \"accoutrements\",\n  \"eon\": \"aeon\",\n  \"eons\": \"aeons\",\n  \"aerogram\": \"aerogramme\",\n  \"aerograms\": \"aerogrammes\",\n  \"airplane\": \"aeroplane\",\n  \"airplanes\": \"aeroplanes\",\n  \"etiology\": \"aetiology\",\n  \"aging\": \"ageing\",\n  \"aggrandizement\": \"aggrandisement\",\n  \"agonize\": \"agonise\",\n  \"agonized\": \"agonised\",\n  \"agonizes\": \"agonises\",\n  \"agonizing\": \"agonising\",\n  \"agonizingly\": \"agonisingly\",\n  \"almanac\": \"almanack\",\n  \"almanacs\": \"almanacks\",\n  \"aluminum\": \"aluminium\",\n  \"amortizable\": \"amortisable\",\n  \"amortization\": \"amortisation\",\n  \"amortizations\": \"amortisations\",\n  \"amortize\": \"amortise\",\n  \"amortized\": \"amortised\",\n  \"amortizes\": \"amortises\",\n  \"amortizing\": \"amortising\",\n  \"amphitheater\": \"amphitheatre\",\n  \"amphitheaters\": \"amphitheatres\",\n  \"anemia\": \"anaemia\",\n  \"anemic\": \"anaemic\",\n  \"anesthesia\": \"anaesthesia\",\n  \"anesthetic\": \"anaesthetic\",\n  \"anesthetics\": \"anaesthetics\",\n  \"anesthetize\": \"anaesthetize\",\n  \"anesthetized\": \"anaesthetized\",\n  \"anesthetizes\": \"anaesthetizes\",\n  \"anesthetizing\": \"anaesthetizing\",\n  \"anesthetist\": \"anaesthetist\",\n  \"anesthetists\": \"anaesthetists\",\n  \"analog\": \"analogue\",\n  \"analogs\": \"analogues\",\n  \"analyze\": \"analyse\",\n  \"analyzed\": \"analysed\",\n  \"analyzes\": \"analyses\",\n  \"analyzing\": \"analysing\",\n  \"anglicize\": \"anglicise\",\n  \"anglicized\": \"anglicised\",\n  \"anglicizes\": \"anglicises\",\n  \"anglicizing\": \"anglicising\",\n  \"annualized\": \"annualised\",\n  \"antagonize\": \"antagonise\",\n  \"antagonized\": \"antagonised\",\n  \"antagonizes\": \"antagonises\",\n  \"antagonizing\": \"antagonising\",\n  \"apologize\": \"apologise\",\n  \"apologized\": \"apologised\",\n  \"apologizes\": \"apologises\",\n  \"apologizing\": \"apologising\",\n  \"appall\": \"appal\",\n  \"appalls\": \"appals\",\n  \"appetizer\": \"appetiser\",\n  \"appetizers\": \"appetisers\",\n  \"appetizing\": \"appetising\",\n  \"appetizingly\": \"appetisingly\",\n  \"arbor\": \"arbour\",\n  \"arbors\": \"arbours\",\n  \"archeological\": \"archaeological\",\n  \"archeologically\": \"archaeologically\",\n  \"archeologist\": \"archaeologist\",\n  \"archeologists\": \"archaeologists\",\n  \"archeology\": \"archaeology\",\n  \"ardor\": \"ardour\",\n  \"armor\": \"armour\",\n  \"armored\": \"armoured\",\n  \"armorer\": \"armourer\",\n  \"armorers\": \"armourers\",\n  \"armories\": \"armouries\",\n  \"armory\": \"armoury\",\n  \"artifact\": \"artefact\",\n  \"artifacts\": \"artefacts\",\n  \"authorize\": \"authorise\",\n  \"authorized\": \"authorised\",\n  \"authorizes\": \"authorises\",\n  \"authorizing\": \"authorising\",\n  \"ax\": \"axe\",\n  \"backpedaled\": \"backpedalled\",\n  \"backpedaling\": \"backpedalling\",\n  \"banister\": \"bannister\",\n  \"banisters\": \"bannisters\",\n  \"baptize\": \"baptise\",\n  \"baptized\": \"baptised\",\n  \"baptizes\": \"baptises\",\n  \"baptizing\": \"baptising\",\n  \"battleax\": \"battleaxe\",\n  \"balk\": \"baulk\",\n  \"balked\": \"baulked\",\n  \"balking\": \"baulking\",\n  \"balks\": \"baulks\",\n  \"bedeviled\": \"bedevilled\",\n  \"bedeviling\": \"bedevilling\",\n  \"behavior\": \"behaviour\",\n  \"behavioral\": \"behavioural\",\n  \"behaviorism\": \"behaviourism\",\n  \"behaviorist\": \"behaviourist\",\n  \"behaviorists\": \"behaviourists\",\n  \"behaviors\": \"behaviours\",\n  \"behoove\": \"behove\",\n  \"behooved\": \"behoved\",\n  \"behooves\": \"behoves\",\n  \"bejeweled\": \"bejewelled\",\n  \"belabor\": \"belabour\",\n  \"belabored\": \"belaboured\",\n  \"belaboring\": \"belabouring\",\n  \"belabors\": \"belabours\",\n  \"beveled\": \"bevelled\",\n  \"bevies\": \"bevvies\",\n  \"bevy\": \"bevvy\",\n  \"biased\": \"biassed\",\n  \"biasing\": \"biassing\",\n  \"binging\": \"bingeing\",\n  \"bougainvillea\": \"bougainvillaea\",\n  \"bougainvilleas\": \"bougainvillaeas\",\n  \"bowdlerize\": \"bowdlerise\",\n  \"bowdlerized\": \"bowdlerised\",\n  \"bowdlerizes\": \"bowdlerises\",\n  \"bowdlerizing\": \"bowdlerising\",\n  \"breathalyze\": \"breathalyse\",\n  \"breathalyzed\": \"breathalysed\",\n  \"breathalyzer\": \"breathalyser\",\n  \"breathalyzers\": \"breathalysers\",\n  \"breathalyzes\": \"breathalyses\",\n  \"breathalyzing\": \"breathalysing\",\n  \"brutalize\": \"brutalise\",\n  \"brutalized\": \"brutalised\",\n  \"brutalizes\": \"brutalises\",\n  \"brutalizing\": \"brutalising\",\n  \"busses\": \"buses\",\n  \"bussing\": \"busing\",\n  \"cesarean\": \"caesarean\",\n  \"cesareans\": \"caesareans\",\n  \"caliber\": \"calibre\",\n  \"calibers\": \"calibres\",\n  \"caliper\": \"calliper\",\n  \"calipers\": \"callipers\",\n  \"calisthenics\": \"callisthenics\",\n  \"canalize\": \"canalise\",\n  \"canalized\": \"canalised\",\n  \"canalizes\": \"canalises\",\n  \"canalizing\": \"canalising\",\n  \"canceled\": \"cancelled\",\n  \"canceling\": \"cancelling\",\n  \"candor\": \"candour\",\n  \"cannibalize\": \"cannibalise\",\n  \"cannibalized\": \"cannibalised\",\n  \"cannibalizes\": \"cannibalises\",\n  \"cannibalizing\": \"cannibalising\",\n  \"canonize\": \"canonise\",\n  \"canonized\": \"canonised\",\n  \"canonizes\": \"canonises\",\n  \"canonizing\": \"canonising\",\n  \"capitalize\": \"capitalise\",\n  \"capitalized\": \"capitalised\",\n  \"capitalizes\": \"capitalises\",\n  \"capitalizing\": \"capitalising\",\n  \"caramelize\": \"caramelise\",\n  \"caramelized\": \"caramelised\",\n  \"caramelizes\": \"caramelises\",\n  \"caramelizing\": \"caramelising\",\n  \"carbonize\": \"carbonise\",\n  \"carbonized\": \"carbonised\",\n  \"carbonizes\": \"carbonises\",\n  \"carbonizing\": \"carbonising\",\n  \"caroled\": \"carolled\",\n  \"caroling\": \"carolling\",\n  \"catalog\": \"catalogue\",\n  \"cataloged\": \"catalogued\",\n  \"catalogs\": \"catalogues\",\n  \"cataloging\": \"cataloguing\",\n  \"catalyze\": \"catalyse\",\n  \"catalyzed\": \"catalysed\",\n  \"catalyzes\": \"catalyses\",\n  \"catalyzing\": \"catalysing\",\n  \"categorize\": \"categorise\",\n  \"categorized\": \"categorised\",\n  \"categorizes\": \"categorises\",\n  \"categorizing\": \"categorising\",\n  \"cauterize\": \"cauterise\",\n  \"cauterized\": \"cauterised\",\n  \"cauterizes\": \"cauterises\",\n  \"cauterizing\": \"cauterising\",\n  \"caviled\": \"cavilled\",\n  \"caviling\": \"cavilling\",\n  \"centigram\": \"centigramme\",\n  \"centigrams\": \"centigrammes\",\n  \"centiliter\": \"centilitre\",\n  \"centiliters\": \"centilitres\",\n  \"centimeter\": \"centimetre\",\n  \"centimeters\": \"centimetres\",\n  \"centralize\": \"centralise\",\n  \"centralized\": \"centralised\",\n  \"centralizes\": \"centralises\",\n  \"centralizing\": \"centralising\",\n  \"center\": \"centre\",\n  \"centered\": \"centred\",\n  \"centerfold\": \"centrefold\",\n  \"centerfolds\": \"centrefolds\",\n  \"centerpiece\": \"centrepiece\",\n  \"centerpieces\": \"centrepieces\",\n  \"centers\": \"centres\",\n  \"channeled\": \"channelled\",\n  \"channeling\": \"channelling\",\n  \"characterize\": \"characterise\",\n  \"characterized\": \"characterised\",\n  \"characterizes\": \"characterises\",\n  \"characterizing\": \"characterising\",\n  \"check\": \"cheque\",\n  \"checkbook\": \"chequebook\",\n  \"checkbooks\": \"chequebooks\",\n  \"checkered\": \"chequered\",\n  \"checks\": \"cheques\",\n  \"chili\": \"chilli\",\n  \"chimera\": \"chimaera\",\n  \"chimeras\": \"chimaeras\",\n  \"chiseled\": \"chiselled\",\n  \"chiseling\": \"chiselling\",\n  \"circularize\": \"circularise\",\n  \"circularized\": \"circularised\",\n  \"circularizes\": \"circularises\",\n  \"circularizing\": \"circularising\",\n  \"civilize\": \"civilise\",\n  \"civilized\": \"civilised\",\n  \"civilizes\": \"civilises\",\n  \"civilizing\": \"civilising\",\n  \"clamor\": \"clamour\",\n  \"clamored\": \"clamoured\",\n  \"clamoring\": \"clamouring\",\n  \"clamors\": \"clamours\",\n  \"clangor\": \"clangour\",\n  \"clarinetist\": \"clarinettist\",\n  \"clarinetists\": \"clarinettists\",\n  \"collectivize\": \"collectivise\",\n  \"collectivized\": \"collectivised\",\n  \"collectivizes\": \"collectivises\",\n  \"collectivizing\": \"collectivising\",\n  \"colonization\": \"colonisation\",\n  \"colonize\": \"colonise\",\n  \"colonized\": \"colonised\",\n  \"colonizer\": \"coloniser\",\n  \"colonizers\": \"colonisers\",\n  \"colonizes\": \"colonises\",\n  \"colonizing\": \"colonising\",\n  \"color\": \"colour\",\n  \"colorant\": \"colourant\",\n  \"colorants\": \"colourants\",\n  \"colored\": \"coloured\",\n  \"coloreds\": \"coloureds\",\n  \"colorful\": \"colourful\",\n  \"colorfully\": \"colourfully\",\n  \"coloring\": \"colouring\",\n  \"colorize\": \"colourize\",\n  \"colorized\": \"colourized\",\n  \"colorizes\": \"colourizes\",\n  \"colorizing\": \"colourizing\",\n  \"colorless\": \"colourless\",\n  \"colors\": \"colours\",\n  \"commercialize\": \"commercialise\",\n  \"commercialized\": \"commercialised\",\n  \"commercializes\": \"commercialises\",\n  \"commercializing\": \"commercialising\",\n  \"compartmentalize\": \"compartmentalise\",\n  \"compartmentalized\": \"compartmentalised\",\n  \"compartmentalizes\": \"compartmentalises\",\n  \"compartmentalizing\": \"compartmentalising\",\n  \"computerize\": \"computerise\",\n  \"computerized\": \"computerised\",\n  \"computerizes\": \"computerises\",\n  \"computerizing\": \"computerising\",\n  \"conceptualize\": \"conceptualise\",\n  \"conceptualized\": \"conceptualised\",\n  \"conceptualizes\": \"conceptualises\",\n  \"conceptualizing\": \"conceptualising\",\n  \"connection\": \"connexion\",\n  \"connections\": \"connexions\",\n  \"contextualize\": \"contextualise\",\n  \"contextualized\": \"contextualised\",\n  \"contextualizes\": \"contextualises\",\n  \"contextualizing\": \"contextualising\",\n  \"cozier\": \"cosier\",\n  \"cozies\": \"cosies\",\n  \"coziest\": \"cosiest\",\n  \"cozily\": \"cosily\",\n  \"coziness\": \"cosiness\",\n  \"cozy\": \"cosy\",\n  \"councilor\": \"councillor\",\n  \"councilors\": \"councillors\",\n  \"counseled\": \"counselled\",\n  \"counseling\": \"counselling\",\n  \"counselor\": \"counsellor\",\n  \"counselors\": \"counsellors\",\n  \"crenelated\": \"crenellated\",\n  \"criminalize\": \"criminalise\",\n  \"criminalized\": \"criminalised\",\n  \"criminalizes\": \"criminalises\",\n  \"criminalizing\": \"criminalising\",\n  \"criticize\": \"criticise\",\n  \"criticized\": \"criticised\",\n  \"criticizes\": \"criticises\",\n  \"criticizing\": \"criticising\",\n  \"crueler\": \"crueller\",\n  \"cruelest\": \"cruellest\",\n  \"crystallization\": \"crystallisation\",\n  \"crystallize\": \"crystallise\",\n  \"crystallized\": \"crystallised\",\n  \"crystallizes\": \"crystallises\",\n  \"crystallizing\": \"crystallising\",\n  \"cudgeled\": \"cudgelled\",\n  \"cudgeling\": \"cudgelling\",\n  \"customize\": \"customise\",\n  \"customized\": \"customised\",\n  \"customizes\": \"customises\",\n  \"customizing\": \"customising\",\n  \"cipher\": \"cypher\",\n  \"ciphers\": \"cyphers\",\n  \"decentralization\": \"decentralisation\",\n  \"decentralize\": \"decentralise\",\n  \"decentralized\": \"decentralised\",\n  \"decentralizes\": \"decentralises\",\n  \"decentralizing\": \"decentralising\",\n  \"decriminalization\": \"decriminalisation\",\n  \"decriminalize\": \"decriminalise\",\n  \"decriminalized\": \"decriminalised\",\n  \"decriminalizes\": \"decriminalises\",\n  \"decriminalizing\": \"decriminalising\",\n  \"defense\": \"defence\",\n  \"defenseless\": \"defenceless\",\n  \"defenses\": \"defences\",\n  \"dehumanization\": \"dehumanisation\",\n  \"dehumanize\": \"dehumanise\",\n  \"dehumanized\": \"dehumanised\",\n  \"dehumanizes\": \"dehumanises\",\n  \"dehumanizing\": \"dehumanising\",\n  \"demeanor\": \"demeanour\",\n  \"demilitarization\": \"demilitarisation\",\n  \"demilitarize\": \"demilitarise\",\n  \"demilitarized\": \"demilitarised\",\n  \"demilitarizes\": \"demilitarises\",\n  \"demilitarizing\": \"demilitarising\",\n  \"demobilization\": \"demobilisation\",\n  \"demobilize\": \"demobilise\",\n  \"demobilized\": \"demobilised\",\n  \"demobilizes\": \"demobilises\",\n  \"demobilizing\": \"demobilising\",\n  \"democratization\": \"democratisation\",\n  \"democratize\": \"democratise\",\n  \"democratized\": \"democratised\",\n  \"democratizes\": \"democratises\",\n  \"democratizing\": \"democratising\",\n  \"demonize\": \"demonise\",\n  \"demonized\": \"demonised\",\n  \"demonizes\": \"demonises\",\n  \"demonizing\": \"demonising\",\n  \"demoralization\": \"demoralisation\",\n  \"demoralize\": \"demoralise\",\n  \"demoralized\": \"demoralised\",\n  \"demoralizes\": \"demoralises\",\n  \"demoralizing\": \"demoralising\",\n  \"denationalization\": \"denationalisation\",\n  \"denationalize\": \"denationalise\",\n  \"denationalized\": \"denationalised\",\n  \"denationalizes\": \"denationalises\",\n  \"denationalizing\": \"denationalising\",\n  \"donut\": \"doughnut\",\n  \"deodorize\": \"deodorise\",\n  \"deodorized\": \"deodorised\",\n  \"deodorizes\": \"deodorises\",\n  \"deodorizing\": \"deodorising\",\n  \"depersonalize\": \"depersonalise\",\n  \"depersonalized\": \"depersonalised\",\n  \"depersonalizes\": \"depersonalises\",\n  \"depersonalizing\": \"depersonalising\",\n  \"deputize\": \"deputise\",\n  \"deputized\": \"deputised\",\n  \"deputizes\": \"deputises\",\n  \"deputizing\": \"deputising\",\n  \"desensitization\": \"desensitisation\",\n  \"desensitize\": \"desensitise\",\n  \"desensitized\": \"desensitised\",\n  \"desensitizes\": \"desensitises\",\n  \"desensitizing\": \"desensitising\",\n  \"destabilization\": \"destabilisation\",\n  \"destabilize\": \"destabilise\",\n  \"destabilized\": \"destabilised\",\n  \"destabilizes\": \"destabilises\",\n  \"destabilizing\": \"destabilising\",\n  \"dialed\": \"dialled\",\n  \"dialing\": \"dialling\",\n  \"dialog\": \"dialogue\",\n  \"dialogs\": \"dialogues\",\n  \"diarrhea\": \"diarrhoea\",\n  \"digitize\": \"digitise\",\n  \"digitized\": \"digitised\",\n  \"digitizes\": \"digitises\",\n  \"digitizing\": \"digitising\",\n  \"disk\": \"disc\",\n  \"discolor\": \"discolour\",\n  \"discolored\": \"discoloured\",\n  \"discoloring\": \"discolouring\",\n  \"discolors\": \"discolours\",\n  \"disks\": \"discs\",\n  \"disemboweled\": \"disembowelled\",\n  \"disemboweling\": \"disembowelling\",\n  \"disfavor\": \"disfavour\",\n  \"disheveled\": \"dishevelled\",\n  \"dishonor\": \"dishonour\",\n  \"dishonorable\": \"dishonourable\",\n  \"dishonorably\": \"dishonourably\",\n  \"dishonored\": \"dishonoured\",\n  \"dishonoring\": \"dishonouring\",\n  \"dishonors\": \"dishonours\",\n  \"disorganization\": \"disorganisation\",\n  \"disorganized\": \"disorganised\",\n  \"distill\": \"distil\",\n  \"distills\": \"distils\",\n  \"dramatization\": \"dramatisation\",\n  \"dramatizations\": \"dramatisations\",\n  \"dramatize\": \"dramatise\",\n  \"dramatized\": \"dramatised\",\n  \"dramatizes\": \"dramatises\",\n  \"dramatizing\": \"dramatising\",\n  \"draft\": \"draught\",\n  \"draftboard\": \"draughtboard\",\n  \"draftboards\": \"draughtboards\",\n  \"draftier\": \"draughtier\",\n  \"draftiest\": \"draughtiest\",\n  \"drafts\": \"draughts\",\n  \"draftsman\": \"draughtsman\",\n  \"draftsmanship\": \"draughtsmanship\",\n  \"draftsmen\": \"draughtsmen\",\n  \"draftswoman\": \"draughtswoman\",\n  \"draftswomen\": \"draughtswomen\",\n  \"drafty\": \"draughty\",\n  \"driveled\": \"drivelled\",\n  \"driveling\": \"drivelling\",\n  \"dueled\": \"duelled\",\n  \"dueling\": \"duelling\",\n  \"economize\": \"economise\",\n  \"economized\": \"economised\",\n  \"economizes\": \"economises\",\n  \"economizing\": \"economising\",\n  \"edema\": \"edoema\",\n  \"editorialize\": \"editorialise\",\n  \"editorialized\": \"editorialised\",\n  \"editorializes\": \"editorialises\",\n  \"editorializing\": \"editorialising\",\n  \"empathize\": \"empathise\",\n  \"empathized\": \"empathised\",\n  \"empathizes\": \"empathises\",\n  \"empathizing\": \"empathising\",\n  \"emphasize\": \"emphasise\",\n  \"emphasized\": \"emphasised\",\n  \"emphasizes\": \"emphasises\",\n  \"emphasizing\": \"emphasising\",\n  \"enameled\": \"enamelled\",\n  \"enameling\": \"enamelling\",\n  \"enamored\": \"enamoured\",\n  \"encyclopedia\": \"encyclopaedia\",\n  \"encyclopedias\": \"encyclopaedias\",\n  \"encyclopedic\": \"encyclopaedic\",\n  \"endeavor\": \"endeavour\",\n  \"endeavored\": \"endeavoured\",\n  \"endeavoring\": \"endeavouring\",\n  \"endeavors\": \"endeavours\",\n  \"energize\": \"energise\",\n  \"energized\": \"energised\",\n  \"energizes\": \"energises\",\n  \"energizing\": \"energising\",\n  \"enroll\": \"enrol\",\n  \"enrolls\": \"enrols\",\n  \"enthrall\": \"enthral\",\n  \"enthralls\": \"enthrals\",\n  \"epaulet\": \"epaulette\",\n  \"epaulets\": \"epaulettes\",\n  \"epicenter\": \"epicentre\",\n  \"epicenters\": \"epicentres\",\n  \"epilog\": \"epilogue\",\n  \"epilogs\": \"epilogues\",\n  \"epitomize\": \"epitomise\",\n  \"epitomized\": \"epitomised\",\n  \"epitomizes\": \"epitomises\",\n  \"epitomizing\": \"epitomising\",\n  \"equalization\": \"equalisation\",\n  \"equalize\": \"equalise\",\n  \"equalized\": \"equalised\",\n  \"equalizer\": \"equaliser\",\n  \"equalizers\": \"equalisers\",\n  \"equalizes\": \"equalises\",\n  \"equalizing\": \"equalising\",\n  \"eulogize\": \"eulogise\",\n  \"eulogized\": \"eulogised\",\n  \"eulogizes\": \"eulogises\",\n  \"eulogizing\": \"eulogising\",\n  \"evangelize\": \"evangelise\",\n  \"evangelized\": \"evangelised\",\n  \"evangelizes\": \"evangelises\",\n  \"evangelizing\": \"evangelising\",\n  \"exorcize\": \"exorcise\",\n  \"exorcized\": \"exorcised\",\n  \"exorcizes\": \"exorcises\",\n  \"exorcizing\": \"exorcising\",\n  \"extemporization\": \"extemporisation\",\n  \"extemporize\": \"extemporise\",\n  \"extemporized\": \"extemporised\",\n  \"extemporizes\": \"extemporises\",\n  \"extemporizing\": \"extemporising\",\n  \"externalization\": \"externalisation\",\n  \"externalizations\": \"externalisations\",\n  \"externalize\": \"externalise\",\n  \"externalized\": \"externalised\",\n  \"externalizes\": \"externalises\",\n  \"externalizing\": \"externalising\",\n  \"factorize\": \"factorise\",\n  \"factorized\": \"factorised\",\n  \"factorizes\": \"factorises\",\n  \"factorizing\": \"factorising\",\n  \"fecal\": \"faecal\",\n  \"feces\": \"faeces\",\n  \"familiarization\": \"familiarisation\",\n  \"familiarize\": \"familiarise\",\n  \"familiarized\": \"familiarised\",\n  \"familiarizes\": \"familiarises\",\n  \"familiarizing\": \"familiarising\",\n  \"fantasize\": \"fantasise\",\n  \"fantasized\": \"fantasised\",\n  \"fantasizes\": \"fantasises\",\n  \"fantasizing\": \"fantasising\",\n  \"favorable\": \"favourable\",\n  \"favorably\": \"favourably\",\n  \"favored\": \"favoured\",\n  \"favoring\": \"favouring\",\n  \"favorite\": \"favourite\",\n  \"favorites\": \"favourites\",\n  \"favoritism\": \"favouritism\",\n  \"favor\": \"favour\",\n  \"favors\": \"favours\",\n  \"feminize\": \"feminise\",\n  \"feminized\": \"feminised\",\n  \"feminizes\": \"feminises\",\n  \"feminizing\": \"feminising\",\n  \"fertilization\": \"fertilisation\",\n  \"fertilize\": \"fertilise\",\n  \"fertilized\": \"fertilised\",\n  \"fertilizer\": \"fertiliser\",\n  \"fertilizers\": \"fertilisers\",\n  \"fertilizes\": \"fertilises\",\n  \"fertilizing\": \"fertilising\",\n  \"fervor\": \"fervour\",\n  \"fiber\": \"fibre\",\n  \"fiberglass\": \"fibreglass\",\n  \"fibers\": \"fibres\",\n  \"fictionalization\": \"fictionalisation\",\n  \"fictionalizations\": \"fictionalisations\",\n  \"fictionalize\": \"fictionalise\",\n  \"fictionalized\": \"fictionalised\",\n  \"fictionalizes\": \"fictionalises\",\n  \"fictionalizing\": \"fictionalising\",\n  \"filet\": \"fillet\",\n  \"fileted\": \"filleted\",\n  \"fileting\": \"filleting\",\n  \"filets\": \"fillets\",\n  \"finalization\": \"finalisation\",\n  \"finalize\": \"finalise\",\n  \"finalized\": \"finalised\",\n  \"finalizes\": \"finalises\",\n  \"finalizing\": \"finalising\",\n  \"flutist\": \"flautist\",\n  \"flutists\": \"flautists\",\n  \"flavor\": \"flavour\",\n  \"flavored\": \"flavoured\",\n  \"flavoring\": \"flavouring\",\n  \"flavorings\": \"flavourings\",\n  \"flavorless\": \"flavourless\",\n  \"flavors\": \"flavours\",\n  \"flavorsome\": \"flavoursome\",\n  \"fetal\": \"foetal\",\n  \"fetid\": \"foetid\",\n  \"fetus\": \"foetus\",\n  \"fetuses\": \"foetuses\",\n  \"formalization\": \"formalisation\",\n  \"formalize\": \"formalise\",\n  \"formalized\": \"formalised\",\n  \"formalizes\": \"formalises\",\n  \"formalizing\": \"formalising\",\n  \"fossilization\": \"fossilisation\",\n  \"fossilize\": \"fossilise\",\n  \"fossilized\": \"fossilised\",\n  \"fossilizes\": \"fossilises\",\n  \"fossilizing\": \"fossilising\",\n  \"fraternization\": \"fraternisation\",\n  \"fraternize\": \"fraternise\",\n  \"fraternized\": \"fraternised\",\n  \"fraternizes\": \"fraternises\",\n  \"fraternizing\": \"fraternising\",\n  \"fulfill\": \"fulfil\",\n  \"fulfillment\": \"fulfilment\",\n  \"fulfills\": \"fulfils\",\n  \"funneled\": \"funnelled\",\n  \"funneling\": \"funnelling\",\n  \"galvanize\": \"galvanise\",\n  \"galvanized\": \"galvanised\",\n  \"galvanizes\": \"galvanises\",\n  \"galvanizing\": \"galvanising\",\n  \"gamboled\": \"gambolled\",\n  \"gamboling\": \"gambolling\",\n  \"jail\": \"gaol\",\n  \"jailbird\": \"gaolbird\",\n  \"jailbirds\": \"gaolbirds\",\n  \"jailbreak\": \"gaolbreak\",\n  \"jailbreaks\": \"gaolbreaks\",\n  \"jailed\": \"gaoled\",\n  \"jailer\": \"gaoler\",\n  \"jailers\": \"gaolers\",\n  \"jailing\": \"gaoling\",\n  \"jails\": \"gaols\",\n  \"gasses\": \"gases\",\n  \"gage\": \"gauge\",\n  \"gaged\": \"gauged\",\n  \"gages\": \"gauges\",\n  \"gaging\": \"gauging\",\n  \"generalization\": \"generalisation\",\n  \"generalizations\": \"generalisations\",\n  \"generalize\": \"generalise\",\n  \"generalized\": \"generalised\",\n  \"generalizes\": \"generalises\",\n  \"generalizing\": \"generalising\",\n  \"gypsies\": \"gipsies\",\n  \"glamorize\": \"glamorise\",\n  \"glamorized\": \"glamorised\",\n  \"glamorizes\": \"glamorises\",\n  \"glamorizing\": \"glamorising\",\n  \"glamor\": \"glamour\",\n  \"globalization\": \"globalisation\",\n  \"globalize\": \"globalise\",\n  \"globalized\": \"globalised\",\n  \"globalizes\": \"globalises\",\n  \"globalizing\": \"globalising\",\n  \"gluing\": \"glueing\",\n  \"goiter\": \"goitre\",\n  \"goiters\": \"goitres\",\n  \"gonorrhea\": \"gonorrhoea\",\n  \"gram\": \"gramme\",\n  \"grams\": \"grammes\",\n  \"graveled\": \"gravelled\",\n  \"gray\": \"grey\",\n  \"grayed\": \"greyed\",\n  \"graying\": \"greying\",\n  \"grayish\": \"greyish\",\n  \"grayness\": \"greyness\",\n  \"grays\": \"greys\",\n  \"groveled\": \"grovelled\",\n  \"groveling\": \"grovelling\",\n  \"groin\": \"groyne\",\n  \"groins\": \"groynes\",\n  \"grueling\": \"gruelling\",\n  \"gruelingly\": \"gruellingly\",\n  \"griffin\": \"gryphon\",\n  \"griffins\": \"gryphons\",\n  \"gynecological\": \"gynaecological\",\n  \"gynecologist\": \"gynaecologist\",\n  \"gynecologists\": \"gynaecologists\",\n  \"gynecology\": \"gynaecology\",\n  \"hematological\": \"haematological\",\n  \"hematologist\": \"haematologist\",\n  \"hematologists\": \"haematologists\",\n  \"hematology\": \"haematology\",\n  \"hemoglobin\": \"haemoglobin\",\n  \"hemophilia\": \"haemophilia\",\n  \"hemophiliac\": \"haemophiliac\",\n  \"hemophiliacs\": \"haemophiliacs\",\n  \"hemorrhage\": \"haemorrhage\",\n  \"hemorrhaged\": \"haemorrhaged\",\n  \"hemorrhages\": \"haemorrhages\",\n  \"hemorrhaging\": \"haemorrhaging\",\n  \"hemorrhoids\": \"haemorrhoids\",\n  \"harbor\": \"harbour\",\n  \"harbored\": \"harboured\",\n  \"harboring\": \"harbouring\",\n  \"harbors\": \"harbours\",\n  \"harmonization\": \"harmonisation\",\n  \"harmonize\": \"harmonise\",\n  \"harmonized\": \"harmonised\",\n  \"harmonizes\": \"harmonises\",\n  \"harmonizing\": \"harmonising\",\n  \"homeopath\": \"homoeopath\",\n  \"homeopathic\": \"homoeopathic\",\n  \"homeopaths\": \"homoeopaths\",\n  \"homeopathy\": \"homoeopathy\",\n  \"homogenize\": \"homogenise\",\n  \"homogenized\": \"homogenised\",\n  \"homogenizes\": \"homogenises\",\n  \"homogenizing\": \"homogenising\",\n  \"honor\": \"honour\",\n  \"honorable\": \"honourable\",\n  \"honorably\": \"honourably\",\n  \"honored\": \"honoured\",\n  \"honoring\": \"honouring\",\n  \"honors\": \"honours\",\n  \"hospitalization\": \"hospitalisation\",\n  \"hospitalize\": \"hospitalise\",\n  \"hospitalized\": \"hospitalised\",\n  \"hospitalizes\": \"hospitalises\",\n  \"hospitalizing\": \"hospitalising\",\n  \"humanize\": \"humanise\",\n  \"humanized\": \"humanised\",\n  \"humanizes\": \"humanises\",\n  \"humanizing\": \"humanising\",\n  \"humor\": \"humour\",\n  \"humored\": \"humoured\",\n  \"humoring\": \"humouring\",\n  \"humorless\": \"humourless\",\n  \"humors\": \"humours\",\n  \"hybridize\": \"hybridise\",\n  \"hybridized\": \"hybridised\",\n  \"hybridizes\": \"hybridises\",\n  \"hybridizing\": \"hybridising\",\n  \"hypnotize\": \"hypnotise\",\n  \"hypnotized\": \"hypnotised\",\n  \"hypnotizes\": \"hypnotises\",\n  \"hypnotizing\": \"hypnotising\",\n  \"hypothesize\": \"hypothesise\",\n  \"hypothesized\": \"hypothesised\",\n  \"hypothesizes\": \"hypothesises\",\n  \"hypothesizing\": \"hypothesising\",\n  \"idealization\": \"idealisation\",\n  \"idealize\": \"idealise\",\n  \"idealized\": \"idealised\",\n  \"idealizes\": \"idealises\",\n  \"idealizing\": \"idealising\",\n  \"idolize\": \"idolise\",\n  \"idolized\": \"idolised\",\n  \"idolizes\": \"idolises\",\n  \"idolizing\": \"idolising\",\n  \"immobilization\": \"immobilisation\",\n  \"immobilize\": \"immobilise\",\n  \"immobilized\": \"immobilised\",\n  \"immobilizer\": \"immobiliser\",\n  \"immobilizers\": \"immobilisers\",\n  \"immobilizes\": \"immobilises\",\n  \"immobilizing\": \"immobilising\",\n  \"immortalize\": \"immortalise\",\n  \"immortalized\": \"immortalised\",\n  \"immortalizes\": \"immortalises\",\n  \"immortalizing\": \"immortalising\",\n  \"immunization\": \"immunisation\",\n  \"immunize\": \"immunise\",\n  \"immunized\": \"immunised\",\n  \"immunizes\": \"immunises\",\n  \"immunizing\": \"immunising\",\n  \"impaneled\": \"impanelled\",\n  \"impaneling\": \"impanelling\",\n  \"imperiled\": \"imperilled\",\n  \"imperiling\": \"imperilling\",\n  \"individualize\": \"individualise\",\n  \"individualized\": \"individualised\",\n  \"individualizes\": \"individualises\",\n  \"individualizing\": \"individualising\",\n  \"industrialize\": \"industrialise\",\n  \"industrialized\": \"industrialised\",\n  \"industrializes\": \"industrialises\",\n  \"industrializing\": \"industrialising\",\n  \"inflection\": \"inflexion\",\n  \"inflections\": \"inflexions\",\n  \"initialize\": \"initialise\",\n  \"initialized\": \"initialised\",\n  \"initializes\": \"initialises\",\n  \"initializing\": \"initialising\",\n  \"initialed\": \"initialled\",\n  \"initialing\": \"initialling\",\n  \"install\": \"instal\",\n  \"installment\": \"instalment\",\n  \"installments\": \"instalments\",\n  \"installs\": \"instals\",\n  \"instill\": \"instil\",\n  \"instills\": \"instils\",\n  \"institutionalization\": \"institutionalisation\",\n  \"institutionalize\": \"institutionalise\",\n  \"institutionalized\": \"institutionalised\",\n  \"institutionalizes\": \"institutionalises\",\n  \"institutionalizing\": \"institutionalising\",\n  \"intellectualize\": \"intellectualise\",\n  \"intellectualized\": \"intellectualised\",\n  \"intellectualizes\": \"intellectualises\",\n  \"intellectualizing\": \"intellectualising\",\n  \"internalization\": \"internalisation\",\n  \"internalize\": \"internalise\",\n  \"internalized\": \"internalised\",\n  \"internalizes\": \"internalises\",\n  \"internalizing\": \"internalising\",\n  \"internationalization\": \"internationalisation\",\n  \"internationalize\": \"internationalise\",\n  \"internationalized\": \"internationalised\",\n  \"internationalizes\": \"internationalises\",\n  \"internationalizing\": \"internationalising\",\n  \"ionization\": \"ionisation\",\n  \"ionize\": \"ionise\",\n  \"ionized\": \"ionised\",\n  \"ionizer\": \"ioniser\",\n  \"ionizers\": \"ionisers\",\n  \"ionizes\": \"ionises\",\n  \"ionizing\": \"ionising\",\n  \"italicize\": \"italicise\",\n  \"italicized\": \"italicised\",\n  \"italicizes\": \"italicises\",\n  \"italicizing\": \"italicising\",\n  \"itemize\": \"itemise\",\n  \"itemized\": \"itemised\",\n  \"itemizes\": \"itemises\",\n  \"itemizing\": \"itemising\",\n  \"jeopardize\": \"jeopardise\",\n  \"jeopardized\": \"jeopardised\",\n  \"jeopardizes\": \"jeopardises\",\n  \"jeopardizing\": \"jeopardising\",\n  \"jeweled\": \"jewelled\",\n  \"jeweler\": \"jeweller\",\n  \"jewelers\": \"jewellers\",\n  \"jewelry\": \"jewellery\",\n  \"judgment\": \"judgement\",\n  \"kilogram\": \"kilogramme\",\n  \"kilograms\": \"kilogrammes\",\n  \"kilometer\": \"kilometre\",\n  \"kilometers\": \"kilometres\",\n  \"labeled\": \"labelled\",\n  \"labeling\": \"labelling\",\n  \"labor\": \"labour\",\n  \"labored\": \"laboured\",\n  \"laborer\": \"labourer\",\n  \"laborers\": \"labourers\",\n  \"laboring\": \"labouring\",\n  \"labors\": \"labours\",\n  \"lackluster\": \"lacklustre\",\n  \"legalization\": \"legalisation\",\n  \"legalize\": \"legalise\",\n  \"legalized\": \"legalised\",\n  \"legalizes\": \"legalises\",\n  \"legalizing\": \"legalising\",\n  \"legitimize\": \"legitimise\",\n  \"legitimized\": \"legitimised\",\n  \"legitimizes\": \"legitimises\",\n  \"legitimizing\": \"legitimising\",\n  \"leukemia\": \"leukaemia\",\n  \"leveled\": \"levelled\",\n  \"leveler\": \"leveller\",\n  \"levelers\": \"levellers\",\n  \"leveling\": \"levelling\",\n  \"libeled\": \"libelled\",\n  \"libeling\": \"libelling\",\n  \"libelous\": \"libellous\",\n  \"liberalization\": \"liberalisation\",\n  \"liberalize\": \"liberalise\",\n  \"liberalized\": \"liberalised\",\n  \"liberalizes\": \"liberalises\",\n  \"liberalizing\": \"liberalising\",\n  \"license\": \"licence\",\n  \"licensed\": \"licenced\",\n  \"licenses\": \"licences\",\n  \"licensing\": \"licencing\",\n  \"likable\": \"likeable\",\n  \"lionization\": \"lionisation\",\n  \"lionize\": \"lionise\",\n  \"lionized\": \"lionised\",\n  \"lionizes\": \"lionises\",\n  \"lionizing\": \"lionising\",\n  \"liquidize\": \"liquidise\",\n  \"liquidized\": \"liquidised\",\n  \"liquidizer\": \"liquidiser\",\n  \"liquidizers\": \"liquidisers\",\n  \"liquidizes\": \"liquidises\",\n  \"liquidizing\": \"liquidising\",\n  \"liter\": \"litre\",\n  \"liters\": \"litres\",\n  \"localize\": \"localise\",\n  \"localized\": \"localised\",\n  \"localizes\": \"localises\",\n  \"localizing\": \"localising\",\n  \"louver\": \"louvre\",\n  \"louvered\": \"louvred\",\n  \"louvers\": \"louvres\",\n  \"luster\": \"lustre\",\n  \"magnetize\": \"magnetise\",\n  \"magnetized\": \"magnetised\",\n  \"magnetizes\": \"magnetises\",\n  \"magnetizing\": \"magnetising\",\n  \"maneuverability\": \"manoeuvrability\",\n  \"maneuverable\": \"manoeuvrable\",\n  \"maneuver\": \"manoeuvre\",\n  \"maneuvered\": \"manoeuvred\",\n  \"maneuvers\": \"manoeuvres\",\n  \"maneuvering\": \"manoeuvring\",\n  \"maneuverings\": \"manoeuvrings\",\n  \"marginalization\": \"marginalisation\",\n  \"marginalize\": \"marginalise\",\n  \"marginalized\": \"marginalised\",\n  \"marginalizes\": \"marginalises\",\n  \"marginalizing\": \"marginalising\",\n  \"marshaled\": \"marshalled\",\n  \"marshaling\": \"marshalling\",\n  \"marveled\": \"marvelled\",\n  \"marveling\": \"marvelling\",\n  \"marvelous\": \"marvellous\",\n  \"marvelously\": \"marvellously\",\n  \"materialization\": \"materialisation\",\n  \"materialize\": \"materialise\",\n  \"materialized\": \"materialised\",\n  \"materializes\": \"materialises\",\n  \"materializing\": \"materialising\",\n  \"maximization\": \"maximisation\",\n  \"maximize\": \"maximise\",\n  \"maximized\": \"maximised\",\n  \"maximizes\": \"maximises\",\n  \"maximizing\": \"maximising\",\n  \"meager\": \"meagre\",\n  \"mechanization\": \"mechanisation\",\n  \"mechanize\": \"mechanise\",\n  \"mechanized\": \"mechanised\",\n  \"mechanizes\": \"mechanises\",\n  \"mechanizing\": \"mechanising\",\n  \"medieval\": \"mediaeval\",\n  \"memorialize\": \"memorialise\",\n  \"memorialized\": \"memorialised\",\n  \"memorializes\": \"memorialises\",\n  \"memorializing\": \"memorialising\",\n  \"memorize\": \"memorise\",\n  \"memorized\": \"memorised\",\n  \"memorizes\": \"memorises\",\n  \"memorizing\": \"memorising\",\n  \"mesmerize\": \"mesmerise\",\n  \"mesmerized\": \"mesmerised\",\n  \"mesmerizes\": \"mesmerises\",\n  \"mesmerizing\": \"mesmerising\",\n  \"metabolize\": \"metabolise\",\n  \"metabolized\": \"metabolised\",\n  \"metabolizes\": \"metabolises\",\n  \"metabolizing\": \"metabolising\",\n  \"meter\": \"metre\",\n  \"meters\": \"metres\",\n  \"micrometer\": \"micrometre\",\n  \"micrometers\": \"micrometres\",\n  \"militarize\": \"militarise\",\n  \"militarized\": \"militarised\",\n  \"militarizes\": \"militarises\",\n  \"militarizing\": \"militarising\",\n  \"milligram\": \"milligramme\",\n  \"milligrams\": \"milligrammes\",\n  \"milliliter\": \"millilitre\",\n  \"milliliters\": \"millilitres\",\n  \"millimeter\": \"millimetre\",\n  \"millimeters\": \"millimetres\",\n  \"miniaturization\": \"miniaturisation\",\n  \"miniaturize\": \"miniaturise\",\n  \"miniaturized\": \"miniaturised\",\n  \"miniaturizes\": \"miniaturises\",\n  \"miniaturizing\": \"miniaturising\",\n  \"minibusses\": \"minibuses\",\n  \"minimize\": \"minimise\",\n  \"minimized\": \"minimised\",\n  \"minimizes\": \"minimises\",\n  \"minimizing\": \"minimising\",\n  \"misbehavior\": \"misbehaviour\",\n  \"misdemeanor\": \"misdemeanour\",\n  \"misdemeanors\": \"misdemeanours\",\n  \"misspelled\": \"misspelt\",\n  \"miter\": \"mitre\",\n  \"miters\": \"mitres\",\n  \"mobilization\": \"mobilisation\",\n  \"mobilize\": \"mobilise\",\n  \"mobilized\": \"mobilised\",\n  \"mobilizes\": \"mobilises\",\n  \"mobilizing\": \"mobilising\",\n  \"modeled\": \"modelled\",\n  \"modeler\": \"modeller\",\n  \"modelers\": \"modellers\",\n  \"modeling\": \"modelling\",\n  \"modernize\": \"modernise\",\n  \"modernized\": \"modernised\",\n  \"modernizes\": \"modernises\",\n  \"modernizing\": \"modernising\",\n  \"moisturize\": \"moisturise\",\n  \"moisturized\": \"moisturised\",\n  \"moisturizer\": \"moisturiser\",\n  \"moisturizers\": \"moisturisers\",\n  \"moisturizes\": \"moisturises\",\n  \"moisturizing\": \"moisturising\",\n  \"monolog\": \"monologue\",\n  \"monologs\": \"monologues\",\n  \"monopolization\": \"monopolisation\",\n  \"monopolize\": \"monopolise\",\n  \"monopolized\": \"monopolised\",\n  \"monopolizes\": \"monopolises\",\n  \"monopolizing\": \"monopolising\",\n  \"moralize\": \"moralise\",\n  \"moralized\": \"moralised\",\n  \"moralizes\": \"moralises\",\n  \"moralizing\": \"moralising\",\n  \"motorized\": \"motorised\",\n  \"mold\": \"mould\",\n  \"molded\": \"moulded\",\n  \"molder\": \"moulder\",\n  \"moldered\": \"mouldered\",\n  \"moldering\": \"mouldering\",\n  \"molders\": \"moulders\",\n  \"moldier\": \"mouldier\",\n  \"moldiest\": \"mouldiest\",\n  \"molding\": \"moulding\",\n  \"moldings\": \"mouldings\",\n  \"molds\": \"moulds\",\n  \"moldy\": \"mouldy\",\n  \"molt\": \"moult\",\n  \"molted\": \"moulted\",\n  \"molting\": \"moulting\",\n  \"molts\": \"moults\",\n  \"mustache\": \"moustache\",\n  \"mustached\": \"moustached\",\n  \"mustaches\": \"moustaches\",\n  \"mustachioed\": \"moustachioed\",\n  \"multicolored\": \"multicoloured\",\n  \"nationalization\": \"nationalisation\",\n  \"nationalizations\": \"nationalisations\",\n  \"nationalize\": \"nationalise\",\n  \"nationalized\": \"nationalised\",\n  \"nationalizes\": \"nationalises\",\n  \"nationalizing\": \"nationalising\",\n  \"naturalization\": \"naturalisation\",\n  \"naturalize\": \"naturalise\",\n  \"naturalized\": \"naturalised\",\n  \"naturalizes\": \"naturalises\",\n  \"naturalizing\": \"naturalising\",\n  \"neighbor\": \"neighbour\",\n  \"neighborhood\": \"neighbourhood\",\n  \"neighborhoods\": \"neighbourhoods\",\n  \"neighboring\": \"neighbouring\",\n  \"neighborliness\": \"neighbourliness\",\n  \"neighborly\": \"neighbourly\",\n  \"neighbors\": \"neighbours\",\n  \"neutralization\": \"neutralisation\",\n  \"neutralize\": \"neutralise\",\n  \"neutralized\": \"neutralised\",\n  \"neutralizes\": \"neutralises\",\n  \"neutralizing\": \"neutralising\",\n  \"normalization\": \"normalisation\",\n  \"normalize\": \"normalise\",\n  \"normalized\": \"normalised\",\n  \"normalizes\": \"normalises\",\n  \"normalizing\": \"normalising\",\n  \"odor\": \"odour\",\n  \"odorless\": \"odourless\",\n  \"odors\": \"odours\",\n  \"esophagus\": \"oesophagus\",\n  \"esophaguses\": \"oesophaguses\",\n  \"estrogen\": \"oestrogen\",\n  \"offense\": \"offence\",\n  \"offenses\": \"offences\",\n  \"omelet\": \"omelette\",\n  \"omelets\": \"omelettes\",\n  \"optimize\": \"optimise\",\n  \"optimized\": \"optimised\",\n  \"optimizes\": \"optimises\",\n  \"optimizing\": \"optimising\",\n  \"organization\": \"organisation\",\n  \"organizational\": \"organisational\",\n  \"organizations\": \"organisations\",\n  \"organize\": \"organise\",\n  \"organized\": \"organised\",\n  \"organizer\": \"organiser\",\n  \"organizers\": \"organisers\",\n  \"organizes\": \"organises\",\n  \"organizing\": \"organising\",\n  \"orthopedic\": \"orthopaedic\",\n  \"orthopedics\": \"orthopaedics\",\n  \"ostracize\": \"ostracise\",\n  \"ostracized\": \"ostracised\",\n  \"ostracizes\": \"ostracises\",\n  \"ostracizing\": \"ostracising\",\n  \"outmaneuver\": \"outmanoeuvre\",\n  \"outmaneuvered\": \"outmanoeuvred\",\n  \"outmaneuvers\": \"outmanoeuvres\",\n  \"outmaneuvering\": \"outmanoeuvring\",\n  \"overemphasize\": \"overemphasise\",\n  \"overemphasized\": \"overemphasised\",\n  \"overemphasizes\": \"overemphasises\",\n  \"overemphasizing\": \"overemphasising\",\n  \"oxidization\": \"oxidisation\",\n  \"oxidize\": \"oxidise\",\n  \"oxidized\": \"oxidised\",\n  \"oxidizes\": \"oxidises\",\n  \"oxidizing\": \"oxidising\",\n  \"pederast\": \"paederast\",\n  \"pederasts\": \"paederasts\",\n  \"pediatric\": \"paediatric\",\n  \"pediatrician\": \"paediatrician\",\n  \"pediatricians\": \"paediatricians\",\n  \"pediatrics\": \"paediatrics\",\n  \"paleolithic\": \"palaeolithic\",\n  \"paleontologist\": \"palaeontologist\",\n  \"paleontologists\": \"palaeontologists\",\n  \"paleontology\": \"palaeontology\",\n  \"paneled\": \"panelled\",\n  \"paneling\": \"panelling\",\n  \"panelist\": \"panellist\",\n  \"panelists\": \"panellists\",\n  \"paralyze\": \"paralyse\",\n  \"paralyzed\": \"paralysed\",\n  \"paralyzes\": \"paralyses\",\n  \"paralyzing\": \"paralysing\",\n  \"parceled\": \"parcelled\",\n  \"parceling\": \"parcelling\",\n  \"parlor\": \"parlour\",\n  \"parlors\": \"parlours\",\n  \"particularize\": \"particularise\",\n  \"particularized\": \"particularised\",\n  \"particularizes\": \"particularises\",\n  \"particularizing\": \"particularising\",\n  \"passivization\": \"passivisation\",\n  \"passivize\": \"passivise\",\n  \"passivized\": \"passivised\",\n  \"passivizes\": \"passivises\",\n  \"passivizing\": \"passivising\",\n  \"pasteurization\": \"pasteurisation\",\n  \"pasteurize\": \"pasteurise\",\n  \"pasteurized\": \"pasteurised\",\n  \"pasteurizes\": \"pasteurises\",\n  \"pasteurizing\": \"pasteurising\",\n  \"patronize\": \"patronise\",\n  \"patronized\": \"patronised\",\n  \"patronizes\": \"patronises\",\n  \"patronizing\": \"patronising\",\n  \"patronizingly\": \"patronisingly\",\n  \"pedaled\": \"pedalled\",\n  \"pedaling\": \"pedalling\",\n  \"pedestrianization\": \"pedestrianisation\",\n  \"pedestrianize\": \"pedestrianise\",\n  \"pedestrianized\": \"pedestrianised\",\n  \"pedestrianizes\": \"pedestrianises\",\n  \"pedestrianizing\": \"pedestrianising\",\n  \"penalize\": \"penalise\",\n  \"penalized\": \"penalised\",\n  \"penalizes\": \"penalises\",\n  \"penalizing\": \"penalising\",\n  \"penciled\": \"pencilled\",\n  \"penciling\": \"pencilling\",\n  \"personalize\": \"personalise\",\n  \"personalized\": \"personalised\",\n  \"personalizes\": \"personalises\",\n  \"personalizing\": \"personalising\",\n  \"pharmacopeia\": \"pharmacopoeia\",\n  \"pharmacopeias\": \"pharmacopoeias\",\n  \"philosophize\": \"philosophise\",\n  \"philosophized\": \"philosophised\",\n  \"philosophizes\": \"philosophises\",\n  \"philosophizing\": \"philosophising\",\n  \"filter\": \"philtre\",\n  \"filters\": \"philtres\",\n  \"phony\": \"phoney\",\n  \"plagiarize\": \"plagiarise\",\n  \"plagiarized\": \"plagiarised\",\n  \"plagiarizes\": \"plagiarises\",\n  \"plagiarizing\": \"plagiarising\",\n  \"plow\": \"plough\",\n  \"plowed\": \"ploughed\",\n  \"plowing\": \"ploughing\",\n  \"plowman\": \"ploughman\",\n  \"plowmen\": \"ploughmen\",\n  \"plows\": \"ploughs\",\n  \"plowshare\": \"ploughshare\",\n  \"plowshares\": \"ploughshares\",\n  \"polarization\": \"polarisation\",\n  \"polarize\": \"polarise\",\n  \"polarized\": \"polarised\",\n  \"polarizes\": \"polarises\",\n  \"polarizing\": \"polarising\",\n  \"politicization\": \"politicisation\",\n  \"politicize\": \"politicise\",\n  \"politicized\": \"politicised\",\n  \"politicizes\": \"politicises\",\n  \"politicizing\": \"politicising\",\n  \"popularization\": \"popularisation\",\n  \"popularize\": \"popularise\",\n  \"popularized\": \"popularised\",\n  \"popularizes\": \"popularises\",\n  \"popularizing\": \"popularising\",\n  \"practice\": \"practise\",\n  \"practiced\": \"practised\",\n  \"practices\": \"practises\",\n  \"practicing\": \"practising\",\n  \"presidium\": \"praesidium\",\n  \"presidiums\": \"praesidiums\",\n  \"pressurization\": \"pressurisation\",\n  \"pressurize\": \"pressurise\",\n  \"pressurized\": \"pressurised\",\n  \"pressurizes\": \"pressurises\",\n  \"pressurizing\": \"pressurising\",\n  \"pretense\": \"pretence\",\n  \"pretenses\": \"pretences\",\n  \"primeval\": \"primaeval\",\n  \"prioritization\": \"prioritisation\",\n  \"prioritize\": \"prioritise\",\n  \"prioritized\": \"prioritised\",\n  \"prioritizes\": \"prioritises\",\n  \"prioritizing\": \"prioritising\",\n  \"privatization\": \"privatisation\",\n  \"privatizations\": \"privatisations\",\n  \"privatize\": \"privatise\",\n  \"privatized\": \"privatised\",\n  \"privatizes\": \"privatises\",\n  \"privatizing\": \"privatising\",\n  \"professionalization\": \"professionalisation\",\n  \"professionalize\": \"professionalise\",\n  \"professionalized\": \"professionalised\",\n  \"professionalizes\": \"professionalises\",\n  \"professionalizing\": \"professionalising\",\n  \"program\": \"programme\",\n  \"programs\": \"programmes\",\n  \"prolog\": \"prologue\",\n  \"prologs\": \"prologues\",\n  \"propagandize\": \"propagandise\",\n  \"propagandized\": \"propagandised\",\n  \"propagandizes\": \"propagandises\",\n  \"propagandizing\": \"propagandising\",\n  \"proselytize\": \"proselytise\",\n  \"proselytized\": \"proselytised\",\n  \"proselytizer\": \"proselytiser\",\n  \"proselytizers\": \"proselytisers\",\n  \"proselytizes\": \"proselytises\",\n  \"proselytizing\": \"proselytising\",\n  \"psychoanalyze\": \"psychoanalyse\",\n  \"psychoanalyzed\": \"psychoanalysed\",\n  \"psychoanalyzes\": \"psychoanalyses\",\n  \"psychoanalyzing\": \"psychoanalysing\",\n  \"publicize\": \"publicise\",\n  \"publicized\": \"publicised\",\n  \"publicizes\": \"publicises\",\n  \"publicizing\": \"publicising\",\n  \"pulverization\": \"pulverisation\",\n  \"pulverize\": \"pulverise\",\n  \"pulverized\": \"pulverised\",\n  \"pulverizes\": \"pulverises\",\n  \"pulverizing\": \"pulverising\",\n  \"pummel\": \"pummelled\",\n  \"pummeled\": \"pummelling\",\n  \"pajama\": \"pyjama\",\n  \"pajamas\": \"pyjamas\",\n  \"pizzazz\": \"pzazz\",\n  \"quarreled\": \"quarrelled\",\n  \"quarreling\": \"quarrelling\",\n  \"radicalize\": \"radicalise\",\n  \"radicalized\": \"radicalised\",\n  \"radicalizes\": \"radicalises\",\n  \"radicalizing\": \"radicalising\",\n  \"rancor\": \"rancour\",\n  \"randomize\": \"randomise\",\n  \"randomized\": \"randomised\",\n  \"randomizes\": \"randomises\",\n  \"randomizing\": \"randomising\",\n  \"rationalization\": \"rationalisation\",\n  \"rationalizations\": \"rationalisations\",\n  \"rationalize\": \"rationalise\",\n  \"rationalized\": \"rationalised\",\n  \"rationalizes\": \"rationalises\",\n  \"rationalizing\": \"rationalising\",\n  \"raveled\": \"ravelled\",\n  \"raveling\": \"ravelling\",\n  \"realizable\": \"realisable\",\n  \"realization\": \"realisation\",\n  \"realizations\": \"realisations\",\n  \"realize\": \"realise\",\n  \"realized\": \"realised\",\n  \"realizes\": \"realises\",\n  \"realizing\": \"realising\",\n  \"recognizable\": \"recognisable\",\n  \"recognizably\": \"recognisably\",\n  \"recognizance\": \"recognisance\",\n  \"recognize\": \"recognise\",\n  \"recognized\": \"recognised\",\n  \"recognizes\": \"recognises\",\n  \"recognizing\": \"recognising\",\n  \"reconnoiter\": \"reconnoitre\",\n  \"reconnoitered\": \"reconnoitred\",\n  \"reconnoiters\": \"reconnoitres\",\n  \"reconnoitering\": \"reconnoitring\",\n  \"refueled\": \"refuelled\",\n  \"refueling\": \"refuelling\",\n  \"regularization\": \"regularisation\",\n  \"regularize\": \"regularise\",\n  \"regularized\": \"regularised\",\n  \"regularizes\": \"regularises\",\n  \"regularizing\": \"regularising\",\n  \"remodeled\": \"remodelled\",\n  \"remodeling\": \"remodelling\",\n  \"remold\": \"remould\",\n  \"remolded\": \"remoulded\",\n  \"remolding\": \"remoulding\",\n  \"remolds\": \"remoulds\",\n  \"reorganization\": \"reorganisation\",\n  \"reorganizations\": \"reorganisations\",\n  \"reorganize\": \"reorganise\",\n  \"reorganized\": \"reorganised\",\n  \"reorganizes\": \"reorganises\",\n  \"reorganizing\": \"reorganising\",\n  \"reveled\": \"revelled\",\n  \"reveler\": \"reveller\",\n  \"revelers\": \"revellers\",\n  \"reveling\": \"revelling\",\n  \"revitalize\": \"revitalise\",\n  \"revitalized\": \"revitalised\",\n  \"revitalizes\": \"revitalises\",\n  \"revitalizing\": \"revitalising\",\n  \"revolutionize\": \"revolutionise\",\n  \"revolutionized\": \"revolutionised\",\n  \"revolutionizes\": \"revolutionises\",\n  \"revolutionizing\": \"revolutionising\",\n  \"rhapsodize\": \"rhapsodise\",\n  \"rhapsodized\": \"rhapsodised\",\n  \"rhapsodizes\": \"rhapsodises\",\n  \"rhapsodizing\": \"rhapsodising\",\n  \"rigor\": \"rigour\",\n  \"rigors\": \"rigours\",\n  \"ritualized\": \"ritualised\",\n  \"rivaled\": \"rivalled\",\n  \"rivaling\": \"rivalling\",\n  \"romanticize\": \"romanticise\",\n  \"romanticized\": \"romanticised\",\n  \"romanticizes\": \"romanticises\",\n  \"romanticizing\": \"romanticising\",\n  \"rumor\": \"rumour\",\n  \"rumored\": \"rumoured\",\n  \"rumors\": \"rumours\",\n  \"saber\": \"sabre\",\n  \"sabers\": \"sabres\",\n  \"saltpeter\": \"saltpetre\",\n  \"sanitize\": \"sanitise\",\n  \"sanitized\": \"sanitised\",\n  \"sanitizes\": \"sanitises\",\n  \"sanitizing\": \"sanitising\",\n  \"satirize\": \"satirise\",\n  \"satirized\": \"satirised\",\n  \"satirizes\": \"satirises\",\n  \"satirizing\": \"satirising\",\n  \"savior\": \"saviour\",\n  \"saviors\": \"saviours\",\n  \"savor\": \"savour\",\n  \"savored\": \"savoured\",\n  \"savories\": \"savouries\",\n  \"savoring\": \"savouring\",\n  \"savors\": \"savours\",\n  \"savory\": \"savoury\",\n  \"scandalize\": \"scandalise\",\n  \"scandalized\": \"scandalised\",\n  \"scandalizes\": \"scandalises\",\n  \"scandalizing\": \"scandalising\",\n  \"skeptic\": \"sceptic\",\n  \"skeptical\": \"sceptical\",\n  \"skeptically\": \"sceptically\",\n  \"skepticism\": \"scepticism\",\n  \"skeptics\": \"sceptics\",\n  \"scepter\": \"sceptre\",\n  \"scepters\": \"sceptres\",\n  \"scrutinize\": \"scrutinise\",\n  \"scrutinized\": \"scrutinised\",\n  \"scrutinizes\": \"scrutinises\",\n  \"scrutinizing\": \"scrutinising\",\n  \"secularization\": \"secularisation\",\n  \"secularize\": \"secularise\",\n  \"secularized\": \"secularised\",\n  \"secularizes\": \"secularises\",\n  \"secularizing\": \"secularising\",\n  \"sensationalize\": \"sensationalise\",\n  \"sensationalized\": \"sensationalised\",\n  \"sensationalizes\": \"sensationalises\",\n  \"sensationalizing\": \"sensationalising\",\n  \"sensitize\": \"sensitise\",\n  \"sensitized\": \"sensitised\",\n  \"sensitizes\": \"sensitises\",\n  \"sensitizing\": \"sensitising\",\n  \"sentimentalize\": \"sentimentalise\",\n  \"sentimentalized\": \"sentimentalised\",\n  \"sentimentalizes\": \"sentimentalises\",\n  \"sentimentalizing\": \"sentimentalising\",\n  \"sepulcher\": \"sepulchre\",\n  \"sepulchers\": \"sepulchres\",\n  \"serialization\": \"serialisation\",\n  \"serializations\": \"serialisations\",\n  \"serialize\": \"serialise\",\n  \"serialized\": \"serialised\",\n  \"serializes\": \"serialises\",\n  \"serializing\": \"serialising\",\n  \"sermonize\": \"sermonise\",\n  \"sermonized\": \"sermonised\",\n  \"sermonizes\": \"sermonises\",\n  \"sermonizing\": \"sermonising\",\n  \"sheik\": \"sheikh\",\n  \"shoveled\": \"shovelled\",\n  \"shoveling\": \"shovelling\",\n  \"shriveled\": \"shrivelled\",\n  \"shriveling\": \"shrivelling\",\n  \"signalize\": \"signalise\",\n  \"signalized\": \"signalised\",\n  \"signalizes\": \"signalises\",\n  \"signalizing\": \"signalising\",\n  \"signaled\": \"signalled\",\n  \"signaling\": \"signalling\",\n  \"smolder\": \"smoulder\",\n  \"smoldered\": \"smouldered\",\n  \"smoldering\": \"smouldering\",\n  \"smolders\": \"smoulders\",\n  \"sniveled\": \"snivelled\",\n  \"sniveling\": \"snivelling\",\n  \"snorkeled\": \"snorkelled\",\n  \"snorkeling\": \"snorkelling\",\n  \"snowplow\": \"snowploughs\",\n  \"socialization\": \"socialisation\",\n  \"socialize\": \"socialise\",\n  \"socialized\": \"socialised\",\n  \"socializes\": \"socialises\",\n  \"socializing\": \"socialising\",\n  \"solemnize\": \"solemnise\",\n  \"solemnized\": \"solemnised\",\n  \"solemnizes\": \"solemnises\",\n  \"solemnizing\": \"solemnising\",\n  \"somber\": \"sombre\",\n  \"specialization\": \"specialisation\",\n  \"specializations\": \"specialisations\",\n  \"specialize\": \"specialise\",\n  \"specialized\": \"specialised\",\n  \"specializes\": \"specialises\",\n  \"specializing\": \"specialising\",\n  \"specter\": \"spectre\",\n  \"specters\": \"spectres\",\n  \"spiraled\": \"spiralled\",\n  \"spiraling\": \"spiralling\",\n  \"splendor\": \"splendour\",\n  \"splendors\": \"splendours\",\n  \"squirreled\": \"squirrelled\",\n  \"squirreling\": \"squirrelling\",\n  \"stabilization\": \"stabilisation\",\n  \"stabilize\": \"stabilise\",\n  \"stabilized\": \"stabilised\",\n  \"stabilizer\": \"stabiliser\",\n  \"stabilizers\": \"stabilisers\",\n  \"stabilizes\": \"stabilises\",\n  \"stabilizing\": \"stabilising\",\n  \"standardization\": \"standardisation\",\n  \"standardize\": \"standardise\",\n  \"standardized\": \"standardised\",\n  \"standardizes\": \"standardises\",\n  \"standardizing\": \"standardising\",\n  \"stenciled\": \"stencilled\",\n  \"stenciling\": \"stencilling\",\n  \"sterilization\": \"sterilisation\",\n  \"sterilizations\": \"sterilisations\",\n  \"sterilize\": \"sterilise\",\n  \"sterilized\": \"sterilised\",\n  \"sterilizer\": \"steriliser\",\n  \"sterilizers\": \"sterilisers\",\n  \"sterilizes\": \"sterilises\",\n  \"sterilizing\": \"sterilising\",\n  \"stigmatization\": \"stigmatisation\",\n  \"stigmatize\": \"stigmatise\",\n  \"stigmatized\": \"stigmatised\",\n  \"stigmatizes\": \"stigmatises\",\n  \"stigmatizing\": \"stigmatising\",\n  \"story\": \"storey\",\n  \"stories\": \"storeys\",\n  \"subsidization\": \"subsidisation\",\n  \"subsidize\": \"subsidise\",\n  \"subsidized\": \"subsidised\",\n  \"subsidizer\": \"subsidiser\",\n  \"subsidizers\": \"subsidisers\",\n  \"subsidizes\": \"subsidises\",\n  \"subsidizing\": \"subsidising\",\n  \"succor\": \"succour\",\n  \"succored\": \"succoured\",\n  \"succoring\": \"succouring\",\n  \"succors\": \"succours\",\n  \"sulfate\": \"sulphate\",\n  \"sulfates\": \"sulphates\",\n  \"sulfide\": \"sulphide\",\n  \"sulfides\": \"sulphides\",\n  \"sulfur\": \"sulphur\",\n  \"sulfurous\": \"sulphurous\",\n  \"summarize\": \"summarise\",\n  \"summarized\": \"summarised\",\n  \"summarizes\": \"summarises\",\n  \"summarizing\": \"summarising\",\n  \"swiveled\": \"swivelled\",\n  \"swiveling\": \"swivelling\",\n  \"symbolize\": \"symbolise\",\n  \"symbolized\": \"symbolised\",\n  \"symbolizes\": \"symbolises\",\n  \"symbolizing\": \"symbolising\",\n  \"sympathize\": \"sympathise\",\n  \"sympathized\": \"sympathised\",\n  \"sympathizer\": \"sympathiser\",\n  \"sympathizers\": \"sympathisers\",\n  \"sympathizes\": \"sympathises\",\n  \"sympathizing\": \"sympathising\",\n  \"synchronization\": \"synchronisation\",\n  \"synchronize\": \"synchronise\",\n  \"synchronized\": \"synchronised\",\n  \"synchronizes\": \"synchronises\",\n  \"synchronizing\": \"synchronising\",\n  \"synthesize\": \"synthesise\",\n  \"synthesized\": \"synthesised\",\n  \"synthesizer\": \"synthesiser\",\n  \"synthesizers\": \"synthesisers\",\n  \"synthesizes\": \"synthesises\",\n  \"synthesizing\": \"synthesising\",\n  \"siphon\": \"syphon\",\n  \"siphoned\": \"syphoned\",\n  \"siphoning\": \"syphoning\",\n  \"siphons\": \"syphons\",\n  \"systematization\": \"systematisation\",\n  \"systematize\": \"systematise\",\n  \"systematized\": \"systematised\",\n  \"systematizes\": \"systematises\",\n  \"systematizing\": \"systematising\",\n  \"tantalize\": \"tantalise\",\n  \"tantalized\": \"tantalised\",\n  \"tantalizes\": \"tantalises\",\n  \"tantalizing\": \"tantalising\",\n  \"tantalizingly\": \"tantalisingly\",\n  \"tasseled\": \"tasselled\",\n  \"technicolor\": \"technicolour\",\n  \"temporize\": \"temporise\",\n  \"temporized\": \"temporised\",\n  \"temporizes\": \"temporises\",\n  \"temporizing\": \"temporising\",\n  \"tenderize\": \"tenderise\",\n  \"tenderized\": \"tenderised\",\n  \"tenderizes\": \"tenderises\",\n  \"tenderizing\": \"tenderising\",\n  \"terrorize\": \"terrorise\",\n  \"terrorized\": \"terrorised\",\n  \"terrorizes\": \"terrorises\",\n  \"terrorizing\": \"terrorising\",\n  \"theater\": \"theatre\",\n  \"theatergoer\": \"theatregoer\",\n  \"theatergoers\": \"theatregoers\",\n  \"theaters\": \"theatres\",\n  \"theorize\": \"theorise\",\n  \"theorized\": \"theorised\",\n  \"theorizes\": \"theorises\",\n  \"theorizing\": \"theorising\",\n  \"ton\": \"tonne\",\n  \"tons\": \"tonnes\",\n  \"toweled\": \"towelled\",\n  \"toweling\": \"towelling\",\n  \"toxemia\": \"toxaemia\",\n  \"tranquilize\": \"tranquillize\",\n  \"tranquilized\": \"tranquillized\",\n  \"tranquilizer\": \"tranquillizer\",\n  \"tranquilizers\": \"tranquillizers\",\n  \"tranquilizes\": \"tranquillizes\",\n  \"tranquilizing\": \"tranquillizing\",\n  \"tranquility\": \"tranquilly\",\n  \"transistorized\": \"transistorised\",\n  \"traumatize\": \"traumatise\",\n  \"traumatized\": \"traumatised\",\n  \"traumatizes\": \"traumatises\",\n  \"traumatizing\": \"traumatising\",\n  \"traveled\": \"travelled\",\n  \"traveler\": \"traveller\",\n  \"travelers\": \"travellers\",\n  \"traveling\": \"travelling\",\n  \"travelog\": \"travelogue\",\n  \"travelogs\": \"travelogues\",\n  \"trialed\": \"trialled\",\n  \"trialing\": \"trialling\",\n  \"tricolor\": \"tricolour\",\n  \"tricolors\": \"tricolours\",\n  \"trivialize\": \"trivialise\",\n  \"trivialized\": \"trivialised\",\n  \"trivializes\": \"trivialises\",\n  \"trivializing\": \"trivialising\",\n  \"tumor\": \"tumour\",\n  \"tumors\": \"tumours\",\n  \"tunneled\": \"tunnelled\",\n  \"tunneling\": \"tunnelling\",\n  \"tyrannize\": \"tyrannise\",\n  \"tyrannized\": \"tyrannised\",\n  \"tyrannizes\": \"tyrannises\",\n  \"tyrannizing\": \"tyrannising\",\n  \"tire\": \"tyre\",\n  \"tires\": \"tyres\",\n  \"unauthorized\": \"unauthorised\",\n  \"uncivilized\": \"uncivilised\",\n  \"underutilized\": \"underutilised\",\n  \"unequaled\": \"unequalled\",\n  \"unfavorable\": \"unfavourable\",\n  \"unfavorably\": \"unfavourably\",\n  \"unionization\": \"unionisation\",\n  \"unionize\": \"unionise\",\n  \"unionized\": \"unionised\",\n  \"unionizes\": \"unionises\",\n  \"unionizing\": \"unionising\",\n  \"unorganized\": \"unorganised\",\n  \"unraveled\": \"unravelled\",\n  \"unraveling\": \"unravelling\",\n  \"unrecognizable\": \"unrecognisable\",\n  \"unrecognized\": \"unrecognised\",\n  \"unrivaled\": \"unrivalled\",\n  \"unsavory\": \"unsavoury\",\n  \"untrammeled\": \"untrammelled\",\n  \"urbanization\": \"urbanisation\",\n  \"urbanize\": \"urbanise\",\n  \"urbanized\": \"urbanised\",\n  \"urbanizes\": \"urbanises\",\n  \"urbanizing\": \"urbanising\",\n  \"utilizable\": \"utilisable\",\n  \"utilization\": \"utilisation\",\n  \"utilize\": \"utilise\",\n  \"utilized\": \"utilised\",\n  \"utilizes\": \"utilises\",\n  \"utilizing\": \"utilising\",\n  \"valor\": \"valour\",\n  \"vandalize\": \"vandalise\",\n  \"vandalized\": \"vandalised\",\n  \"vandalizes\": \"vandalises\",\n  \"vandalizing\": \"vandalising\",\n  \"vaporization\": \"vaporisation\",\n  \"vaporize\": \"vaporise\",\n  \"vaporized\": \"vaporised\",\n  \"vaporizes\": \"vaporises\",\n  \"vaporizing\": \"vaporising\",\n  \"vapor\": \"vapour\",\n  \"vapors\": \"vapours\",\n  \"verbalize\": \"verbalise\",\n  \"verbalized\": \"verbalised\",\n  \"verbalizes\": \"verbalises\",\n  \"verbalizing\": \"verbalising\",\n  \"victimization\": \"victimisation\",\n  \"victimize\": \"victimise\",\n  \"victimized\": \"victimised\",\n  \"victimizes\": \"victimises\",\n  \"victimizing\": \"victimising\",\n  \"videodisk\": \"videodisc\",\n  \"videodisks\": \"videodiscs\",\n  \"vigor\": \"vigour\",\n  \"visualization\": \"visualisation\",\n  \"visualizations\": \"visualisations\",\n  \"visualize\": \"visualise\",\n  \"visualized\": \"visualised\",\n  \"visualizes\": \"visualises\",\n  \"visualizing\": \"visualising\",\n  \"vocalization\": \"vocalisation\",\n  \"vocalizations\": \"vocalisations\",\n  \"vocalize\": \"vocalise\",\n  \"vocalized\": \"vocalised\",\n  \"vocalizes\": \"vocalises\",\n  \"vocalizing\": \"vocalising\",\n  \"vulcanized\": \"vulcanised\",\n  \"vulgarization\": \"vulgarisation\",\n  \"vulgarize\": \"vulgarise\",\n  \"vulgarized\": \"vulgarised\",\n  \"vulgarizes\": \"vulgarises\",\n  \"vulgarizing\": \"vulgarising\",\n  \"wagon\": \"waggon\",\n  \"wagons\": \"waggons\",\n  \"watercolor\": \"watercolour\",\n  \"watercolors\": \"watercolours\",\n  \"weaseled\": \"weaselled\",\n  \"weaseling\": \"weaselling\",\n  \"westernization\": \"westernisation\",\n  \"westernize\": \"westernise\",\n  \"westernized\": \"westernised\",\n  \"westernizes\": \"westernises\",\n  \"westernizing\": \"westernising\",\n  \"womanize\": \"womanise\",\n  \"womanized\": \"womanised\",\n  \"womanizer\": \"womaniser\",\n  \"womanizers\": \"womanisers\",\n  \"womanizes\": \"womanises\",\n  \"womanizing\": \"womanising\",\n  \"woolen\": \"woollen\",\n  \"woolens\": \"woollens\",\n  \"woolies\": \"woollies\",\n  \"wooly\": \"woolly\",\n  \"worshiped\": \"worshipped\",\n  \"worshiping\": \"worshipping\",\n  \"worshiper\": \"worshipper\",\n  \"yodeled\": \"yodelled\",\n  \"yodeling\": \"yodelling\",\n  \"yogurt\": \"yoghurt\",\n  \"yogurts\": \"yoghurts\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "american-to-british-spelling.js"
      ],
      "names": [
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/new_name/Desktop/british translator/components/",
      "sourcesContent": [
        "module.exports = {\n  \"accessorize\": \"accessorise\",\n  \"accessorized\": \"accessorised\",\n  \"accessorizes\": \"accessorises\",\n  \"accessorizing\": \"accessorising\",\n  \"acclimatization\": \"acclimatisation\",\n  \"acclimatize\": \"acclimatise\",\n  \"acclimatized\": \"acclimatised\",\n  \"acclimatizes\": \"acclimatises\",\n  \"acclimatizing\": \"acclimatising\",\n  \"accouterments\": \"accoutrements\",\n  \"eon\": \"aeon\",\n  \"eons\": \"aeons\",\n  \"aerogram\": \"aerogramme\",\n  \"aerograms\": \"aerogrammes\",\n  \"airplane\": \"aeroplane\",\n  \"airplanes\": \"aeroplanes\",\n  \"etiology\": \"aetiology\",\n  \"aging\": \"ageing\",\n  \"aggrandizement\": \"aggrandisement\",\n  \"agonize\": \"agonise\",\n  \"agonized\": \"agonised\",\n  \"agonizes\": \"agonises\",\n  \"agonizing\": \"agonising\",\n  \"agonizingly\": \"agonisingly\",\n  \"almanac\": \"almanack\",\n  \"almanacs\": \"almanacks\",\n  \"aluminum\": \"aluminium\",\n  \"amortizable\": \"amortisable\",\n  \"amortization\": \"amortisation\",\n  \"amortizations\": \"amortisations\",\n  \"amortize\": \"amortise\",\n  \"amortized\": \"amortised\",\n  \"amortizes\": \"amortises\",\n  \"amortizing\": \"amortising\",\n  \"amphitheater\": \"amphitheatre\",\n  \"amphitheaters\": \"amphitheatres\",\n  \"anemia\": \"anaemia\",\n  \"anemic\": \"anaemic\",\n  \"anesthesia\": \"anaesthesia\",\n  \"anesthetic\": \"anaesthetic\",\n  \"anesthetics\": \"anaesthetics\",\n  \"anesthetize\": \"anaesthetize\",\n  \"anesthetized\": \"anaesthetized\",\n  \"anesthetizes\": \"anaesthetizes\",\n  \"anesthetizing\": \"anaesthetizing\",\n  \"anesthetist\": \"anaesthetist\",\n  \"anesthetists\": \"anaesthetists\",\n  \"analog\": \"analogue\",\n  \"analogs\": \"analogues\",\n  \"analyze\": \"analyse\",\n  \"analyzed\": \"analysed\",\n  \"analyzes\": \"analyses\",\n  \"analyzing\": \"analysing\",\n  \"anglicize\": \"anglicise\",\n  \"anglicized\": \"anglicised\",\n  \"anglicizes\": \"anglicises\",\n  \"anglicizing\": \"anglicising\",\n  \"annualized\": \"annualised\",\n  \"antagonize\": \"antagonise\",\n  \"antagonized\": \"antagonised\",\n  \"antagonizes\": \"antagonises\",\n  \"antagonizing\": \"antagonising\",\n  \"apologize\": \"apologise\",\n  \"apologized\": \"apologised\",\n  \"apologizes\": \"apologises\",\n  \"apologizing\": \"apologising\",\n  \"appall\": \"appal\",\n  \"appalls\": \"appals\",\n  \"appetizer\": \"appetiser\",\n  \"appetizers\": \"appetisers\",\n  \"appetizing\": \"appetising\",\n  \"appetizingly\": \"appetisingly\",\n  \"arbor\": \"arbour\",\n  \"arbors\": \"arbours\",\n  \"archeological\": \"archaeological\",\n  \"archeologically\": \"archaeologically\",\n  \"archeologist\": \"archaeologist\",\n  \"archeologists\": \"archaeologists\",\n  \"archeology\": \"archaeology\",\n  \"ardor\": \"ardour\",\n  \"armor\": \"armour\",\n  \"armored\": \"armoured\",\n  \"armorer\": \"armourer\",\n  \"armorers\": \"armourers\",\n  \"armories\": \"armouries\",\n  \"armory\": \"armoury\",\n  \"artifact\": \"artefact\",\n  \"artifacts\": \"artefacts\",\n  \"authorize\": \"authorise\",\n  \"authorized\": \"authorised\",\n  \"authorizes\": \"authorises\",\n  \"authorizing\": \"authorising\",\n  \"ax\": \"axe\",\n  \"backpedaled\": \"backpedalled\",\n  \"backpedaling\": \"backpedalling\",\n  \"banister\": \"bannister\",\n  \"banisters\": \"bannisters\",\n  \"baptize\": \"baptise\",\n  \"baptized\": \"baptised\",\n  \"baptizes\": \"baptises\",\n  \"baptizing\": \"baptising\",\n  \"battleax\": \"battleaxe\",\n  \"balk\": \"baulk\",\n  \"balked\": \"baulked\",\n  \"balking\": \"baulking\",\n  \"balks\": \"baulks\",\n  \"bedeviled\": \"bedevilled\",\n  \"bedeviling\": \"bedevilling\",\n  \"behavior\": \"behaviour\",\n  \"behavioral\": \"behavioural\",\n  \"behaviorism\": \"behaviourism\",\n  \"behaviorist\": \"behaviourist\",\n  \"behaviorists\": \"behaviourists\",\n  \"behaviors\": \"behaviours\",\n  \"behoove\": \"behove\",\n  \"behooved\": \"behoved\",\n  \"behooves\": \"behoves\",\n  \"bejeweled\": \"bejewelled\",\n  \"belabor\": \"belabour\",\n  \"belabored\": \"belaboured\",\n  \"belaboring\": \"belabouring\",\n  \"belabors\": \"belabours\",\n  \"beveled\": \"bevelled\",\n  \"bevies\": \"bevvies\",\n  \"bevy\": \"bevvy\",\n  \"biased\": \"biassed\",\n  \"biasing\": \"biassing\",\n  \"binging\": \"bingeing\",\n  \"bougainvillea\": \"bougainvillaea\",\n  \"bougainvilleas\": \"bougainvillaeas\",\n  \"bowdlerize\": \"bowdlerise\",\n  \"bowdlerized\": \"bowdlerised\",\n  \"bowdlerizes\": \"bowdlerises\",\n  \"bowdlerizing\": \"bowdlerising\",\n  \"breathalyze\": \"breathalyse\",\n  \"breathalyzed\": \"breathalysed\",\n  \"breathalyzer\": \"breathalyser\",\n  \"breathalyzers\": \"breathalysers\",\n  \"breathalyzes\": \"breathalyses\",\n  \"breathalyzing\": \"breathalysing\",\n  \"brutalize\": \"brutalise\",\n  \"brutalized\": \"brutalised\",\n  \"brutalizes\": \"brutalises\",\n  \"brutalizing\": \"brutalising\",\n  \"busses\": \"buses\",\n  \"bussing\": \"busing\",\n  \"cesarean\": \"caesarean\",\n  \"cesareans\": \"caesareans\",\n  \"caliber\": \"calibre\",\n  \"calibers\": \"calibres\",\n  \"caliper\": \"calliper\",\n  \"calipers\": \"callipers\",\n  \"calisthenics\": \"callisthenics\",\n  \"canalize\": \"canalise\",\n  \"canalized\": \"canalised\",\n  \"canalizes\": \"canalises\",\n  \"canalizing\": \"canalising\",\n  \"canceled\": \"cancelled\",\n  \"canceling\": \"cancelling\",\n  \"candor\": \"candour\",\n  \"cannibalize\": \"cannibalise\",\n  \"cannibalized\": \"cannibalised\",\n  \"cannibalizes\": \"cannibalises\",\n  \"cannibalizing\": \"cannibalising\",\n  \"canonize\": \"canonise\",\n  \"canonized\": \"canonised\",\n  \"canonizes\": \"canonises\",\n  \"canonizing\": \"canonising\",\n  \"capitalize\": \"capitalise\",\n  \"capitalized\": \"capitalised\",\n  \"capitalizes\": \"capitalises\",\n  \"capitalizing\": \"capitalising\",\n  \"caramelize\": \"caramelise\",\n  \"caramelized\": \"caramelised\",\n  \"caramelizes\": \"caramelises\",\n  \"caramelizing\": \"caramelising\",\n  \"carbonize\": \"carbonise\",\n  \"carbonized\": \"carbonised\",\n  \"carbonizes\": \"carbonises\",\n  \"carbonizing\": \"carbonising\",\n  \"caroled\": \"carolled\",\n  \"caroling\": \"carolling\",\n  \"catalog\": \"catalogue\",\n  \"cataloged\": \"catalogued\",\n  \"catalogs\": \"catalogues\",\n  \"cataloging\": \"cataloguing\",\n  \"catalyze\": \"catalyse\",\n  \"catalyzed\": \"catalysed\",\n  \"catalyzes\": \"catalyses\",\n  \"catalyzing\": \"catalysing\",\n  \"categorize\": \"categorise\",\n  \"categorized\": \"categorised\",\n  \"categorizes\": \"categorises\",\n  \"categorizing\": \"categorising\",\n  \"cauterize\": \"cauterise\",\n  \"cauterized\": \"cauterised\",\n  \"cauterizes\": \"cauterises\",\n  \"cauterizing\": \"cauterising\",\n  \"caviled\": \"cavilled\",\n  \"caviling\": \"cavilling\",\n  \"centigram\": \"centigramme\",\n  \"centigrams\": \"centigrammes\",\n  \"centiliter\": \"centilitre\",\n  \"centiliters\": \"centilitres\",\n  \"centimeter\": \"centimetre\",\n  \"centimeters\": \"centimetres\",\n  \"centralize\": \"centralise\",\n  \"centralized\": \"centralised\",\n  \"centralizes\": \"centralises\",\n  \"centralizing\": \"centralising\",\n  \"center\": \"centre\",\n  \"centered\": \"centred\",\n  \"centerfold\": \"centrefold\",\n  \"centerfolds\": \"centrefolds\",\n  \"centerpiece\": \"centrepiece\",\n  \"centerpieces\": \"centrepieces\",\n  \"centers\": \"centres\",\n  \"channeled\": \"channelled\",\n  \"channeling\": \"channelling\",\n  \"characterize\": \"characterise\",\n  \"characterized\": \"characterised\",\n  \"characterizes\": \"characterises\",\n  \"characterizing\": \"characterising\",\n  \"check\": \"cheque\",\n  \"checkbook\": \"chequebook\",\n  \"checkbooks\": \"chequebooks\",\n  \"checkered\": \"chequered\",\n  \"checks\": \"cheques\",\n  \"chili\": \"chilli\",\n  \"chimera\": \"chimaera\",\n  \"chimeras\": \"chimaeras\",\n  \"chiseled\": \"chiselled\",\n  \"chiseling\": \"chiselling\",\n  \"circularize\": \"circularise\",\n  \"circularized\": \"circularised\",\n  \"circularizes\": \"circularises\",\n  \"circularizing\": \"circularising\",\n  \"civilize\": \"civilise\",\n  \"civilized\": \"civilised\",\n  \"civilizes\": \"civilises\",\n  \"civilizing\": \"civilising\",\n  \"clamor\": \"clamour\",\n  \"clamored\": \"clamoured\",\n  \"clamoring\": \"clamouring\",\n  \"clamors\": \"clamours\",\n  \"clangor\": \"clangour\",\n  \"clarinetist\": \"clarinettist\",\n  \"clarinetists\": \"clarinettists\",\n  \"collectivize\": \"collectivise\",\n  \"collectivized\": \"collectivised\",\n  \"collectivizes\": \"collectivises\",\n  \"collectivizing\": \"collectivising\",\n  \"colonization\": \"colonisation\",\n  \"colonize\": \"colonise\",\n  \"colonized\": \"colonised\",\n  \"colonizer\": \"coloniser\",\n  \"colonizers\": \"colonisers\",\n  \"colonizes\": \"colonises\",\n  \"colonizing\": \"colonising\",\n  \"color\": \"colour\",\n  \"colorant\": \"colourant\",\n  \"colorants\": \"colourants\",\n  \"colored\": \"coloured\",\n  \"coloreds\": \"coloureds\",\n  \"colorful\": \"colourful\",\n  \"colorfully\": \"colourfully\",\n  \"coloring\": \"colouring\",\n  \"colorize\": \"colourize\",\n  \"colorized\": \"colourized\",\n  \"colorizes\": \"colourizes\",\n  \"colorizing\": \"colourizing\",\n  \"colorless\": \"colourless\",\n  \"colors\": \"colours\",\n  \"commercialize\": \"commercialise\",\n  \"commercialized\": \"commercialised\",\n  \"commercializes\": \"commercialises\",\n  \"commercializing\": \"commercialising\",\n  \"compartmentalize\": \"compartmentalise\",\n  \"compartmentalized\": \"compartmentalised\",\n  \"compartmentalizes\": \"compartmentalises\",\n  \"compartmentalizing\": \"compartmentalising\",\n  \"computerize\": \"computerise\",\n  \"computerized\": \"computerised\",\n  \"computerizes\": \"computerises\",\n  \"computerizing\": \"computerising\",\n  \"conceptualize\": \"conceptualise\",\n  \"conceptualized\": \"conceptualised\",\n  \"conceptualizes\": \"conceptualises\",\n  \"conceptualizing\": \"conceptualising\",\n  \"connection\": \"connexion\",\n  \"connections\": \"connexions\",\n  \"contextualize\": \"contextualise\",\n  \"contextualized\": \"contextualised\",\n  \"contextualizes\": \"contextualises\",\n  \"contextualizing\": \"contextualising\",\n  \"cozier\": \"cosier\",\n  \"cozies\": \"cosies\",\n  \"coziest\": \"cosiest\",\n  \"cozily\": \"cosily\",\n  \"coziness\": \"cosiness\",\n  \"cozy\": \"cosy\",\n  \"councilor\": \"councillor\",\n  \"councilors\": \"councillors\",\n  \"counseled\": \"counselled\",\n  \"counseling\": \"counselling\",\n  \"counselor\": \"counsellor\",\n  \"counselors\": \"counsellors\",\n  \"crenelated\": \"crenellated\",\n  \"criminalize\": \"criminalise\",\n  \"criminalized\": \"criminalised\",\n  \"criminalizes\": \"criminalises\",\n  \"criminalizing\": \"criminalising\",\n  \"criticize\": \"criticise\",\n  \"criticized\": \"criticised\",\n  \"criticizes\": \"criticises\",\n  \"criticizing\": \"criticising\",\n  \"crueler\": \"crueller\",\n  \"cruelest\": \"cruellest\",\n  \"crystallization\": \"crystallisation\",\n  \"crystallize\": \"crystallise\",\n  \"crystallized\": \"crystallised\",\n  \"crystallizes\": \"crystallises\",\n  \"crystallizing\": \"crystallising\",\n  \"cudgeled\": \"cudgelled\",\n  \"cudgeling\": \"cudgelling\",\n  \"customize\": \"customise\",\n  \"customized\": \"customised\",\n  \"customizes\": \"customises\",\n  \"customizing\": \"customising\",\n  \"cipher\": \"cypher\",\n  \"ciphers\": \"cyphers\",\n  \"decentralization\": \"decentralisation\",\n  \"decentralize\": \"decentralise\",\n  \"decentralized\": \"decentralised\",\n  \"decentralizes\": \"decentralises\",\n  \"decentralizing\": \"decentralising\",\n  \"decriminalization\": \"decriminalisation\",\n  \"decriminalize\": \"decriminalise\",\n  \"decriminalized\": \"decriminalised\",\n  \"decriminalizes\": \"decriminalises\",\n  \"decriminalizing\": \"decriminalising\",\n  \"defense\": \"defence\",\n  \"defenseless\": \"defenceless\",\n  \"defenses\": \"defences\",\n  \"dehumanization\": \"dehumanisation\",\n  \"dehumanize\": \"dehumanise\",\n  \"dehumanized\": \"dehumanised\",\n  \"dehumanizes\": \"dehumanises\",\n  \"dehumanizing\": \"dehumanising\",\n  \"demeanor\": \"demeanour\",\n  \"demilitarization\": \"demilitarisation\",\n  \"demilitarize\": \"demilitarise\",\n  \"demilitarized\": \"demilitarised\",\n  \"demilitarizes\": \"demilitarises\",\n  \"demilitarizing\": \"demilitarising\",\n  \"demobilization\": \"demobilisation\",\n  \"demobilize\": \"demobilise\",\n  \"demobilized\": \"demobilised\",\n  \"demobilizes\": \"demobilises\",\n  \"demobilizing\": \"demobilising\",\n  \"democratization\": \"democratisation\",\n  \"democratize\": \"democratise\",\n  \"democratized\": \"democratised\",\n  \"democratizes\": \"democratises\",\n  \"democratizing\": \"democratising\",\n  \"demonize\": \"demonise\",\n  \"demonized\": \"demonised\",\n  \"demonizes\": \"demonises\",\n  \"demonizing\": \"demonising\",\n  \"demoralization\": \"demoralisation\",\n  \"demoralize\": \"demoralise\",\n  \"demoralized\": \"demoralised\",\n  \"demoralizes\": \"demoralises\",\n  \"demoralizing\": \"demoralising\",\n  \"denationalization\": \"denationalisation\",\n  \"denationalize\": \"denationalise\",\n  \"denationalized\": \"denationalised\",\n  \"denationalizes\": \"denationalises\",\n  \"denationalizing\": \"denationalising\",\n  \"donut\": \"doughnut\",\n  \"deodorize\": \"deodorise\",\n  \"deodorized\": \"deodorised\",\n  \"deodorizes\": \"deodorises\",\n  \"deodorizing\": \"deodorising\",\n  \"depersonalize\": \"depersonalise\",\n  \"depersonalized\": \"depersonalised\",\n  \"depersonalizes\": \"depersonalises\",\n  \"depersonalizing\": \"depersonalising\",\n  \"deputize\": \"deputise\",\n  \"deputized\": \"deputised\",\n  \"deputizes\": \"deputises\",\n  \"deputizing\": \"deputising\",\n  \"desensitization\": \"desensitisation\",\n  \"desensitize\": \"desensitise\",\n  \"desensitized\": \"desensitised\",\n  \"desensitizes\": \"desensitises\",\n  \"desensitizing\": \"desensitising\",\n  \"destabilization\": \"destabilisation\",\n  \"destabilize\": \"destabilise\",\n  \"destabilized\": \"destabilised\",\n  \"destabilizes\": \"destabilises\",\n  \"destabilizing\": \"destabilising\",\n  \"dialed\": \"dialled\",\n  \"dialing\": \"dialling\",\n  \"dialog\": \"dialogue\",\n  \"dialogs\": \"dialogues\",\n  \"diarrhea\": \"diarrhoea\",\n  \"digitize\": \"digitise\",\n  \"digitized\": \"digitised\",\n  \"digitizes\": \"digitises\",\n  \"digitizing\": \"digitising\",\n  \"disk\": \"disc\",\n  \"discolor\": \"discolour\",\n  \"discolored\": \"discoloured\",\n  \"discoloring\": \"discolouring\",\n  \"discolors\": \"discolours\",\n  \"disks\": \"discs\",\n  \"disemboweled\": \"disembowelled\",\n  \"disemboweling\": \"disembowelling\",\n  \"disfavor\": \"disfavour\",\n  \"disheveled\": \"dishevelled\",\n  \"dishonor\": \"dishonour\",\n  \"dishonorable\": \"dishonourable\",\n  \"dishonorably\": \"dishonourably\",\n  \"dishonored\": \"dishonoured\",\n  \"dishonoring\": \"dishonouring\",\n  \"dishonors\": \"dishonours\",\n  \"disorganization\": \"disorganisation\",\n  \"disorganized\": \"disorganised\",\n  \"distill\": \"distil\",\n  \"distills\": \"distils\",\n  \"dramatization\": \"dramatisation\",\n  \"dramatizations\": \"dramatisations\",\n  \"dramatize\": \"dramatise\",\n  \"dramatized\": \"dramatised\",\n  \"dramatizes\": \"dramatises\",\n  \"dramatizing\": \"dramatising\",\n  \"draft\": \"draught\",\n  \"draftboard\": \"draughtboard\",\n  \"draftboards\": \"draughtboards\",\n  \"draftier\": \"draughtier\",\n  \"draftiest\": \"draughtiest\",\n  \"drafts\": \"draughts\",\n  \"draftsman\": \"draughtsman\",\n  \"draftsmanship\": \"draughtsmanship\",\n  \"draftsmen\": \"draughtsmen\",\n  \"draftswoman\": \"draughtswoman\",\n  \"draftswomen\": \"draughtswomen\",\n  \"drafty\": \"draughty\",\n  \"driveled\": \"drivelled\",\n  \"driveling\": \"drivelling\",\n  \"dueled\": \"duelled\",\n  \"dueling\": \"duelling\",\n  \"economize\": \"economise\",\n  \"economized\": \"economised\",\n  \"economizes\": \"economises\",\n  \"economizing\": \"economising\",\n  \"edema\": \"edoema\",\n  \"editorialize\": \"editorialise\",\n  \"editorialized\": \"editorialised\",\n  \"editorializes\": \"editorialises\",\n  \"editorializing\": \"editorialising\",\n  \"empathize\": \"empathise\",\n  \"empathized\": \"empathised\",\n  \"empathizes\": \"empathises\",\n  \"empathizing\": \"empathising\",\n  \"emphasize\": \"emphasise\",\n  \"emphasized\": \"emphasised\",\n  \"emphasizes\": \"emphasises\",\n  \"emphasizing\": \"emphasising\",\n  \"enameled\": \"enamelled\",\n  \"enameling\": \"enamelling\",\n  \"enamored\": \"enamoured\",\n  \"encyclopedia\": \"encyclopaedia\",\n  \"encyclopedias\": \"encyclopaedias\",\n  \"encyclopedic\": \"encyclopaedic\",\n  \"endeavor\": \"endeavour\",\n  \"endeavored\": \"endeavoured\",\n  \"endeavoring\": \"endeavouring\",\n  \"endeavors\": \"endeavours\",\n  \"energize\": \"energise\",\n  \"energized\": \"energised\",\n  \"energizes\": \"energises\",\n  \"energizing\": \"energising\",\n  \"enroll\": \"enrol\",\n  \"enrolls\": \"enrols\",\n  \"enthrall\": \"enthral\",\n  \"enthralls\": \"enthrals\",\n  \"epaulet\": \"epaulette\",\n  \"epaulets\": \"epaulettes\",\n  \"epicenter\": \"epicentre\",\n  \"epicenters\": \"epicentres\",\n  \"epilog\": \"epilogue\",\n  \"epilogs\": \"epilogues\",\n  \"epitomize\": \"epitomise\",\n  \"epitomized\": \"epitomised\",\n  \"epitomizes\": \"epitomises\",\n  \"epitomizing\": \"epitomising\",\n  \"equalization\": \"equalisation\",\n  \"equalize\": \"equalise\",\n  \"equalized\": \"equalised\",\n  \"equalizer\": \"equaliser\",\n  \"equalizers\": \"equalisers\",\n  \"equalizes\": \"equalises\",\n  \"equalizing\": \"equalising\",\n  \"eulogize\": \"eulogise\",\n  \"eulogized\": \"eulogised\",\n  \"eulogizes\": \"eulogises\",\n  \"eulogizing\": \"eulogising\",\n  \"evangelize\": \"evangelise\",\n  \"evangelized\": \"evangelised\",\n  \"evangelizes\": \"evangelises\",\n  \"evangelizing\": \"evangelising\",\n  \"exorcize\": \"exorcise\",\n  \"exorcized\": \"exorcised\",\n  \"exorcizes\": \"exorcises\",\n  \"exorcizing\": \"exorcising\",\n  \"extemporization\": \"extemporisation\",\n  \"extemporize\": \"extemporise\",\n  \"extemporized\": \"extemporised\",\n  \"extemporizes\": \"extemporises\",\n  \"extemporizing\": \"extemporising\",\n  \"externalization\": \"externalisation\",\n  \"externalizations\": \"externalisations\",\n  \"externalize\": \"externalise\",\n  \"externalized\": \"externalised\",\n  \"externalizes\": \"externalises\",\n  \"externalizing\": \"externalising\",\n  \"factorize\": \"factorise\",\n  \"factorized\": \"factorised\",\n  \"factorizes\": \"factorises\",\n  \"factorizing\": \"factorising\",\n  \"fecal\": \"faecal\",\n  \"feces\": \"faeces\",\n  \"familiarization\": \"familiarisation\",\n  \"familiarize\": \"familiarise\",\n  \"familiarized\": \"familiarised\",\n  \"familiarizes\": \"familiarises\",\n  \"familiarizing\": \"familiarising\",\n  \"fantasize\": \"fantasise\",\n  \"fantasized\": \"fantasised\",\n  \"fantasizes\": \"fantasises\",\n  \"fantasizing\": \"fantasising\",\n  \"favorable\": \"favourable\",\n  \"favorably\": \"favourably\",\n  \"favored\": \"favoured\",\n  \"favoring\": \"favouring\",\n  \"favorite\": \"favourite\",\n  \"favorites\": \"favourites\",\n  \"favoritism\": \"favouritism\",\n  \"favor\": \"favour\",\n  \"favors\": \"favours\",\n  \"feminize\": \"feminise\",\n  \"feminized\": \"feminised\",\n  \"feminizes\": \"feminises\",\n  \"feminizing\": \"feminising\",\n  \"fertilization\": \"fertilisation\",\n  \"fertilize\": \"fertilise\",\n  \"fertilized\": \"fertilised\",\n  \"fertilizer\": \"fertiliser\",\n  \"fertilizers\": \"fertilisers\",\n  \"fertilizes\": \"fertilises\",\n  \"fertilizing\": \"fertilising\",\n  \"fervor\": \"fervour\",\n  \"fiber\": \"fibre\",\n  \"fiberglass\": \"fibreglass\",\n  \"fibers\": \"fibres\",\n  \"fictionalization\": \"fictionalisation\",\n  \"fictionalizations\": \"fictionalisations\",\n  \"fictionalize\": \"fictionalise\",\n  \"fictionalized\": \"fictionalised\",\n  \"fictionalizes\": \"fictionalises\",\n  \"fictionalizing\": \"fictionalising\",\n  \"filet\": \"fillet\",\n  \"fileted\": \"filleted\",\n  \"fileting\": \"filleting\",\n  \"filets\": \"fillets\",\n  \"finalization\": \"finalisation\",\n  \"finalize\": \"finalise\",\n  \"finalized\": \"finalised\",\n  \"finalizes\": \"finalises\",\n  \"finalizing\": \"finalising\",\n  \"flutist\": \"flautist\",\n  \"flutists\": \"flautists\",\n  \"flavor\": \"flavour\",\n  \"flavored\": \"flavoured\",\n  \"flavoring\": \"flavouring\",\n  \"flavorings\": \"flavourings\",\n  \"flavorless\": \"flavourless\",\n  \"flavors\": \"flavours\",\n  \"flavorsome\": \"flavoursome\",\n  \"fetal\": \"foetal\",\n  \"fetid\": \"foetid\",\n  \"fetus\": \"foetus\",\n  \"fetuses\": \"foetuses\",\n  \"formalization\": \"formalisation\",\n  \"formalize\": \"formalise\",\n  \"formalized\": \"formalised\",\n  \"formalizes\": \"formalises\",\n  \"formalizing\": \"formalising\",\n  \"fossilization\": \"fossilisation\",\n  \"fossilize\": \"fossilise\",\n  \"fossilized\": \"fossilised\",\n  \"fossilizes\": \"fossilises\",\n  \"fossilizing\": \"fossilising\",\n  \"fraternization\": \"fraternisation\",\n  \"fraternize\": \"fraternise\",\n  \"fraternized\": \"fraternised\",\n  \"fraternizes\": \"fraternises\",\n  \"fraternizing\": \"fraternising\",\n  \"fulfill\": \"fulfil\",\n  \"fulfillment\": \"fulfilment\",\n  \"fulfills\": \"fulfils\",\n  \"funneled\": \"funnelled\",\n  \"funneling\": \"funnelling\",\n  \"galvanize\": \"galvanise\",\n  \"galvanized\": \"galvanised\",\n  \"galvanizes\": \"galvanises\",\n  \"galvanizing\": \"galvanising\",\n  \"gamboled\": \"gambolled\",\n  \"gamboling\": \"gambolling\",\n  \"jail\": \"gaol\",\n  \"jailbird\": \"gaolbird\",\n  \"jailbirds\": \"gaolbirds\",\n  \"jailbreak\": \"gaolbreak\",\n  \"jailbreaks\": \"gaolbreaks\",\n  \"jailed\": \"gaoled\",\n  \"jailer\": \"gaoler\",\n  \"jailers\": \"gaolers\",\n  \"jailing\": \"gaoling\",\n  \"jails\": \"gaols\",\n  \"gasses\": \"gases\",\n  \"gage\": \"gauge\",\n  \"gaged\": \"gauged\",\n  \"gages\": \"gauges\",\n  \"gaging\": \"gauging\",\n  \"generalization\": \"generalisation\",\n  \"generalizations\": \"generalisations\",\n  \"generalize\": \"generalise\",\n  \"generalized\": \"generalised\",\n  \"generalizes\": \"generalises\",\n  \"generalizing\": \"generalising\",\n  \"gypsies\": \"gipsies\",\n  \"glamorize\": \"glamorise\",\n  \"glamorized\": \"glamorised\",\n  \"glamorizes\": \"glamorises\",\n  \"glamorizing\": \"glamorising\",\n  \"glamor\": \"glamour\",\n  \"globalization\": \"globalisation\",\n  \"globalize\": \"globalise\",\n  \"globalized\": \"globalised\",\n  \"globalizes\": \"globalises\",\n  \"globalizing\": \"globalising\",\n  \"gluing\": \"glueing\",\n  \"goiter\": \"goitre\",\n  \"goiters\": \"goitres\",\n  \"gonorrhea\": \"gonorrhoea\",\n  \"gram\": \"gramme\",\n  \"grams\": \"grammes\",\n  \"graveled\": \"gravelled\",\n  \"gray\": \"grey\",\n  \"grayed\": \"greyed\",\n  \"graying\": \"greying\",\n  \"grayish\": \"greyish\",\n  \"grayness\": \"greyness\",\n  \"grays\": \"greys\",\n  \"groveled\": \"grovelled\",\n  \"groveling\": \"grovelling\",\n  \"groin\": \"groyne\",\n  \"groins\": \"groynes\",\n  \"grueling\": \"gruelling\",\n  \"gruelingly\": \"gruellingly\",\n  \"griffin\": \"gryphon\",\n  \"griffins\": \"gryphons\",\n  \"gynecological\": \"gynaecological\",\n  \"gynecologist\": \"gynaecologist\",\n  \"gynecologists\": \"gynaecologists\",\n  \"gynecology\": \"gynaecology\",\n  \"hematological\": \"haematological\",\n  \"hematologist\": \"haematologist\",\n  \"hematologists\": \"haematologists\",\n  \"hematology\": \"haematology\",\n  \"hemoglobin\": \"haemoglobin\",\n  \"hemophilia\": \"haemophilia\",\n  \"hemophiliac\": \"haemophiliac\",\n  \"hemophiliacs\": \"haemophiliacs\",\n  \"hemorrhage\": \"haemorrhage\",\n  \"hemorrhaged\": \"haemorrhaged\",\n  \"hemorrhages\": \"haemorrhages\",\n  \"hemorrhaging\": \"haemorrhaging\",\n  \"hemorrhoids\": \"haemorrhoids\",\n  \"harbor\": \"harbour\",\n  \"harbored\": \"harboured\",\n  \"harboring\": \"harbouring\",\n  \"harbors\": \"harbours\",\n  \"harmonization\": \"harmonisation\",\n  \"harmonize\": \"harmonise\",\n  \"harmonized\": \"harmonised\",\n  \"harmonizes\": \"harmonises\",\n  \"harmonizing\": \"harmonising\",\n  \"homeopath\": \"homoeopath\",\n  \"homeopathic\": \"homoeopathic\",\n  \"homeopaths\": \"homoeopaths\",\n  \"homeopathy\": \"homoeopathy\",\n  \"homogenize\": \"homogenise\",\n  \"homogenized\": \"homogenised\",\n  \"homogenizes\": \"homogenises\",\n  \"homogenizing\": \"homogenising\",\n  \"honor\": \"honour\",\n  \"honorable\": \"honourable\",\n  \"honorably\": \"honourably\",\n  \"honored\": \"honoured\",\n  \"honoring\": \"honouring\",\n  \"honors\": \"honours\",\n  \"hospitalization\": \"hospitalisation\",\n  \"hospitalize\": \"hospitalise\",\n  \"hospitalized\": \"hospitalised\",\n  \"hospitalizes\": \"hospitalises\",\n  \"hospitalizing\": \"hospitalising\",\n  \"humanize\": \"humanise\",\n  \"humanized\": \"humanised\",\n  \"humanizes\": \"humanises\",\n  \"humanizing\": \"humanising\",\n  \"humor\": \"humour\",\n  \"humored\": \"humoured\",\n  \"humoring\": \"humouring\",\n  \"humorless\": \"humourless\",\n  \"humors\": \"humours\",\n  \"hybridize\": \"hybridise\",\n  \"hybridized\": \"hybridised\",\n  \"hybridizes\": \"hybridises\",\n  \"hybridizing\": \"hybridising\",\n  \"hypnotize\": \"hypnotise\",\n  \"hypnotized\": \"hypnotised\",\n  \"hypnotizes\": \"hypnotises\",\n  \"hypnotizing\": \"hypnotising\",\n  \"hypothesize\": \"hypothesise\",\n  \"hypothesized\": \"hypothesised\",\n  \"hypothesizes\": \"hypothesises\",\n  \"hypothesizing\": \"hypothesising\",\n  \"idealization\": \"idealisation\",\n  \"idealize\": \"idealise\",\n  \"idealized\": \"idealised\",\n  \"idealizes\": \"idealises\",\n  \"idealizing\": \"idealising\",\n  \"idolize\": \"idolise\",\n  \"idolized\": \"idolised\",\n  \"idolizes\": \"idolises\",\n  \"idolizing\": \"idolising\",\n  \"immobilization\": \"immobilisation\",\n  \"immobilize\": \"immobilise\",\n  \"immobilized\": \"immobilised\",\n  \"immobilizer\": \"immobiliser\",\n  \"immobilizers\": \"immobilisers\",\n  \"immobilizes\": \"immobilises\",\n  \"immobilizing\": \"immobilising\",\n  \"immortalize\": \"immortalise\",\n  \"immortalized\": \"immortalised\",\n  \"immortalizes\": \"immortalises\",\n  \"immortalizing\": \"immortalising\",\n  \"immunization\": \"immunisation\",\n  \"immunize\": \"immunise\",\n  \"immunized\": \"immunised\",\n  \"immunizes\": \"immunises\",\n  \"immunizing\": \"immunising\",\n  \"impaneled\": \"impanelled\",\n  \"impaneling\": \"impanelling\",\n  \"imperiled\": \"imperilled\",\n  \"imperiling\": \"imperilling\",\n  \"individualize\": \"individualise\",\n  \"individualized\": \"individualised\",\n  \"individualizes\": \"individualises\",\n  \"individualizing\": \"individualising\",\n  \"industrialize\": \"industrialise\",\n  \"industrialized\": \"industrialised\",\n  \"industrializes\": \"industrialises\",\n  \"industrializing\": \"industrialising\",\n  \"inflection\": \"inflexion\",\n  \"inflections\": \"inflexions\",\n  \"initialize\": \"initialise\",\n  \"initialized\": \"initialised\",\n  \"initializes\": \"initialises\",\n  \"initializing\": \"initialising\",\n  \"initialed\": \"initialled\",\n  \"initialing\": \"initialling\",\n  \"install\": \"instal\",\n  \"installment\": \"instalment\",\n  \"installments\": \"instalments\",\n  \"installs\": \"instals\",\n  \"instill\": \"instil\",\n  \"instills\": \"instils\",\n  \"institutionalization\": \"institutionalisation\",\n  \"institutionalize\": \"institutionalise\",\n  \"institutionalized\": \"institutionalised\",\n  \"institutionalizes\": \"institutionalises\",\n  \"institutionalizing\": \"institutionalising\",\n  \"intellectualize\": \"intellectualise\",\n  \"intellectualized\": \"intellectualised\",\n  \"intellectualizes\": \"intellectualises\",\n  \"intellectualizing\": \"intellectualising\",\n  \"internalization\": \"internalisation\",\n  \"internalize\": \"internalise\",\n  \"internalized\": \"internalised\",\n  \"internalizes\": \"internalises\",\n  \"internalizing\": \"internalising\",\n  \"internationalization\": \"internationalisation\",\n  \"internationalize\": \"internationalise\",\n  \"internationalized\": \"internationalised\",\n  \"internationalizes\": \"internationalises\",\n  \"internationalizing\": \"internationalising\",\n  \"ionization\": \"ionisation\",\n  \"ionize\": \"ionise\",\n  \"ionized\": \"ionised\",\n  \"ionizer\": \"ioniser\",\n  \"ionizers\": \"ionisers\",\n  \"ionizes\": \"ionises\",\n  \"ionizing\": \"ionising\",\n  \"italicize\": \"italicise\",\n  \"italicized\": \"italicised\",\n  \"italicizes\": \"italicises\",\n  \"italicizing\": \"italicising\",\n  \"itemize\": \"itemise\",\n  \"itemized\": \"itemised\",\n  \"itemizes\": \"itemises\",\n  \"itemizing\": \"itemising\",\n  \"jeopardize\": \"jeopardise\",\n  \"jeopardized\": \"jeopardised\",\n  \"jeopardizes\": \"jeopardises\",\n  \"jeopardizing\": \"jeopardising\",\n  \"jeweled\": \"jewelled\",\n  \"jeweler\": \"jeweller\",\n  \"jewelers\": \"jewellers\",\n  \"jewelry\": \"jewellery\",\n  \"judgment\": \"judgement\",\n  \"kilogram\": \"kilogramme\",\n  \"kilograms\": \"kilogrammes\",\n  \"kilometer\": \"kilometre\",\n  \"kilometers\": \"kilometres\",\n  \"labeled\": \"labelled\",\n  \"labeling\": \"labelling\",\n  \"labor\": \"labour\",\n  \"labored\": \"laboured\",\n  \"laborer\": \"labourer\",\n  \"laborers\": \"labourers\",\n  \"laboring\": \"labouring\",\n  \"labors\": \"labours\",\n  \"lackluster\": \"lacklustre\",\n  \"legalization\": \"legalisation\",\n  \"legalize\": \"legalise\",\n  \"legalized\": \"legalised\",\n  \"legalizes\": \"legalises\",\n  \"legalizing\": \"legalising\",\n  \"legitimize\": \"legitimise\",\n  \"legitimized\": \"legitimised\",\n  \"legitimizes\": \"legitimises\",\n  \"legitimizing\": \"legitimising\",\n  \"leukemia\": \"leukaemia\",\n  \"leveled\": \"levelled\",\n  \"leveler\": \"leveller\",\n  \"levelers\": \"levellers\",\n  \"leveling\": \"levelling\",\n  \"libeled\": \"libelled\",\n  \"libeling\": \"libelling\",\n  \"libelous\": \"libellous\",\n  \"liberalization\": \"liberalisation\",\n  \"liberalize\": \"liberalise\",\n  \"liberalized\": \"liberalised\",\n  \"liberalizes\": \"liberalises\",\n  \"liberalizing\": \"liberalising\",\n  \"license\": \"licence\",\n  \"licensed\": \"licenced\",\n  \"licenses\": \"licences\",\n  \"licensing\": \"licencing\",\n  \"likable\": \"likeable\",\n  \"lionization\": \"lionisation\",\n  \"lionize\": \"lionise\",\n  \"lionized\": \"lionised\",\n  \"lionizes\": \"lionises\",\n  \"lionizing\": \"lionising\",\n  \"liquidize\": \"liquidise\",\n  \"liquidized\": \"liquidised\",\n  \"liquidizer\": \"liquidiser\",\n  \"liquidizers\": \"liquidisers\",\n  \"liquidizes\": \"liquidises\",\n  \"liquidizing\": \"liquidising\",\n  \"liter\": \"litre\",\n  \"liters\": \"litres\",\n  \"localize\": \"localise\",\n  \"localized\": \"localised\",\n  \"localizes\": \"localises\",\n  \"localizing\": \"localising\",\n  \"louver\": \"louvre\",\n  \"louvered\": \"louvred\",\n  \"louvers\": \"louvres\",\n  \"luster\": \"lustre\",\n  \"magnetize\": \"magnetise\",\n  \"magnetized\": \"magnetised\",\n  \"magnetizes\": \"magnetises\",\n  \"magnetizing\": \"magnetising\",\n  \"maneuverability\": \"manoeuvrability\",\n  \"maneuverable\": \"manoeuvrable\",\n  \"maneuver\": \"manoeuvre\",\n  \"maneuvered\": \"manoeuvred\",\n  \"maneuvers\": \"manoeuvres\",\n  \"maneuvering\": \"manoeuvring\",\n  \"maneuverings\": \"manoeuvrings\",\n  \"marginalization\": \"marginalisation\",\n  \"marginalize\": \"marginalise\",\n  \"marginalized\": \"marginalised\",\n  \"marginalizes\": \"marginalises\",\n  \"marginalizing\": \"marginalising\",\n  \"marshaled\": \"marshalled\",\n  \"marshaling\": \"marshalling\",\n  \"marveled\": \"marvelled\",\n  \"marveling\": \"marvelling\",\n  \"marvelous\": \"marvellous\",\n  \"marvelously\": \"marvellously\",\n  \"materialization\": \"materialisation\",\n  \"materialize\": \"materialise\",\n  \"materialized\": \"materialised\",\n  \"materializes\": \"materialises\",\n  \"materializing\": \"materialising\",\n  \"maximization\": \"maximisation\",\n  \"maximize\": \"maximise\",\n  \"maximized\": \"maximised\",\n  \"maximizes\": \"maximises\",\n  \"maximizing\": \"maximising\",\n  \"meager\": \"meagre\",\n  \"mechanization\": \"mechanisation\",\n  \"mechanize\": \"mechanise\",\n  \"mechanized\": \"mechanised\",\n  \"mechanizes\": \"mechanises\",\n  \"mechanizing\": \"mechanising\",\n  \"medieval\": \"mediaeval\",\n  \"memorialize\": \"memorialise\",\n  \"memorialized\": \"memorialised\",\n  \"memorializes\": \"memorialises\",\n  \"memorializing\": \"memorialising\",\n  \"memorize\": \"memorise\",\n  \"memorized\": \"memorised\",\n  \"memorizes\": \"memorises\",\n  \"memorizing\": \"memorising\",\n  \"mesmerize\": \"mesmerise\",\n  \"mesmerized\": \"mesmerised\",\n  \"mesmerizes\": \"mesmerises\",\n  \"mesmerizing\": \"mesmerising\",\n  \"metabolize\": \"metabolise\",\n  \"metabolized\": \"metabolised\",\n  \"metabolizes\": \"metabolises\",\n  \"metabolizing\": \"metabolising\",\n  \"meter\": \"metre\",\n  \"meters\": \"metres\",\n  \"micrometer\": \"micrometre\",\n  \"micrometers\": \"micrometres\",\n  \"militarize\": \"militarise\",\n  \"militarized\": \"militarised\",\n  \"militarizes\": \"militarises\",\n  \"militarizing\": \"militarising\",\n  \"milligram\": \"milligramme\",\n  \"milligrams\": \"milligrammes\",\n  \"milliliter\": \"millilitre\",\n  \"milliliters\": \"millilitres\",\n  \"millimeter\": \"millimetre\",\n  \"millimeters\": \"millimetres\",\n  \"miniaturization\": \"miniaturisation\",\n  \"miniaturize\": \"miniaturise\",\n  \"miniaturized\": \"miniaturised\",\n  \"miniaturizes\": \"miniaturises\",\n  \"miniaturizing\": \"miniaturising\",\n  \"minibusses\": \"minibuses\",\n  \"minimize\": \"minimise\",\n  \"minimized\": \"minimised\",\n  \"minimizes\": \"minimises\",\n  \"minimizing\": \"minimising\",\n  \"misbehavior\": \"misbehaviour\",\n  \"misdemeanor\": \"misdemeanour\",\n  \"misdemeanors\": \"misdemeanours\",\n  \"misspelled\": \"misspelt\",\n  \"miter\": \"mitre\",\n  \"miters\": \"mitres\",\n  \"mobilization\": \"mobilisation\",\n  \"mobilize\": \"mobilise\",\n  \"mobilized\": \"mobilised\",\n  \"mobilizes\": \"mobilises\",\n  \"mobilizing\": \"mobilising\",\n  \"modeled\": \"modelled\",\n  \"modeler\": \"modeller\",\n  \"modelers\": \"modellers\",\n  \"modeling\": \"modelling\",\n  \"modernize\": \"modernise\",\n  \"modernized\": \"modernised\",\n  \"modernizes\": \"modernises\",\n  \"modernizing\": \"modernising\",\n  \"moisturize\": \"moisturise\",\n  \"moisturized\": \"moisturised\",\n  \"moisturizer\": \"moisturiser\",\n  \"moisturizers\": \"moisturisers\",\n  \"moisturizes\": \"moisturises\",\n  \"moisturizing\": \"moisturising\",\n  \"monolog\": \"monologue\",\n  \"monologs\": \"monologues\",\n  \"monopolization\": \"monopolisation\",\n  \"monopolize\": \"monopolise\",\n  \"monopolized\": \"monopolised\",\n  \"monopolizes\": \"monopolises\",\n  \"monopolizing\": \"monopolising\",\n  \"moralize\": \"moralise\",\n  \"moralized\": \"moralised\",\n  \"moralizes\": \"moralises\",\n  \"moralizing\": \"moralising\",\n  \"motorized\": \"motorised\",\n  \"mold\": \"mould\",\n  \"molded\": \"moulded\",\n  \"molder\": \"moulder\",\n  \"moldered\": \"mouldered\",\n  \"moldering\": \"mouldering\",\n  \"molders\": \"moulders\",\n  \"moldier\": \"mouldier\",\n  \"moldiest\": \"mouldiest\",\n  \"molding\": \"moulding\",\n  \"moldings\": \"mouldings\",\n  \"molds\": \"moulds\",\n  \"moldy\": \"mouldy\",\n  \"molt\": \"moult\",\n  \"molted\": \"moulted\",\n  \"molting\": \"moulting\",\n  \"molts\": \"moults\",\n  \"mustache\": \"moustache\",\n  \"mustached\": \"moustached\",\n  \"mustaches\": \"moustaches\",\n  \"mustachioed\": \"moustachioed\",\n  \"multicolored\": \"multicoloured\",\n  \"nationalization\": \"nationalisation\",\n  \"nationalizations\": \"nationalisations\",\n  \"nationalize\": \"nationalise\",\n  \"nationalized\": \"nationalised\",\n  \"nationalizes\": \"nationalises\",\n  \"nationalizing\": \"nationalising\",\n  \"naturalization\": \"naturalisation\",\n  \"naturalize\": \"naturalise\",\n  \"naturalized\": \"naturalised\",\n  \"naturalizes\": \"naturalises\",\n  \"naturalizing\": \"naturalising\",\n  \"neighbor\": \"neighbour\",\n  \"neighborhood\": \"neighbourhood\",\n  \"neighborhoods\": \"neighbourhoods\",\n  \"neighboring\": \"neighbouring\",\n  \"neighborliness\": \"neighbourliness\",\n  \"neighborly\": \"neighbourly\",\n  \"neighbors\": \"neighbours\",\n  \"neutralization\": \"neutralisation\",\n  \"neutralize\": \"neutralise\",\n  \"neutralized\": \"neutralised\",\n  \"neutralizes\": \"neutralises\",\n  \"neutralizing\": \"neutralising\",\n  \"normalization\": \"normalisation\",\n  \"normalize\": \"normalise\",\n  \"normalized\": \"normalised\",\n  \"normalizes\": \"normalises\",\n  \"normalizing\": \"normalising\",\n  \"odor\": \"odour\",\n  \"odorless\": \"odourless\",\n  \"odors\": \"odours\",\n  \"esophagus\": \"oesophagus\",\n  \"esophaguses\": \"oesophaguses\",\n  \"estrogen\": \"oestrogen\",\n  \"offense\": \"offence\",\n  \"offenses\": \"offences\",\n  \"omelet\": \"omelette\",\n  \"omelets\": \"omelettes\",\n  \"optimize\": \"optimise\",\n  \"optimized\": \"optimised\",\n  \"optimizes\": \"optimises\",\n  \"optimizing\": \"optimising\",\n  \"organization\": \"organisation\",\n  \"organizational\": \"organisational\",\n  \"organizations\": \"organisations\",\n  \"organize\": \"organise\",\n  \"organized\": \"organised\",\n  \"organizer\": \"organiser\",\n  \"organizers\": \"organisers\",\n  \"organizes\": \"organises\",\n  \"organizing\": \"organising\",\n  \"orthopedic\": \"orthopaedic\",\n  \"orthopedics\": \"orthopaedics\",\n  \"ostracize\": \"ostracise\",\n  \"ostracized\": \"ostracised\",\n  \"ostracizes\": \"ostracises\",\n  \"ostracizing\": \"ostracising\",\n  \"outmaneuver\": \"outmanoeuvre\",\n  \"outmaneuvered\": \"outmanoeuvred\",\n  \"outmaneuvers\": \"outmanoeuvres\",\n  \"outmaneuvering\": \"outmanoeuvring\",\n  \"overemphasize\": \"overemphasise\",\n  \"overemphasized\": \"overemphasised\",\n  \"overemphasizes\": \"overemphasises\",\n  \"overemphasizing\": \"overemphasising\",\n  \"oxidization\": \"oxidisation\",\n  \"oxidize\": \"oxidise\",\n  \"oxidized\": \"oxidised\",\n  \"oxidizes\": \"oxidises\",\n  \"oxidizing\": \"oxidising\",\n  \"pederast\": \"paederast\",\n  \"pederasts\": \"paederasts\",\n  \"pediatric\": \"paediatric\",\n  \"pediatrician\": \"paediatrician\",\n  \"pediatricians\": \"paediatricians\",\n  \"pediatrics\": \"paediatrics\",\n  \"paleolithic\": \"palaeolithic\",\n  \"paleontologist\": \"palaeontologist\",\n  \"paleontologists\": \"palaeontologists\",\n  \"paleontology\": \"palaeontology\",\n  \"paneled\": \"panelled\",\n  \"paneling\": \"panelling\",\n  \"panelist\": \"panellist\",\n  \"panelists\": \"panellists\",\n  \"paralyze\": \"paralyse\",\n  \"paralyzed\": \"paralysed\",\n  \"paralyzes\": \"paralyses\",\n  \"paralyzing\": \"paralysing\",\n  \"parceled\": \"parcelled\",\n  \"parceling\": \"parcelling\",\n  \"parlor\": \"parlour\",\n  \"parlors\": \"parlours\",\n  \"particularize\": \"particularise\",\n  \"particularized\": \"particularised\",\n  \"particularizes\": \"particularises\",\n  \"particularizing\": \"particularising\",\n  \"passivization\": \"passivisation\",\n  \"passivize\": \"passivise\",\n  \"passivized\": \"passivised\",\n  \"passivizes\": \"passivises\",\n  \"passivizing\": \"passivising\",\n  \"pasteurization\": \"pasteurisation\",\n  \"pasteurize\": \"pasteurise\",\n  \"pasteurized\": \"pasteurised\",\n  \"pasteurizes\": \"pasteurises\",\n  \"pasteurizing\": \"pasteurising\",\n  \"patronize\": \"patronise\",\n  \"patronized\": \"patronised\",\n  \"patronizes\": \"patronises\",\n  \"patronizing\": \"patronising\",\n  \"patronizingly\": \"patronisingly\",\n  \"pedaled\": \"pedalled\",\n  \"pedaling\": \"pedalling\",\n  \"pedestrianization\": \"pedestrianisation\",\n  \"pedestrianize\": \"pedestrianise\",\n  \"pedestrianized\": \"pedestrianised\",\n  \"pedestrianizes\": \"pedestrianises\",\n  \"pedestrianizing\": \"pedestrianising\",\n  \"penalize\": \"penalise\",\n  \"penalized\": \"penalised\",\n  \"penalizes\": \"penalises\",\n  \"penalizing\": \"penalising\",\n  \"penciled\": \"pencilled\",\n  \"penciling\": \"pencilling\",\n  \"personalize\": \"personalise\",\n  \"personalized\": \"personalised\",\n  \"personalizes\": \"personalises\",\n  \"personalizing\": \"personalising\",\n  \"pharmacopeia\": \"pharmacopoeia\",\n  \"pharmacopeias\": \"pharmacopoeias\",\n  \"philosophize\": \"philosophise\",\n  \"philosophized\": \"philosophised\",\n  \"philosophizes\": \"philosophises\",\n  \"philosophizing\": \"philosophising\",\n  \"filter\": \"philtre\",\n  \"filters\": \"philtres\",\n  \"phony\": \"phoney\",\n  \"plagiarize\": \"plagiarise\",\n  \"plagiarized\": \"plagiarised\",\n  \"plagiarizes\": \"plagiarises\",\n  \"plagiarizing\": \"plagiarising\",\n  \"plow\": \"plough\",\n  \"plowed\": \"ploughed\",\n  \"plowing\": \"ploughing\",\n  \"plowman\": \"ploughman\",\n  \"plowmen\": \"ploughmen\",\n  \"plows\": \"ploughs\",\n  \"plowshare\": \"ploughshare\",\n  \"plowshares\": \"ploughshares\",\n  \"polarization\": \"polarisation\",\n  \"polarize\": \"polarise\",\n  \"polarized\": \"polarised\",\n  \"polarizes\": \"polarises\",\n  \"polarizing\": \"polarising\",\n  \"politicization\": \"politicisation\",\n  \"politicize\": \"politicise\",\n  \"politicized\": \"politicised\",\n  \"politicizes\": \"politicises\",\n  \"politicizing\": \"politicising\",\n  \"popularization\": \"popularisation\",\n  \"popularize\": \"popularise\",\n  \"popularized\": \"popularised\",\n  \"popularizes\": \"popularises\",\n  \"popularizing\": \"popularising\",\n  \"practice\": \"practise\",\n  \"practiced\": \"practised\",\n  \"practices\": \"practises\",\n  \"practicing\": \"practising\",\n  \"presidium\": \"praesidium\",\n  \"presidiums\": \"praesidiums\",\n  \"pressurization\": \"pressurisation\",\n  \"pressurize\": \"pressurise\",\n  \"pressurized\": \"pressurised\",\n  \"pressurizes\": \"pressurises\",\n  \"pressurizing\": \"pressurising\",\n  \"pretense\": \"pretence\",\n  \"pretenses\": \"pretences\",\n  \"primeval\": \"primaeval\",\n  \"prioritization\": \"prioritisation\",\n  \"prioritize\": \"prioritise\",\n  \"prioritized\": \"prioritised\",\n  \"prioritizes\": \"prioritises\",\n  \"prioritizing\": \"prioritising\",\n  \"privatization\": \"privatisation\",\n  \"privatizations\": \"privatisations\",\n  \"privatize\": \"privatise\",\n  \"privatized\": \"privatised\",\n  \"privatizes\": \"privatises\",\n  \"privatizing\": \"privatising\",\n  \"professionalization\": \"professionalisation\",\n  \"professionalize\": \"professionalise\",\n  \"professionalized\": \"professionalised\",\n  \"professionalizes\": \"professionalises\",\n  \"professionalizing\": \"professionalising\",\n  \"program\": \"programme\",\n  \"programs\": \"programmes\",\n  \"prolog\": \"prologue\",\n  \"prologs\": \"prologues\",\n  \"propagandize\": \"propagandise\",\n  \"propagandized\": \"propagandised\",\n  \"propagandizes\": \"propagandises\",\n  \"propagandizing\": \"propagandising\",\n  \"proselytize\": \"proselytise\",\n  \"proselytized\": \"proselytised\",\n  \"proselytizer\": \"proselytiser\",\n  \"proselytizers\": \"proselytisers\",\n  \"proselytizes\": \"proselytises\",\n  \"proselytizing\": \"proselytising\",\n  \"psychoanalyze\": \"psychoanalyse\",\n  \"psychoanalyzed\": \"psychoanalysed\",\n  \"psychoanalyzes\": \"psychoanalyses\",\n  \"psychoanalyzing\": \"psychoanalysing\",\n  \"publicize\": \"publicise\",\n  \"publicized\": \"publicised\",\n  \"publicizes\": \"publicises\",\n  \"publicizing\": \"publicising\",\n  \"pulverization\": \"pulverisation\",\n  \"pulverize\": \"pulverise\",\n  \"pulverized\": \"pulverised\",\n  \"pulverizes\": \"pulverises\",\n  \"pulverizing\": \"pulverising\",\n  \"pummel\": \"pummelled\",\n  \"pummeled\": \"pummelling\",\n  \"pajama\": \"pyjama\",\n  \"pajamas\": \"pyjamas\",\n  \"pizzazz\": \"pzazz\",\n  \"quarreled\": \"quarrelled\",\n  \"quarreling\": \"quarrelling\",\n  \"radicalize\": \"radicalise\",\n  \"radicalized\": \"radicalised\",\n  \"radicalizes\": \"radicalises\",\n  \"radicalizing\": \"radicalising\",\n  \"rancor\": \"rancour\",\n  \"randomize\": \"randomise\",\n  \"randomized\": \"randomised\",\n  \"randomizes\": \"randomises\",\n  \"randomizing\": \"randomising\",\n  \"rationalization\": \"rationalisation\",\n  \"rationalizations\": \"rationalisations\",\n  \"rationalize\": \"rationalise\",\n  \"rationalized\": \"rationalised\",\n  \"rationalizes\": \"rationalises\",\n  \"rationalizing\": \"rationalising\",\n  \"raveled\": \"ravelled\",\n  \"raveling\": \"ravelling\",\n  \"realizable\": \"realisable\",\n  \"realization\": \"realisation\",\n  \"realizations\": \"realisations\",\n  \"realize\": \"realise\",\n  \"realized\": \"realised\",\n  \"realizes\": \"realises\",\n  \"realizing\": \"realising\",\n  \"recognizable\": \"recognisable\",\n  \"recognizably\": \"recognisably\",\n  \"recognizance\": \"recognisance\",\n  \"recognize\": \"recognise\",\n  \"recognized\": \"recognised\",\n  \"recognizes\": \"recognises\",\n  \"recognizing\": \"recognising\",\n  \"reconnoiter\": \"reconnoitre\",\n  \"reconnoitered\": \"reconnoitred\",\n  \"reconnoiters\": \"reconnoitres\",\n  \"reconnoitering\": \"reconnoitring\",\n  \"refueled\": \"refuelled\",\n  \"refueling\": \"refuelling\",\n  \"regularization\": \"regularisation\",\n  \"regularize\": \"regularise\",\n  \"regularized\": \"regularised\",\n  \"regularizes\": \"regularises\",\n  \"regularizing\": \"regularising\",\n  \"remodeled\": \"remodelled\",\n  \"remodeling\": \"remodelling\",\n  \"remold\": \"remould\",\n  \"remolded\": \"remoulded\",\n  \"remolding\": \"remoulding\",\n  \"remolds\": \"remoulds\",\n  \"reorganization\": \"reorganisation\",\n  \"reorganizations\": \"reorganisations\",\n  \"reorganize\": \"reorganise\",\n  \"reorganized\": \"reorganised\",\n  \"reorganizes\": \"reorganises\",\n  \"reorganizing\": \"reorganising\",\n  \"reveled\": \"revelled\",\n  \"reveler\": \"reveller\",\n  \"revelers\": \"revellers\",\n  \"reveling\": \"revelling\",\n  \"revitalize\": \"revitalise\",\n  \"revitalized\": \"revitalised\",\n  \"revitalizes\": \"revitalises\",\n  \"revitalizing\": \"revitalising\",\n  \"revolutionize\": \"revolutionise\",\n  \"revolutionized\": \"revolutionised\",\n  \"revolutionizes\": \"revolutionises\",\n  \"revolutionizing\": \"revolutionising\",\n  \"rhapsodize\": \"rhapsodise\",\n  \"rhapsodized\": \"rhapsodised\",\n  \"rhapsodizes\": \"rhapsodises\",\n  \"rhapsodizing\": \"rhapsodising\",\n  \"rigor\": \"rigour\",\n  \"rigors\": \"rigours\",\n  \"ritualized\": \"ritualised\",\n  \"rivaled\": \"rivalled\",\n  \"rivaling\": \"rivalling\",\n  \"romanticize\": \"romanticise\",\n  \"romanticized\": \"romanticised\",\n  \"romanticizes\": \"romanticises\",\n  \"romanticizing\": \"romanticising\",\n  \"rumor\": \"rumour\",\n  \"rumored\": \"rumoured\",\n  \"rumors\": \"rumours\",\n  \"saber\": \"sabre\",\n  \"sabers\": \"sabres\",\n  \"saltpeter\": \"saltpetre\",\n  \"sanitize\": \"sanitise\",\n  \"sanitized\": \"sanitised\",\n  \"sanitizes\": \"sanitises\",\n  \"sanitizing\": \"sanitising\",\n  \"satirize\": \"satirise\",\n  \"satirized\": \"satirised\",\n  \"satirizes\": \"satirises\",\n  \"satirizing\": \"satirising\",\n  \"savior\": \"saviour\",\n  \"saviors\": \"saviours\",\n  \"savor\": \"savour\",\n  \"savored\": \"savoured\",\n  \"savories\": \"savouries\",\n  \"savoring\": \"savouring\",\n  \"savors\": \"savours\",\n  \"savory\": \"savoury\",\n  \"scandalize\": \"scandalise\",\n  \"scandalized\": \"scandalised\",\n  \"scandalizes\": \"scandalises\",\n  \"scandalizing\": \"scandalising\",\n  \"skeptic\": \"sceptic\",\n  \"skeptical\": \"sceptical\",\n  \"skeptically\": \"sceptically\",\n  \"skepticism\": \"scepticism\",\n  \"skeptics\": \"sceptics\",\n  \"scepter\": \"sceptre\",\n  \"scepters\": \"sceptres\",\n  \"scrutinize\": \"scrutinise\",\n  \"scrutinized\": \"scrutinised\",\n  \"scrutinizes\": \"scrutinises\",\n  \"scrutinizing\": \"scrutinising\",\n  \"secularization\": \"secularisation\",\n  \"secularize\": \"secularise\",\n  \"secularized\": \"secularised\",\n  \"secularizes\": \"secularises\",\n  \"secularizing\": \"secularising\",\n  \"sensationalize\": \"sensationalise\",\n  \"sensationalized\": \"sensationalised\",\n  \"sensationalizes\": \"sensationalises\",\n  \"sensationalizing\": \"sensationalising\",\n  \"sensitize\": \"sensitise\",\n  \"sensitized\": \"sensitised\",\n  \"sensitizes\": \"sensitises\",\n  \"sensitizing\": \"sensitising\",\n  \"sentimentalize\": \"sentimentalise\",\n  \"sentimentalized\": \"sentimentalised\",\n  \"sentimentalizes\": \"sentimentalises\",\n  \"sentimentalizing\": \"sentimentalising\",\n  \"sepulcher\": \"sepulchre\",\n  \"sepulchers\": \"sepulchres\",\n  \"serialization\": \"serialisation\",\n  \"serializations\": \"serialisations\",\n  \"serialize\": \"serialise\",\n  \"serialized\": \"serialised\",\n  \"serializes\": \"serialises\",\n  \"serializing\": \"serialising\",\n  \"sermonize\": \"sermonise\",\n  \"sermonized\": \"sermonised\",\n  \"sermonizes\": \"sermonises\",\n  \"sermonizing\": \"sermonising\",\n  \"sheik\": \"sheikh\",\n  \"shoveled\": \"shovelled\",\n  \"shoveling\": \"shovelling\",\n  \"shriveled\": \"shrivelled\",\n  \"shriveling\": \"shrivelling\",\n  \"signalize\": \"signalise\",\n  \"signalized\": \"signalised\",\n  \"signalizes\": \"signalises\",\n  \"signalizing\": \"signalising\",\n  \"signaled\": \"signalled\",\n  \"signaling\": \"signalling\",\n  \"smolder\": \"smoulder\",\n  \"smoldered\": \"smouldered\",\n  \"smoldering\": \"smouldering\",\n  \"smolders\": \"smoulders\",\n  \"sniveled\": \"snivelled\",\n  \"sniveling\": \"snivelling\",\n  \"snorkeled\": \"snorkelled\",\n  \"snorkeling\": \"snorkelling\",\n  \"snowplow\": \"snowploughs\",\n  \"socialization\": \"socialisation\",\n  \"socialize\": \"socialise\",\n  \"socialized\": \"socialised\",\n  \"socializes\": \"socialises\",\n  \"socializing\": \"socialising\",\n  \"solemnize\": \"solemnise\",\n  \"solemnized\": \"solemnised\",\n  \"solemnizes\": \"solemnises\",\n  \"solemnizing\": \"solemnising\",\n  \"somber\": \"sombre\",\n  \"specialization\": \"specialisation\",\n  \"specializations\": \"specialisations\",\n  \"specialize\": \"specialise\",\n  \"specialized\": \"specialised\",\n  \"specializes\": \"specialises\",\n  \"specializing\": \"specialising\",\n  \"specter\": \"spectre\",\n  \"specters\": \"spectres\",\n  \"spiraled\": \"spiralled\",\n  \"spiraling\": \"spiralling\",\n  \"splendor\": \"splendour\",\n  \"splendors\": \"splendours\",\n  \"squirreled\": \"squirrelled\",\n  \"squirreling\": \"squirrelling\",\n  \"stabilization\": \"stabilisation\",\n  \"stabilize\": \"stabilise\",\n  \"stabilized\": \"stabilised\",\n  \"stabilizer\": \"stabiliser\",\n  \"stabilizers\": \"stabilisers\",\n  \"stabilizes\": \"stabilises\",\n  \"stabilizing\": \"stabilising\",\n  \"standardization\": \"standardisation\",\n  \"standardize\": \"standardise\",\n  \"standardized\": \"standardised\",\n  \"standardizes\": \"standardises\",\n  \"standardizing\": \"standardising\",\n  \"stenciled\": \"stencilled\",\n  \"stenciling\": \"stencilling\",\n  \"sterilization\": \"sterilisation\",\n  \"sterilizations\": \"sterilisations\",\n  \"sterilize\": \"sterilise\",\n  \"sterilized\": \"sterilised\",\n  \"sterilizer\": \"steriliser\",\n  \"sterilizers\": \"sterilisers\",\n  \"sterilizes\": \"sterilises\",\n  \"sterilizing\": \"sterilising\",\n  \"stigmatization\": \"stigmatisation\",\n  \"stigmatize\": \"stigmatise\",\n  \"stigmatized\": \"stigmatised\",\n  \"stigmatizes\": \"stigmatises\",\n  \"stigmatizing\": \"stigmatising\",\n  \"story\": \"storey\",\n  \"stories\": \"storeys\",\n  \"subsidization\": \"subsidisation\",\n  \"subsidize\": \"subsidise\",\n  \"subsidized\": \"subsidised\",\n  \"subsidizer\": \"subsidiser\",\n  \"subsidizers\": \"subsidisers\",\n  \"subsidizes\": \"subsidises\",\n  \"subsidizing\": \"subsidising\",\n  \"succor\": \"succour\",\n  \"succored\": \"succoured\",\n  \"succoring\": \"succouring\",\n  \"succors\": \"succours\",\n  \"sulfate\": \"sulphate\",\n  \"sulfates\": \"sulphates\",\n  \"sulfide\": \"sulphide\",\n  \"sulfides\": \"sulphides\",\n  \"sulfur\": \"sulphur\",\n  \"sulfurous\": \"sulphurous\",\n  \"summarize\": \"summarise\",\n  \"summarized\": \"summarised\",\n  \"summarizes\": \"summarises\",\n  \"summarizing\": \"summarising\",\n  \"swiveled\": \"swivelled\",\n  \"swiveling\": \"swivelling\",\n  \"symbolize\": \"symbolise\",\n  \"symbolized\": \"symbolised\",\n  \"symbolizes\": \"symbolises\",\n  \"symbolizing\": \"symbolising\",\n  \"sympathize\": \"sympathise\",\n  \"sympathized\": \"sympathised\",\n  \"sympathizer\": \"sympathiser\",\n  \"sympathizers\": \"sympathisers\",\n  \"sympathizes\": \"sympathises\",\n  \"sympathizing\": \"sympathising\",\n  \"synchronization\": \"synchronisation\",\n  \"synchronize\": \"synchronise\",\n  \"synchronized\": \"synchronised\",\n  \"synchronizes\": \"synchronises\",\n  \"synchronizing\": \"synchronising\",\n  \"synthesize\": \"synthesise\",\n  \"synthesized\": \"synthesised\",\n  \"synthesizer\": \"synthesiser\",\n  \"synthesizers\": \"synthesisers\",\n  \"synthesizes\": \"synthesises\",\n  \"synthesizing\": \"synthesising\",\n  \"siphon\": \"syphon\",\n  \"siphoned\": \"syphoned\",\n  \"siphoning\": \"syphoning\",\n  \"siphons\": \"syphons\",\n  \"systematization\": \"systematisation\",\n  \"systematize\": \"systematise\",\n  \"systematized\": \"systematised\",\n  \"systematizes\": \"systematises\",\n  \"systematizing\": \"systematising\",\n  \"tantalize\": \"tantalise\",\n  \"tantalized\": \"tantalised\",\n  \"tantalizes\": \"tantalises\",\n  \"tantalizing\": \"tantalising\",\n  \"tantalizingly\": \"tantalisingly\",\n  \"tasseled\": \"tasselled\",\n  \"technicolor\": \"technicolour\",\n  \"temporize\": \"temporise\",\n  \"temporized\": \"temporised\",\n  \"temporizes\": \"temporises\",\n  \"temporizing\": \"temporising\",\n  \"tenderize\": \"tenderise\",\n  \"tenderized\": \"tenderised\",\n  \"tenderizes\": \"tenderises\",\n  \"tenderizing\": \"tenderising\",\n  \"terrorize\": \"terrorise\",\n  \"terrorized\": \"terrorised\",\n  \"terrorizes\": \"terrorises\",\n  \"terrorizing\": \"terrorising\",\n  \"theater\": \"theatre\",\n  \"theatergoer\": \"theatregoer\",\n  \"theatergoers\": \"theatregoers\",\n  \"theaters\": \"theatres\",\n  \"theorize\": \"theorise\",\n  \"theorized\": \"theorised\",\n  \"theorizes\": \"theorises\",\n  \"theorizing\": \"theorising\",\n  \"ton\": \"tonne\",\n  \"tons\": \"tonnes\",\n  \"toweled\": \"towelled\",\n  \"toweling\": \"towelling\",\n  \"toxemia\": \"toxaemia\",\n  \"tranquilize\": \"tranquillize\",\n  \"tranquilized\": \"tranquillized\",\n  \"tranquilizer\": \"tranquillizer\",\n  \"tranquilizers\": \"tranquillizers\",\n  \"tranquilizes\": \"tranquillizes\",\n  \"tranquilizing\": \"tranquillizing\",\n  \"tranquility\": \"tranquilly\",\n  \"transistorized\": \"transistorised\",\n  \"traumatize\": \"traumatise\",\n  \"traumatized\": \"traumatised\",\n  \"traumatizes\": \"traumatises\",\n  \"traumatizing\": \"traumatising\",\n  \"traveled\": \"travelled\",\n  \"traveler\": \"traveller\",\n  \"travelers\": \"travellers\",\n  \"traveling\": \"travelling\",\n  \"travelog\": \"travelogue\",\n  \"travelogs\": \"travelogues\",\n  \"trialed\": \"trialled\",\n  \"trialing\": \"trialling\",\n  \"tricolor\": \"tricolour\",\n  \"tricolors\": \"tricolours\",\n  \"trivialize\": \"trivialise\",\n  \"trivialized\": \"trivialised\",\n  \"trivializes\": \"trivialises\",\n  \"trivializing\": \"trivialising\",\n  \"tumor\": \"tumour\",\n  \"tumors\": \"tumours\",\n  \"tunneled\": \"tunnelled\",\n  \"tunneling\": \"tunnelling\",\n  \"tyrannize\": \"tyrannise\",\n  \"tyrannized\": \"tyrannised\",\n  \"tyrannizes\": \"tyrannises\",\n  \"tyrannizing\": \"tyrannising\",\n  \"tire\": \"tyre\",\n  \"tires\": \"tyres\",\n  \"unauthorized\": \"unauthorised\",\n  \"uncivilized\": \"uncivilised\",\n  \"underutilized\": \"underutilised\",\n  \"unequaled\": \"unequalled\",\n  \"unfavorable\": \"unfavourable\",\n  \"unfavorably\": \"unfavourably\",\n  \"unionization\": \"unionisation\",\n  \"unionize\": \"unionise\",\n  \"unionized\": \"unionised\",\n  \"unionizes\": \"unionises\",\n  \"unionizing\": \"unionising\",\n  \"unorganized\": \"unorganised\",\n  \"unraveled\": \"unravelled\",\n  \"unraveling\": \"unravelling\",\n  \"unrecognizable\": \"unrecognisable\",\n  \"unrecognized\": \"unrecognised\",\n  \"unrivaled\": \"unrivalled\",\n  \"unsavory\": \"unsavoury\",\n  \"untrammeled\": \"untrammelled\",\n  \"urbanization\": \"urbanisation\",\n  \"urbanize\": \"urbanise\",\n  \"urbanized\": \"urbanised\",\n  \"urbanizes\": \"urbanises\",\n  \"urbanizing\": \"urbanising\",\n  \"utilizable\": \"utilisable\",\n  \"utilization\": \"utilisation\",\n  \"utilize\": \"utilise\",\n  \"utilized\": \"utilised\",\n  \"utilizes\": \"utilises\",\n  \"utilizing\": \"utilising\",\n  \"valor\": \"valour\",\n  \"vandalize\": \"vandalise\",\n  \"vandalized\": \"vandalised\",\n  \"vandalizes\": \"vandalises\",\n  \"vandalizing\": \"vandalising\",\n  \"vaporization\": \"vaporisation\",\n  \"vaporize\": \"vaporise\",\n  \"vaporized\": \"vaporised\",\n  \"vaporizes\": \"vaporises\",\n  \"vaporizing\": \"vaporising\",\n  \"vapor\": \"vapour\",\n  \"vapors\": \"vapours\",\n  \"verbalize\": \"verbalise\",\n  \"verbalized\": \"verbalised\",\n  \"verbalizes\": \"verbalises\",\n  \"verbalizing\": \"verbalising\",\n  \"victimization\": \"victimisation\",\n  \"victimize\": \"victimise\",\n  \"victimized\": \"victimised\",\n  \"victimizes\": \"victimises\",\n  \"victimizing\": \"victimising\",\n  \"videodisk\": \"videodisc\",\n  \"videodisks\": \"videodiscs\",\n  \"vigor\": \"vigour\",\n  \"visualization\": \"visualisation\",\n  \"visualizations\": \"visualisations\",\n  \"visualize\": \"visualise\",\n  \"visualized\": \"visualised\",\n  \"visualizes\": \"visualises\",\n  \"visualizing\": \"visualising\",\n  \"vocalization\": \"vocalisation\",\n  \"vocalizations\": \"vocalisations\",\n  \"vocalize\": \"vocalise\",\n  \"vocalized\": \"vocalised\",\n  \"vocalizes\": \"vocalises\",\n  \"vocalizing\": \"vocalising\",\n  \"vulcanized\": \"vulcanised\",\n  \"vulgarization\": \"vulgarisation\",\n  \"vulgarize\": \"vulgarise\",\n  \"vulgarized\": \"vulgarised\",\n  \"vulgarizes\": \"vulgarises\",\n  \"vulgarizing\": \"vulgarising\",\n  \"wagon\": \"waggon\",\n  \"wagons\": \"waggons\",\n  \"watercolor\": \"watercolour\",\n  \"watercolors\": \"watercolours\",\n  \"weaseled\": \"weaselled\",\n  \"weaseling\": \"weaselling\",\n  \"westernization\": \"westernisation\",\n  \"westernize\": \"westernise\",\n  \"westernized\": \"westernised\",\n  \"westernizes\": \"westernises\",\n  \"westernizing\": \"westernising\",\n  \"womanize\": \"womanise\",\n  \"womanized\": \"womanised\",\n  \"womanizer\": \"womaniser\",\n  \"womanizers\": \"womanisers\",\n  \"womanizes\": \"womanises\",\n  \"womanizing\": \"womanising\",\n  \"woolen\": \"woollen\",\n  \"woolens\": \"woollens\",\n  \"woolies\": \"woollies\",\n  \"wooly\": \"woolly\",\n  \"worshiped\": \"worshipped\",\n  \"worshiping\": \"worshipping\",\n  \"worshiper\": \"worshipper\",\n  \"yodeled\": \"yodelled\",\n  \"yodeling\": \"yodelling\",\n  \"yogurt\": \"yoghurt\",\n  \"yogurts\": \"yoghurts\"\n}\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1705335515272
  },
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/components/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/components/american-to-british-titles.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/components/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/components/american-to-british-titles.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/components/american-to-british-titles.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/components/american-to-british-titles.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/components/",
        "sourceFileName": "american-to-british-titles.js"
      }
    },
    "ast": null,
    "code": "module.exports = {\n  'mr.': 'mr',\n  'mrs.': 'mrs',\n  'ms.': 'ms',\n  'mx.': 'mx',\n  'dr.': 'dr',\n  'prof.': 'prof'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFtZXJpY2FuLXRvLWJyaXRpc2gtdGl0bGVzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZixTQUFPLElBRFE7QUFFZixVQUFRLEtBRk87QUFHZixTQUFPLElBSFE7QUFJZixTQUFPLElBSlE7QUFLZixTQUFPLElBTFE7QUFNZixXQUFTO0FBTk0sQ0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL25ld19uYW1lL0Rlc2t0b3AvYnJpdGlzaCB0cmFuc2xhdG9yL2NvbXBvbmVudHMvIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gICdtci4nOiAnbXInLFxuICAnbXJzLic6ICdtcnMnLFxuICAnbXMuJzogJ21zJyxcbiAgJ214Lic6ICdteCcsXG4gICdkci4nOiAnZHInLFxuICAncHJvZi4nOiAncHJvZidcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "american-to-british-titles.js"
      ],
      "names": [
        "module",
        "exports"
      ],
      "mappings": "AAAAA,MAAM,CAACC,OAAP,GAAiB;AACf,SAAO,IADQ;AAEf,UAAQ,KAFO;AAGf,SAAO,IAHQ;AAIf,SAAO,IAJQ;AAKf,SAAO,IALQ;AAMf,WAAS;AANM,CAAjB",
      "sourceRoot": "/Users/new_name/Desktop/british translator/components/",
      "sourcesContent": [
        "module.exports = {\n  'mr.': 'mr',\n  'mrs.': 'mrs',\n  'ms.': 'ms',\n  'mx.': 'mx',\n  'dr.': 'dr',\n  'prof.': 'prof'\n}\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1705335515272
  },
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/components/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/components/british-only.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/components/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/components/british-only.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/components/british-only.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/components/british-only.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/components/",
        "sourceFileName": "british-only.js"
      }
    },
    "ast": null,
    "code": "module.exports = {\n  \"abseil\": \"rappel\",\n  \"accountancy\": \"accounting\",\n  \"advert\": \"advertisement\",\n  \"agony column\": \"advice column\",\n  \"answerphone\": \"answering machine\",\n  \"anti-clockwise\": \"counterclockwise\",\n  \"approved school\": \"juvie\",\n  \"artic\": \"semi\",\n  \"athletics meeting\": \"track meet\",\n  \"aubergine\": \"eggplant\",\n  \"autocue\": \"teleprompter\",\n  \"bank holiday\": \"public holiday\",\n  \"barmy\": \"balmy\",\n  \"biccie\": \"cookie\",\n  \"bicky\": \"cookie\",\n  \"bikky\": \"cookie\",\n  \"biro\": \"ballpoint pen\",\n  \"bits and bobs\": \"odds and ends\",\n  \"black pudding\": \"blood sausage\",\n  \"bloke\": \"guy\",\n  \"blower\": \"telephone\",\n  \"boffin\": \"an expert\",\n  \"bog roll\": \"roll of toilet paper\",\n  \"bog-standard\": \"garden-variety\",\n  \"boiled sweet\": \"hard candy\",\n  \"bone-idle\": \"lazy\",\n  \"brekkie\": \"breakfast\",\n  \"brekky\": \"breakfast\",\n  \"breve\": \"double whole note\",\n  \"brolly\": \"umbrella\",\n  \"building society\": \"savings and loan association\",\n  \"bum bag\": \"fanny pack\",\n  \"bunce\": \"a windfall\",\n  \"bureau de change\": \"currency exchange\",\n  \"burgle\": \"burglarize\",\n  \"by-election\": \"special election\",\n  \"cafetière\": \"French press\",\n  \"cafetiere\": \"French press\",\n  \"caff\": \"café\",\n  \"cagoule\": \"windbreaker\",\n  \"candidature\": \"candidacy\",\n  \"candy floss\": \"cotton candy\",\n  \"car boot sale\": \"swap meet\",\n  \"car boot\": \"trunk\",\n  \"car hire\": \"car rental\",\n  \"car park\": \"parking lot\",\n  \"carer\": \"caregiver\",\n  \"carriageway\": \"lane\",\n  \"cash machine\": \"ATM\",\n  \"cashpoint\": \"ATM\",\n  \"central reservation\": \"median strip\",\n  \"chancer\": \"opportunist\",\n  \"chat up\": \"flirt\",\n  \"chatted up\": \"flirted\",\n  \"cheeky\": \"impertinent\",\n  \"child-minder\": \"babysitter\",\n  \"chinwag\": \"chat\",\n  \"chippy\": \"fish-and-chip shop\",\n  \"chip shop\": \"fish-and-chip shop\",\n  \"chuffed\": \"pleased\",\n  \"chunder\": \"vomit\",\n  \"clapped out\": \"clapped out\",\n  \"cleg\": \"horse fly\",\n  \"clingfilm\": \"plastic wrap\",\n  \"cling-film\": \"plastic wrap\",\n  \"cling film\": \"plastic wrap\",\n  \"cobblers\": \"shoe repairers\",\n  \"conservatoire\": \"conservatory\",\n  \"cotton bud\": \"cotton swab\",\n  \"cotton wool\": \"cotton ball\",\n  \"counterfoil\": \"stub\",\n  \"counterpane\": \"bedspread\",\n  \"courgette\": \"zucchini\",\n  \"crisps\": \"potato chips\",\n  \"cuppa\": \"cup of tea\",\n  \"current account\": \"checking account\",\n  \"daft\": \"silly\",\n  \"dogsbody\": \"grunt\",\n  \"dosh\": \"dough\",\n  \"double first\": \"undergraduate degree\",\n  \"draper\": \"dry goods\",\n  \"draughts\": \"checkers\",\n  \"drawing pin\": \"thumbtack\",\n  \"drink-driving\": \"drunk driving\",\n  \"driving licence\": \"driver's license\",\n  \"dual carriageway\": \"divided highway\",\n  \"dustbin\": \"trash can\",\n  \"dustman\": \"garbage man\",\n  \"dustbin man\": \"garbage man\",\n  \"dustcart\": \"garbage truck\",\n  \"earthed\": \"grounded\",\n  \"elastoplast\": \"bandage\",\n  \"electric fire\": \"space heater\",\n  \"engaged tone\": \"busy signal\",\n  \"estate agent\": \"real estate agent\",\n  \"estate car\": \"station wagon\",\n  \"extension lead\": \"extension cord\",\n  \"fancy a\": \"would you like a\",\n  \"fairy cake\": \"cupcake\",\n  \"fairy lights\": \"Christmas lights\",\n  \"fire brigade\": \"fire department\",\n  \"flight lieutenant\": \"captain\",\n  \"flypast\": \"flyby\",\n  \"footie\": \"soccer\",\n  \"freephone\": \"toll-free number\",\n  \"funfair\": \"carnival\",\n  \"gaol\": \"jail\",\n  \"gherkin\": \"pickle\",\n  \"group captain\": \"colonel\",\n  \"guard's van\": \"caboose\",\n  \"guv\": \"governor\",\n  \"heath robinson device\": \"rube goldberg device\",\n  \"high street\": \"main street\",\n  \"hire purchase\": \"installment plan\",\n  \"hold-all\": \"duffel bag\",\n  \"holidaymaker\": \"vacationer\",\n  \"hols\": \"holidays\",\n  \"hot up\": \"heating up\",\n  \"ice lolly\": \"popsicle\",\n  \"identity parade\": \"police lineup\",\n  \"inverted commas\": \"quotation marks\",\n  \"invigilator\": \"proctor\",\n  \"ironmongery\": \"hardware store\",\n  \"jacket potato\": \"baked potato\",\n  \"jemmy\": \"jimmy\",\n  \"jerrybuilt\": \"jerry-rigged\",\n  \"jerry-built\": \"jerry-rigged\",\n  \"jumble sale\": \"rummage sale\",\n  \"jump leads\": \"jumper cables\",\n  \"kirby grip\": \"bobby pin\",\n  \"kitchen roll\": \"paper towels\",\n  \"knacker's yard\": \"junkyard\",\n  \"ladybird\": \"ladybug\",\n  \"launderette\": \"laundromat\",\n  \"lav\": \"toilet\",\n  \"learnt\": \"learned\",\n  \"loo\": \"bathroom\",\n  \"lorry\": \"truck\",\n  \"loudhailer\": \"megaphone\",\n  \"maths\": \"math\",\n  \"mole grips\": \"vise-grips\",\n  \"motorway\": \"freeway\",\n  \"muppet\": \"an incompetent or foolish person\",\n  \"nark\": \"narc\",\n  \"nappy\": \"daiper\",\n  \"nosy parker\": \"nosy\",\n  \"nosey parker\": \"nosy\",\n  \"number plate\": \"license plate\",\n  \"oap\": \"senior citizen\",\n  \"off-licence\": \"liquor store\",\n  \"offie\": \"liquor store\",\n  \"off-the-peg\": \"off-the-rack\",\n  \"oughtn't\": \"shouldn't\",\n  \"overleaf\": \"reverse\",\n  \"owt\": \"anything\",\n  \"pants\": \"underwear\",\n  \"panda car\": \"police car\",\n  \"paper round\": \"paper route\",\n  \"paracetamol\": \"Tylenol\",\n  \"pernickety\": \"persnickety\",\n  \"petrol\": \"gasoline\",\n  \"petrolhead\": \"gearhead\",\n  \"phone box\": \"payphone\",\n  \"pillar box\": \"mailbox\",\n  \"pillar-box red\": \"fire engine red\",\n  \"plasterboard\": \"drywall\",\n  \"plectrum\": \"guitar pick\",\n  \"postal order\": \"money order\",\n  \"poste restante\": \"general delivery\",\n  \"postie\": \"postman\",\n  \"pound shop\": \"dollar store\",\n  \"pram\": \"stroller\",\n  \"perambulator\": \"stroller\",\n  \"prang\": \"fender bender\",\n  \"prat\": \"idiot\",\n  \"press-up\": \"push-up\",\n  \"press-ups\": \"push-ups\",\n  \"pritt-stick\": \"glue stick\",\n  \"provisional licence\": \"learner's permit\",\n  \"provisional driving licence\": \"learner's permit\",\n  \"pub\": \"bar\",\n  \"publican\": \"landlord\",\n  \"punch-up\": \"a fistfight\",\n  \"pushchair\": \"stroller\",\n  \"quieten down\": \"quiet down\",\n  \"rashers\": \"bacon\",\n  \"recce\": \"recon\",\n  \"reel of cotton\": \"spool of thread\",\n  \"sarky\": \"snarky\",\n  \"sarnie\": \"sandwich\",\n  \"sarny\": \"sandwich\",\n  \"sannie\": \"sandwich\",\n  \"sat nav\": \"GPS\",\n  \"self-raising flour\": \"self-rising flour\",\n  \"selling-out shop\": \"liquor store\",\n  \"sellotape\": \"Scotch tape\",\n  \"shan't\": \"won't\",\n  \"shopping trolley\": \"shopping cart\",\n  \"skint\": \"broke\",\n  \"skirting board\": \"baseboard\",\n  \"slaphead\": \"bald man\",\n  \"sleeping partner\": \"silent partner\",\n  \"sleeping policeman\": \"speed bump\",\n  \"slippy\": \"slippery\",\n  \"slowcoach\": \"slowpoke\",\n  \"smart dress\": \"formal attire\",\n  \"snog\": \"kiss\",\n  \"spawny\": \"lucky\",\n  \"spiffing\": \"spiffy\",\n  \"spot of tea\": \"cup of tea\",\n  \"squaddie\": \"grunt\",\n  \"squidgy\": \"squishy\",\n  \"stockist\": \"dealer\",\n  \"sun cream\": \"sunscreen\",\n  \"suspender belt\": \"garter belt\",\n  \"swimming costume\": \"swimsuit\",\n  \"ta\": \"thank you\",\n  \"takeaway\": \"takeout\",\n  \"tannoy\": \"public address system\",\n  \"tea towel\": \"dish towel\",\n  \"telephone kiosk\": \"phone booth\",\n  \"telly\": \"television\",\n  \"ticket tout\": \"scalper\",\n  \"tipp-ex\": \"Wite-Out\",\n  \"tipping down\": \"raining hard\",\n  \"trainers\": \"sneakers\",\n  \"transport cafe\": \"truckstop\",\n  \"trousers\": \"pants\",\n  \"truncheon\": \"nightstick\",\n  \"turf accountant\": \"bookie\",\n  \"turn-indicator\": \"turn signal\",\n  \"turn-ups\": \"cuffs\",\n  \"twee\": \"cutesy\",\n  \"uni\": \"college\",\n  \"upmarket\": \"upscale\",\n  \"veg\": \"vegetables\",\n  \"wage packet\": \"paycheck\",\n  \"washing-up liquid\": \"dish soap\",\n  \"wc\": \"bathroom\",\n  \"windscreen\": \"windshield\",\n  \"wing mirrors\": \"side mirrors\",\n  \"y-fronts\": \"briefs\",\n  \"zebra crossing\": \"crosswalk\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "british-only.js"
      ],
      "names": [
        "module",
        "exports"
      ],
      "mappings": "AAAAA,MAAM,CAACC,OAAP,GAAiB;AACf,YAAU,QADK;AAEf,iBAAe,YAFA;AAGf,YAAU,eAHK;AAIf,kBAAgB,eAJD;AAKf,iBAAe,mBALA;AAMf,oBAAkB,kBANH;AAOf,qBAAmB,OAPJ;AAQf,WAAS,MARM;AASf,uBAAqB,YATN;AAUf,eAAa,UAVE;AAWf,aAAW,cAXI;AAYf,kBAAgB,gBAZD;AAaf,WAAS,OAbM;AAcf,YAAU,QAdK;AAef,WAAS,QAfM;AAgBf,WAAS,QAhBM;AAiBf,UAAQ,eAjBO;AAkBf,mBAAiB,eAlBF;AAmBf,mBAAiB,eAnBF;AAoBf,WAAS,KApBM;AAqBf,YAAU,WArBK;AAsBf,YAAU,WAtBK;AAuBf,cAAY,sBAvBG;AAwBf,kBAAgB,gBAxBD;AAyBf,kBAAgB,YAzBD;AA0Bf,eAAa,MA1BE;AA2Bf,aAAW,WA3BI;AA4Bf,YAAU,WA5BK;AA6Bf,WAAS,mBA7BM;AA8Bf,YAAU,UA9BK;AA+Bf,sBAAoB,8BA/BL;AAgCf,aAAW,YAhCI;AAiCf,WAAS,YAjCM;AAkCf,sBAAoB,mBAlCL;AAmCf,YAAU,YAnCK;AAoCf,iBAAe,kBApCA;AAqCf,eAAa,cArCE;AAsCf,eAAa,cAtCE;AAuCf,UAAQ,MAvCO;AAwCf,aAAW,aAxCI;AAyCf,iBAAe,WAzCA;AA0Cf,iBAAe,cA1CA;AA2Cf,mBAAiB,WA3CF;AA4Cf,cAAY,OA5CG;AA6Cf,cAAY,YA7CG;AA8Cf,cAAY,aA9CG;AA+Cf,WAAS,WA/CM;AAgDf,iBAAe,MAhDA;AAiDf,kBAAgB,KAjDD;AAkDf,eAAa,KAlDE;AAmDf,yBAAuB,cAnDR;AAoDf,aAAW,aApDI;AAqDf,aAAW,OArDI;AAsDf,gBAAc,SAtDC;AAuDf,YAAU,aAvDK;AAwDf,kBAAgB,YAxDD;AAyDf,aAAW,MAzDI;AA0Df,YAAU,oBA1DK;AA2Df,eAAa,oBA3DE;AA4Df,aAAW,SA5DI;AA6Df,aAAW,OA7DI;AA8Df,iBAAe,aA9DA;AA+Df,UAAQ,WA/DO;AAgEf,eAAa,cAhEE;AAiEf,gBAAc,cAjEC;AAkEf,gBAAc,cAlEC;AAmEf,cAAY,gBAnEG;AAoEf,mBAAiB,cApEF;AAqEf,gBAAc,aArEC;AAsEf,iBAAe,aAtEA;AAuEf,iBAAe,MAvEA;AAwEf,iBAAe,WAxEA;AAyEf,eAAa,UAzEE;AA0Ef,YAAU,cA1EK;AA2Ef,WAAS,YA3EM;AA4Ef,qBAAmB,kBA5EJ;AA6Ef,UAAQ,OA7EO;AA8Ef,cAAY,OA9EG;AA+Ef,UAAQ,OA/EO;AAgFf,kBAAgB,sBAhFD;AAiFf,YAAU,WAjFK;AAkFf,cAAY,UAlFG;AAmFf,iBAAe,WAnFA;AAoFf,mBAAiB,eApFF;AAqFf,qBAAmB,kBArFJ;AAsFf,sBAAoB,iBAtFL;AAuFf,aAAW,WAvFI;AAwFf,aAAW,aAxFI;AAyFf,iBAAe,aAzFA;AA0Ff,cAAY,eA1FG;AA2Ff,aAAW,UA3FI;AA4Ff,iBAAe,SA5FA;AA6Ff,mBAAiB,cA7FF;AA8Ff,kBAAgB,aA9FD;AA+Ff,kBAAgB,mBA/FD;AAgGf,gBAAc,eAhGC;AAiGf,oBAAkB,gBAjGH;AAkGf,aAAW,kBAlGI;AAmGf,gBAAc,SAnGC;AAoGf,kBAAgB,kBApGD;AAqGf,kBAAgB,iBArGD;AAsGf,uBAAqB,SAtGN;AAuGf,aAAW,OAvGI;AAwGf,YAAU,QAxGK;AAyGf,eAAa,kBAzGE;AA0Gf,aAAW,UA1GI;AA2Gf,UAAQ,MA3GO;AA4Gf,aAAW,QA5GI;AA6Gf,mBAAiB,SA7GF;AA8Gf,iBAAe,SA9GA;AA+Gf,SAAO,UA/GQ;AAgHf,2BAAyB,sBAhHV;AAiHf,iBAAe,aAjHA;AAkHf,mBAAiB,kBAlHF;AAmHf,cAAY,YAnHG;AAoHf,kBAAgB,YApHD;AAqHf,UAAQ,UArHO;AAsHf,YAAU,YAtHK;AAuHf,eAAa,UAvHE;AAwHf,qBAAmB,eAxHJ;AAyHf,qBAAmB,iBAzHJ;AA0Hf,iBAAe,SA1HA;AA2Hf,iBAAe,gBA3HA;AA4Hf,mBAAiB,cA5HF;AA6Hf,WAAS,OA7HM;AA8Hf,gBAAc,cA9HC;AA+Hf,iBAAe,cA/HA;AAgIf,iBAAe,cAhIA;AAiIf,gBAAc,eAjIC;AAkIf,gBAAc,WAlIC;AAmIf,kBAAgB,cAnID;AAoIf,oBAAkB,UApIH;AAqIf,cAAY,SArIG;AAsIf,iBAAe,YAtIA;AAuIf,SAAO,QAvIQ;AAwIf,YAAU,SAxIK;AAyIf,SAAO,UAzIQ;AA0If,WAAS,OA1IM;AA2If,gBAAc,WA3IC;AA4If,WAAS,MA5IM;AA6If,gBAAc,YA7IC;AA8If,cAAY,SA9IG;AA+If,YAAU,kCA/IK;AAgJf,UAAQ,MAhJO;AAiJf,WAAS,QAjJM;AAkJf,iBAAe,MAlJA;AAmJf,kBAAgB,MAnJD;AAoJf,kBAAgB,eApJD;AAqJf,SAAO,gBArJQ;AAsJf,iBAAe,cAtJA;AAuJf,WAAS,cAvJM;AAwJf,iBAAe,cAxJA;AAyJf,cAAY,WAzJG;AA0Jf,cAAY,SA1JG;AA2Jf,SAAO,UA3JQ;AA4Jf,WAAS,WA5JM;AA6Jf,eAAa,YA7JE;AA8Jf,iBAAe,aA9JA;AA+Jf,iBAAe,SA/JA;AAgKf,gBAAc,aAhKC;AAiKf,YAAU,UAjKK;AAkKf,gBAAc,UAlKC;AAmKf,eAAa,UAnKE;AAoKf,gBAAc,SApKC;AAqKf,oBAAkB,iBArKH;AAsKf,kBAAgB,SAtKD;AAuKf,cAAY,aAvKG;AAwKf,kBAAgB,aAxKD;AAyKf,oBAAkB,kBAzKH;AA0Kf,YAAU,SA1KK;AA2Kf,gBAAc,cA3KC;AA4Kf,UAAQ,UA5KO;AA6Kf,kBAAgB,UA7KD;AA8Kf,WAAS,eA9KM;AA+Kf,UAAQ,OA/KO;AAgLf,cAAY,SAhLG;AAiLf,eAAa,UAjLE;AAkLf,iBAAe,YAlLA;AAmLf,yBAAuB,kBAnLR;AAoLf,iCAA+B,kBApLhB;AAqLf,SAAO,KArLQ;AAsLf,cAAY,UAtLG;AAuLf,cAAY,aAvLG;AAwLf,eAAa,UAxLE;AAyLf,kBAAgB,YAzLD;AA0Lf,aAAW,OA1LI;AA2Lf,WAAS,OA3LM;AA4Lf,oBAAkB,iBA5LH;AA6Lf,WAAS,QA7LM;AA8Lf,YAAU,UA9LK;AA+Lf,WAAS,UA/LM;AAgMf,YAAU,UAhMK;AAiMf,aAAW,KAjMI;AAkMf,wBAAsB,mBAlMP;AAmMf,sBAAoB,cAnML;AAoMf,eAAa,aApME;AAqMf,YAAU,OArMK;AAsMf,sBAAoB,eAtML;AAuMf,WAAS,OAvMM;AAwMf,oBAAkB,WAxMH;AAyMf,cAAY,UAzMG;AA0Mf,sBAAoB,gBA1ML;AA2Mf,wBAAsB,YA3MP;AA4Mf,YAAU,UA5MK;AA6Mf,eAAa,UA7ME;AA8Mf,iBAAe,eA9MA;AA+Mf,UAAQ,MA/MO;AAgNf,YAAU,OAhNK;AAiNf,cAAY,QAjNG;AAkNf,iBAAe,YAlNA;AAmNf,cAAY,OAnNG;AAoNf,aAAW,SApNI;AAqNf,cAAY,QArNG;AAsNf,eAAa,WAtNE;AAuNf,oBAAkB,aAvNH;AAwNf,sBAAoB,UAxNL;AAyNf,QAAM,WAzNS;AA0Nf,cAAY,SA1NG;AA2Nf,YAAU,uBA3NK;AA4Nf,eAAa,YA5NE;AA6Nf,qBAAmB,aA7NJ;AA8Nf,WAAS,YA9NM;AA+Nf,iBAAe,SA/NA;AAgOf,aAAW,UAhOI;AAiOf,kBAAgB,cAjOD;AAkOf,cAAY,UAlOG;AAmOf,oBAAkB,WAnOH;AAoOf,cAAY,OApOG;AAqOf,eAAa,YArOE;AAsOf,qBAAmB,QAtOJ;AAuOf,oBAAkB,aAvOH;AAwOf,cAAY,OAxOG;AAyOf,UAAQ,QAzOO;AA0Of,SAAO,SA1OQ;AA2Of,cAAY,SA3OG;AA4Of,SAAO,YA5OQ;AA6Of,iBAAe,UA7OA;AA8Of,uBAAqB,WA9ON;AA+Of,QAAM,UA/OS;AAgPf,gBAAc,YAhPC;AAiPf,kBAAgB,cAjPD;AAkPf,cAAY,QAlPG;AAmPf,oBAAkB;AAnPH,CAAjB",
      "sourceRoot": "/Users/new_name/Desktop/british translator/components/",
      "sourcesContent": [
        "module.exports = {\n  \"abseil\": \"rappel\",\n  \"accountancy\": \"accounting\",\n  \"advert\": \"advertisement\",\n  \"agony column\": \"advice column\",\n  \"answerphone\": \"answering machine\",\n  \"anti-clockwise\": \"counterclockwise\",\n  \"approved school\": \"juvie\",\n  \"artic\": \"semi\",\n  \"athletics meeting\": \"track meet\",\n  \"aubergine\": \"eggplant\",\n  \"autocue\": \"teleprompter\",\n  \"bank holiday\": \"public holiday\",\n  \"barmy\": \"balmy\",\n  \"biccie\": \"cookie\",\n  \"bicky\": \"cookie\",\n  \"bikky\": \"cookie\",\n  \"biro\": \"ballpoint pen\",\n  \"bits and bobs\": \"odds and ends\",\n  \"black pudding\": \"blood sausage\",\n  \"bloke\": \"guy\",\n  \"blower\": \"telephone\",\n  \"boffin\": \"an expert\",\n  \"bog roll\": \"roll of toilet paper\",\n  \"bog-standard\": \"garden-variety\",\n  \"boiled sweet\": \"hard candy\",\n  \"bone-idle\": \"lazy\",\n  \"brekkie\": \"breakfast\",\n  \"brekky\": \"breakfast\",\n  \"breve\": \"double whole note\",\n  \"brolly\": \"umbrella\",\n  \"building society\": \"savings and loan association\",\n  \"bum bag\": \"fanny pack\",\n  \"bunce\": \"a windfall\",\n  \"bureau de change\": \"currency exchange\",\n  \"burgle\": \"burglarize\",\n  \"by-election\": \"special election\",\n  \"cafetière\": \"French press\",\n  \"cafetiere\": \"French press\",\n  \"caff\": \"café\",\n  \"cagoule\": \"windbreaker\",\n  \"candidature\": \"candidacy\",\n  \"candy floss\": \"cotton candy\",\n  \"car boot sale\": \"swap meet\",\n  \"car boot\": \"trunk\",\n  \"car hire\": \"car rental\",\n  \"car park\": \"parking lot\",\n  \"carer\": \"caregiver\",\n  \"carriageway\": \"lane\",\n  \"cash machine\": \"ATM\",\n  \"cashpoint\": \"ATM\",\n  \"central reservation\": \"median strip\",\n  \"chancer\": \"opportunist\",\n  \"chat up\": \"flirt\",\n  \"chatted up\": \"flirted\",\n  \"cheeky\": \"impertinent\",\n  \"child-minder\": \"babysitter\",\n  \"chinwag\": \"chat\",\n  \"chippy\": \"fish-and-chip shop\",\n  \"chip shop\": \"fish-and-chip shop\",\n  \"chuffed\": \"pleased\",\n  \"chunder\": \"vomit\",\n  \"clapped out\": \"clapped out\",\n  \"cleg\": \"horse fly\",\n  \"clingfilm\": \"plastic wrap\",\n  \"cling-film\": \"plastic wrap\",\n  \"cling film\": \"plastic wrap\",\n  \"cobblers\": \"shoe repairers\",\n  \"conservatoire\": \"conservatory\",\n  \"cotton bud\": \"cotton swab\",\n  \"cotton wool\": \"cotton ball\",\n  \"counterfoil\": \"stub\",\n  \"counterpane\": \"bedspread\",\n  \"courgette\": \"zucchini\",\n  \"crisps\": \"potato chips\",\n  \"cuppa\": \"cup of tea\",\n  \"current account\": \"checking account\",\n  \"daft\": \"silly\",\n  \"dogsbody\": \"grunt\",\n  \"dosh\": \"dough\",\n  \"double first\": \"undergraduate degree\",\n  \"draper\": \"dry goods\",\n  \"draughts\": \"checkers\",\n  \"drawing pin\": \"thumbtack\",\n  \"drink-driving\": \"drunk driving\",\n  \"driving licence\": \"driver's license\",\n  \"dual carriageway\": \"divided highway\",\n  \"dustbin\": \"trash can\",\n  \"dustman\": \"garbage man\",\n  \"dustbin man\": \"garbage man\",\n  \"dustcart\": \"garbage truck\",\n  \"earthed\": \"grounded\",\n  \"elastoplast\": \"bandage\",\n  \"electric fire\": \"space heater\",\n  \"engaged tone\": \"busy signal\",\n  \"estate agent\": \"real estate agent\",\n  \"estate car\": \"station wagon\",\n  \"extension lead\": \"extension cord\",\n  \"fancy a\": \"would you like a\",\n  \"fairy cake\": \"cupcake\",\n  \"fairy lights\": \"Christmas lights\",\n  \"fire brigade\": \"fire department\",\n  \"flight lieutenant\": \"captain\",\n  \"flypast\": \"flyby\",\n  \"footie\": \"soccer\",\n  \"freephone\": \"toll-free number\",\n  \"funfair\": \"carnival\",\n  \"gaol\": \"jail\",\n  \"gherkin\": \"pickle\",\n  \"group captain\": \"colonel\",\n  \"guard's van\": \"caboose\",\n  \"guv\": \"governor\",\n  \"heath robinson device\": \"rube goldberg device\",\n  \"high street\": \"main street\",\n  \"hire purchase\": \"installment plan\",\n  \"hold-all\": \"duffel bag\",\n  \"holidaymaker\": \"vacationer\",\n  \"hols\": \"holidays\",\n  \"hot up\": \"heating up\",\n  \"ice lolly\": \"popsicle\",\n  \"identity parade\": \"police lineup\",\n  \"inverted commas\": \"quotation marks\",\n  \"invigilator\": \"proctor\",\n  \"ironmongery\": \"hardware store\",\n  \"jacket potato\": \"baked potato\",\n  \"jemmy\": \"jimmy\",\n  \"jerrybuilt\": \"jerry-rigged\",\n  \"jerry-built\": \"jerry-rigged\",\n  \"jumble sale\": \"rummage sale\",\n  \"jump leads\": \"jumper cables\",\n  \"kirby grip\": \"bobby pin\",\n  \"kitchen roll\": \"paper towels\",\n  \"knacker's yard\": \"junkyard\",\n  \"ladybird\": \"ladybug\",\n  \"launderette\": \"laundromat\",\n  \"lav\": \"toilet\",\n  \"learnt\": \"learned\",\n  \"loo\": \"bathroom\",\n  \"lorry\": \"truck\",\n  \"loudhailer\": \"megaphone\",\n  \"maths\": \"math\",\n  \"mole grips\": \"vise-grips\",\n  \"motorway\": \"freeway\",\n  \"muppet\": \"an incompetent or foolish person\",\n  \"nark\": \"narc\",\n  \"nappy\": \"daiper\",\n  \"nosy parker\": \"nosy\",\n  \"nosey parker\": \"nosy\",\n  \"number plate\": \"license plate\",\n  \"oap\": \"senior citizen\",\n  \"off-licence\": \"liquor store\",\n  \"offie\": \"liquor store\",\n  \"off-the-peg\": \"off-the-rack\",\n  \"oughtn't\": \"shouldn't\",\n  \"overleaf\": \"reverse\",\n  \"owt\": \"anything\",\n  \"pants\": \"underwear\",\n  \"panda car\": \"police car\",\n  \"paper round\": \"paper route\",\n  \"paracetamol\": \"Tylenol\",\n  \"pernickety\": \"persnickety\",\n  \"petrol\": \"gasoline\",\n  \"petrolhead\": \"gearhead\",\n  \"phone box\": \"payphone\",\n  \"pillar box\": \"mailbox\",\n  \"pillar-box red\": \"fire engine red\",\n  \"plasterboard\": \"drywall\",\n  \"plectrum\": \"guitar pick\",\n  \"postal order\": \"money order\",\n  \"poste restante\": \"general delivery\",\n  \"postie\": \"postman\",\n  \"pound shop\": \"dollar store\",\n  \"pram\": \"stroller\",\n  \"perambulator\": \"stroller\",\n  \"prang\": \"fender bender\",\n  \"prat\": \"idiot\",\n  \"press-up\": \"push-up\",\n  \"press-ups\": \"push-ups\",\n  \"pritt-stick\": \"glue stick\",\n  \"provisional licence\": \"learner's permit\",\n  \"provisional driving licence\": \"learner's permit\",\n  \"pub\": \"bar\",\n  \"publican\": \"landlord\",\n  \"punch-up\": \"a fistfight\",\n  \"pushchair\": \"stroller\",\n  \"quieten down\": \"quiet down\",\n  \"rashers\": \"bacon\",\n  \"recce\": \"recon\",\n  \"reel of cotton\": \"spool of thread\",\n  \"sarky\": \"snarky\",\n  \"sarnie\": \"sandwich\",\n  \"sarny\": \"sandwich\",\n  \"sannie\": \"sandwich\",\n  \"sat nav\": \"GPS\",\n  \"self-raising flour\": \"self-rising flour\",\n  \"selling-out shop\": \"liquor store\",\n  \"sellotape\": \"Scotch tape\",\n  \"shan't\": \"won't\",\n  \"shopping trolley\": \"shopping cart\",\n  \"skint\": \"broke\",\n  \"skirting board\": \"baseboard\",\n  \"slaphead\": \"bald man\",\n  \"sleeping partner\": \"silent partner\",\n  \"sleeping policeman\": \"speed bump\",\n  \"slippy\": \"slippery\",\n  \"slowcoach\": \"slowpoke\",\n  \"smart dress\": \"formal attire\",\n  \"snog\": \"kiss\",\n  \"spawny\": \"lucky\",\n  \"spiffing\": \"spiffy\",\n  \"spot of tea\": \"cup of tea\",\n  \"squaddie\": \"grunt\",\n  \"squidgy\": \"squishy\",\n  \"stockist\": \"dealer\",\n  \"sun cream\": \"sunscreen\",\n  \"suspender belt\": \"garter belt\",\n  \"swimming costume\": \"swimsuit\",\n  \"ta\": \"thank you\",\n  \"takeaway\": \"takeout\",\n  \"tannoy\": \"public address system\",\n  \"tea towel\": \"dish towel\",\n  \"telephone kiosk\": \"phone booth\",\n  \"telly\": \"television\",\n  \"ticket tout\": \"scalper\",\n  \"tipp-ex\": \"Wite-Out\",\n  \"tipping down\": \"raining hard\",\n  \"trainers\": \"sneakers\",\n  \"transport cafe\": \"truckstop\",\n  \"trousers\": \"pants\",\n  \"truncheon\": \"nightstick\",\n  \"turf accountant\": \"bookie\",\n  \"turn-indicator\": \"turn signal\",\n  \"turn-ups\": \"cuffs\",\n  \"twee\": \"cutesy\",\n  \"uni\": \"college\",\n  \"upmarket\": \"upscale\",\n  \"veg\": \"vegetables\",\n  \"wage packet\": \"paycheck\",\n  \"washing-up liquid\": \"dish soap\",\n  \"wc\": \"bathroom\",\n  \"windscreen\": \"windshield\",\n  \"wing mirrors\": \"side mirrors\",\n  \"y-fronts\": \"briefs\",\n  \"zebra crossing\": \"crosswalk\"\n}\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1705335515272
  },
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/tests/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/tests/1_unit-tests.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/tests/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/tests/1_unit-tests.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/tests/1_unit-tests.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/tests/1_unit-tests.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/tests/",
        "sourceFileName": "1_unit-tests.js"
      }
    },
    "ast": null,
    "code": "const chai = require('chai');\n\nconst assert = chai.assert;\n\nconst Translator = require('../components/translator.js');\n\nconst translator = new Translator();\nsuite('Unit Tests', () => {\n  suite('American to British Translation', () => {\n    test('Mangoes are my favorite fruit.', done => {\n      assert.equal(translator.getAmericanTranslation('Mangoes are my favorite fruit.'), 'Mangoes are my <span class=\"highlight\">favourite</span> fruit.');\n      done();\n    });\n    test('I ate yogurt for breakfast.', done => {\n      assert.equal(translator.getAmericanTranslation('I ate yogurt for breakfast.'), 'I ate <span class=\"highlight\">yoghurt</span> for breakfast.');\n      done();\n    });\n    test(\"We had a party at my friend's condo.\", done => {\n      assert.equal(translator.getAmericanTranslation(\"We had a party at my friend's condo.\"), 'We had a party at my friend\\'s <span class=\"highlight\">flat</span>.');\n      done();\n    });\n    test(\"Can you toss this in the trashcan for me?\", done => {\n      assert.equal(translator.getAmericanTranslation(\"Can you toss this in the trashcan for me?\"), 'Can you toss this in the <span class=\"highlight\">bin</span> for me?');\n      done();\n    });\n    test(\"The parking lot was full.\", done => {\n      assert.equal(translator.getAmericanTranslation(\"The parking lot was full.\"), 'The <span class=\"highlight\">car park</span> was full.');\n      done();\n    });\n    test(\"Like a high tech Rube Goldberg machine.\", done => {\n      assert.equal(translator.getAmericanTranslation(\"Like a high tech Rube Goldberg machine.\"), 'Like a high tech <span class=\"highlight\">Heath Robinson device</span>.');\n      done();\n    });\n    test(\"To play hooky means to skip class or work.\", done => {\n      assert.equal(translator.getAmericanTranslation(\"To play hooky means to skip class or work.\"), 'To <span class=\"highlight\">bunk off</span> means to skip class or work.');\n      done();\n    });\n    test(\"No Mr. Bond, I expect you to die.\", done => {\n      assert.equal(translator.getAmericanTranslation(\"No Mr. Bond, I expect you to die.\"), 'No <span class=\"highlight\">Mr</span> Bond, I expect you to die.');\n      done();\n    });\n    test(\"Dr. Grosh will see you now.\", done => {\n      assert.equal(translator.getAmericanTranslation(\"Dr. Grosh will see you now.\"), '<span class=\"highlight\">Dr</span> Grosh will see you now.');\n      done();\n    });\n    test(\"Lunch is at 12:15 today.\", done => {\n      assert.equal(translator.getAmericanTranslation(\"Lunch is at 12:15 today.\"), 'Lunch is at <span class=\"highlight\">12.15</span> today.');\n      done();\n    });\n  });\n  suite('British to American Translation', () => {\n    test(\"We watched the footie match for a while.\", done => {\n      assert.equal(translator.getBritishTranslation('We watched the footie match for a while.'), 'We watched the <span class=\"highlight\">soccer</span> match for a while.');\n      done();\n    });\n    test(\"Paracetamol takes up to an hour to work.\", done => {\n      assert.equal(translator.getBritishTranslation('Paracetamol takes up to an hour to work.'), '<span class=\"highlight\">Tylenol</span> takes up to an hour to work.');\n      done();\n    });\n    test(\"First, caramelise the onions.\", done => {\n      assert.equal(translator.getBritishTranslation('First, caramelise the onions.'), 'First, <span class=\"highlight\">caramelize</span> the onions.');\n      done();\n    });\n    test(\"I spent the bank holiday at the funfair.\", done => {\n      assert.equal(translator.getBritishTranslation('I spent the bank holiday at the funfair.'), 'I spent the <span class=\"highlight\">public holiday</span> at the <span class=\"highlight\">carnival</span>.');\n      done();\n    });\n    test(\"I had a bicky then went to the chippy.\", done => {\n      assert.equal(translator.getBritishTranslation('I had a bicky then went to the chippy.'), 'I had a <span class=\"highlight\">cookie</span> then went to the <span class=\"highlight\">fish-and-chip shop</span>.');\n      done();\n    });\n    test(\"I've just got bits and bobs in my bum bag.\", done => {\n      assert.equal(translator.getBritishTranslation('I\\'ve just got bits and bobs in my bum bag.'), 'I\\'ve just got <span class=\"highlight\">odds and ends</span> in my <span class=\"highlight\">fanny pack</span>.');\n      done();\n    });\n    test(\"The car boot sale at Boxted Airfield was called off.\", done => {\n      assert.equal(translator.getBritishTranslation('The car boot sale at Boxted Airfield was called off.'), 'The <span class=\"highlight\">swap meet</span> at Boxted Airfield was called off.');\n      done();\n    });\n    test(\"Have you met Mrs Kalyani?\", done => {\n      assert.equal(translator.getBritishTranslation('Have you met Mrs Kalyani?'), 'Have you met <span class=\"highlight\">Mrs.</span> Kalyani?');\n      done();\n    });\n    test(\"Prof Joyner of King's College, London.\", done => {\n      assert.equal(translator.getBritishTranslation('Prof Joyner of King\\'s College, London.'), '<span class=\"highlight\">Prof.</span> Joyner of King\\'s College, London.');\n      done();\n    });\n    test(\"Tea time is usually around 4 or 4.30.\", done => {\n      assert.equal(translator.getBritishTranslation('Tea time is usually around 4 or 4.30.'), 'Tea time is usually around 4 or <span class=\"highlight\">4:30</span>.');\n      done();\n    });\n  });\n  suite('Highlight translation', () => {\n    test('Mangoes are my favorite fruit.', done => {\n      assert.equal(translator.getAmericanTranslation('Mangoes are my favorite fruit.'), 'Mangoes are my <span class=\"highlight\">favourite</span> fruit.');\n      done();\n    });\n    test('I ate yogurt for breakfast.', done => {\n      assert.equal(translator.getAmericanTranslation('I ate yogurt for breakfast.'), 'I ate <span class=\"highlight\">yoghurt</span> for breakfast.');\n      done();\n    });\n    test('We watched the footie match for a while.', done => {\n      assert.equal(translator.getBritishTranslation('We watched the footie match for a while.'), 'We watched the <span class=\"highlight\">soccer</span> match for a while.');\n      done();\n    });\n    test('Paracetamol takes up to an hour to work.', done => {\n      assert.equal(translator.getBritishTranslation('Paracetamol takes up to an hour to work.'), '<span class=\"highlight\">Tylenol</span> takes up to an hour to work.');\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "1_unit-tests.js"
      ],
      "names": [
        "chai",
        "require",
        "assert",
        "Translator",
        "translator",
        "suite",
        "test",
        "done",
        "equal",
        "getAmericanTranslation",
        "getBritishTranslation"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/new_name/Desktop/british translator/tests/",
      "sourcesContent": [
        "const chai = require('chai');\nconst assert = chai.assert;\n\nconst Translator = require('../components/translator.js');\nconst translator = new Translator();\n\nsuite('Unit Tests', () => {\n    suite('American to British Translation', () => {\n        test('Mangoes are my favorite fruit.', (done) => {\n            assert.equal(translator.getAmericanTranslation('Mangoes are my favorite fruit.'), 'Mangoes are my <span class=\"highlight\">favourite</span> fruit.');\n            done();\n        });\n        test('I ate yogurt for breakfast.', (done) => {\n            assert.equal(translator.getAmericanTranslation('I ate yogurt for breakfast.'), 'I ate <span class=\"highlight\">yoghurt</span> for breakfast.');\n            done();\n        });\n        test(\"We had a party at my friend's condo.\", (done) => {\n            assert.equal(translator.getAmericanTranslation(\"We had a party at my friend's condo.\"), 'We had a party at my friend\\'s <span class=\"highlight\">flat</span>.');\n            done();\n        });\n        test(\"Can you toss this in the trashcan for me?\", (done) => {\n            assert.equal(translator.getAmericanTranslation(\"Can you toss this in the trashcan for me?\"), 'Can you toss this in the <span class=\"highlight\">bin</span> for me?');\n            done();\n        });\n        test(\"The parking lot was full.\", (done) => {\n            assert.equal(translator.getAmericanTranslation(\"The parking lot was full.\"), 'The <span class=\"highlight\">car park</span> was full.');\n            done();\n        });\n        test(\"Like a high tech Rube Goldberg machine.\", (done) => {\n            assert.equal(translator.getAmericanTranslation(\"Like a high tech Rube Goldberg machine.\"), 'Like a high tech <span class=\"highlight\">Heath Robinson device</span>.');\n            done();\n        });\n        test(\"To play hooky means to skip class or work.\", (done) => {\n            assert.equal(translator.getAmericanTranslation(\"To play hooky means to skip class or work.\"), 'To <span class=\"highlight\">bunk off</span> means to skip class or work.');\n            done();\n        });\n        test(\"No Mr. Bond, I expect you to die.\", (done) => {\n            assert.equal(translator.getAmericanTranslation(\"No Mr. Bond, I expect you to die.\"), 'No <span class=\"highlight\">Mr</span> Bond, I expect you to die.');\n            done();\n        });\n        test(\"Dr. Grosh will see you now.\", (done) => {\n            assert.equal(translator.getAmericanTranslation(\"Dr. Grosh will see you now.\"), '<span class=\"highlight\">Dr</span> Grosh will see you now.');\n            done();\n        });\n        test(\"Lunch is at 12:15 today.\", (done) => {\n            assert.equal(translator.getAmericanTranslation(\"Lunch is at 12:15 today.\"), 'Lunch is at <span class=\"highlight\">12.15</span> today.');\n            done();\n        });\n    });\n    suite('British to American Translation', () => {\n        test(\"We watched the footie match for a while.\", (done) => {\n            assert.equal(translator.getBritishTranslation('We watched the footie match for a while.'), 'We watched the <span class=\"highlight\">soccer</span> match for a while.');\n            done();\n        });\n        test(\"Paracetamol takes up to an hour to work.\", (done) => {\n            assert.equal(translator.getBritishTranslation('Paracetamol takes up to an hour to work.'), '<span class=\"highlight\">Tylenol</span> takes up to an hour to work.');\n            done();\n        });\n        test(\"First, caramelise the onions.\", (done) => {\n            assert.equal(translator.getBritishTranslation('First, caramelise the onions.'), 'First, <span class=\"highlight\">caramelize</span> the onions.');\n            done();\n        });\n        test(\"I spent the bank holiday at the funfair.\", (done) => {\n            assert.equal(translator.getBritishTranslation('I spent the bank holiday at the funfair.'), 'I spent the <span class=\"highlight\">public holiday</span> at the <span class=\"highlight\">carnival</span>.');\n            done();\n        });\n        test(\"I had a bicky then went to the chippy.\", (done) => {\n            assert.equal(translator.getBritishTranslation('I had a bicky then went to the chippy.'), 'I had a <span class=\"highlight\">cookie</span> then went to the <span class=\"highlight\">fish-and-chip shop</span>.');\n            done();\n        });\n        test(\"I've just got bits and bobs in my bum bag.\", (done) => {\n            assert.equal(translator.getBritishTranslation('I\\'ve just got bits and bobs in my bum bag.'), 'I\\'ve just got <span class=\"highlight\">odds and ends</span> in my <span class=\"highlight\">fanny pack</span>.');\n            done();\n        });\n        test(\"The car boot sale at Boxted Airfield was called off.\", (done) => {\n            assert.equal(translator.getBritishTranslation('The car boot sale at Boxted Airfield was called off.'), 'The <span class=\"highlight\">swap meet</span> at Boxted Airfield was called off.');\n            done();\n        });\n        test(\"Have you met Mrs Kalyani?\", (done) => {\n            assert.equal(translator.getBritishTranslation('Have you met Mrs Kalyani?'), 'Have you met <span class=\"highlight\">Mrs.</span> Kalyani?');\n            done();\n        });\n        test(\"Prof Joyner of King's College, London.\", (done) => {\n            assert.equal(translator.getBritishTranslation('Prof Joyner of King\\'s College, London.'), '<span class=\"highlight\">Prof.</span> Joyner of King\\'s College, London.');\n            done();\n        });\n        test(\"Tea time is usually around 4 or 4.30.\", (done) => {\n            assert.equal(translator.getBritishTranslation('Tea time is usually around 4 or 4.30.'), 'Tea time is usually around 4 or <span class=\"highlight\">4:30</span>.');\n            done();\n        });\n    });\n    suite('Highlight translation', () => {\n        test('Mangoes are my favorite fruit.', (done) => {\n            assert.equal(translator.getAmericanTranslation('Mangoes are my favorite fruit.'), 'Mangoes are my <span class=\"highlight\">favourite</span> fruit.');\n            done();\n        });\n        test('I ate yogurt for breakfast.', (done) => {\n            assert.equal(translator.getAmericanTranslation('I ate yogurt for breakfast.'), 'I ate <span class=\"highlight\">yoghurt</span> for breakfast.');\n            done();\n        });\n        test('We watched the footie match for a while.', (done) => {\n            assert.equal(translator.getBritishTranslation('We watched the footie match for a while.'), 'We watched the <span class=\"highlight\">soccer</span> match for a while.');\n            done();\n        });\n        test('Paracetamol takes up to an hour to work.', (done) => {\n            assert.equal(translator.getBritishTranslation('Paracetamol takes up to an hour to work.'), '<span class=\"highlight\">Tylenol</span> takes up to an hour to work.');\n            done();\n        });\n    });\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1705443550257
  },
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/tests/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/tests/2_functional-tests.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/tests/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/tests/2_functional-tests.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/tests/2_functional-tests.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/tests/2_functional-tests.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/tests/",
        "sourceFileName": "2_functional-tests.js"
      }
    },
    "ast": null,
    "code": "const chai = require('chai');\n\nconst chaiHttp = require('chai-http');\n\nconst assert = chai.assert;\n\nconst server = require('../server.js');\n\nchai.use(chaiHttp);\n\nlet Translator = require('../components/translator.js');\n\nconst translator = new Translator();\nsuite('Functional Tests', () => {\n  test('Translation with text and locale fields', done => {\n    chai.request(server).post('/api/translate').send({\n      text: \"accessorize.\",\n      locale: \"american-to-british\"\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.text, 'accessorize.');\n      assert.equal(res.body.translation, '<span class=\"highlight\">accessorise</span>.');\n      done();\n    });\n  });\n  test('Translation with text and invalid locale field', done => {\n    chai.request(server).post('/api/translate').send({\n      text: \"accessorize\",\n      locale: \"wrong\"\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.error, \"Invalid value for locale field\");\n      done();\n    });\n  });\n  test('Translation with missing text field', done => {\n    chai.request(server).post('/api/translate').send({\n      locale: \"american-to-british\"\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.error, 'Required field(s) missing');\n      done();\n    });\n  });\n  test('Translation with missing locale field', done => {\n    chai.request(server).post('/api/translate').send({\n      text: \"accessorize\"\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.error, 'Required field(s) missing');\n      done();\n    });\n  });\n  test('Translation with empty text', done => {\n    chai.request(server).post('/api/translate').send({\n      text: \"\",\n      locale: \"american-to-british\"\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.error, 'No text to translate');\n      done();\n    });\n  });\n  test('Translation with text that needs no translation', done => {\n    chai.request(server).post('/api/translate').send({\n      text: \"abc.\",\n      locale: \"american-to-british\"\n    }).end(function (err, res) {\n      assert.equal(res.status, 200);\n      assert.equal(res.body.text, 'abc.');\n      assert.equal(res.body.translation, \"Everything looks good to me!\");\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "2_functional-tests.js"
      ],
      "names": [
        "chai",
        "require",
        "chaiHttp",
        "assert",
        "server",
        "use",
        "Translator",
        "translator",
        "suite",
        "test",
        "done",
        "request",
        "post",
        "send",
        "text",
        "locale",
        "end",
        "err",
        "res",
        "equal",
        "status",
        "body",
        "translation",
        "error"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/new_name/Desktop/british translator/tests/",
      "sourcesContent": [
        "const chai = require('chai');\nconst chaiHttp = require('chai-http');\nconst assert = chai.assert;\nconst server = require('../server.js');\n\nchai.use(chaiHttp);\n\nlet Translator = require('../components/translator.js');\nconst translator = new Translator();\n\nsuite('Functional Tests', () => {\n    test('Translation with text and locale fields', (done) => {\n        chai.request(server)\n            .post('/api/translate')\n            .send({text: \"accessorize.\", locale: \"american-to-british\"})\n            .end(function(err, res) {\n                assert.equal(res.status, 200);\n                assert.equal(res.body.text, 'accessorize.')\n                assert.equal(res.body.translation, '<span class=\"highlight\">accessorise</span>.');\n                done();\n            });\n    });\n    test('Translation with text and invalid locale field', (done) => {\n        chai.request(server)\n            .post('/api/translate')\n            .send({text: \"accessorize\", locale: \"wrong\"})\n            .end(function(err, res) {\n                assert.equal(res.status, 200);\n                assert.equal(res.body.error, \"Invalid value for locale field\");\n                done();\n            });\n    });\n    test('Translation with missing text field', (done) => {\n        chai.request(server)\n            .post('/api/translate')\n            .send({locale: \"american-to-british\"})\n            .end(function(err, res) {\n                assert.equal(res.status, 200);\n                assert.equal(res.body.error, 'Required field(s) missing');\n                done();\n            });\n    });\n    test('Translation with missing locale field', (done) => {\n        chai.request(server)\n            .post('/api/translate')\n            .send({text: \"accessorize\"})\n            .end(function(err, res) {\n                assert.equal(res.status, 200);\n                assert.equal(res.body.error, 'Required field(s) missing');\n                done();\n            });\n    });\n    test('Translation with empty text', (done) => {\n        chai.request(server)\n            .post('/api/translate')\n            .send({text: \"\", locale: \"american-to-british\"})\n            .end(function(err, res) {\n                assert.equal(res.status, 200);\n                assert.equal(res.body.error, 'No text to translate');\n                done();\n            });\n    });\n    test('Translation with text that needs no translation', (done) => {\n        chai.request(server)\n            .post('/api/translate')\n            .send({text: \"abc.\", locale: \"american-to-british\"})\n            .end(function(err, res) {\n                assert.equal(res.status, 200);\n                assert.equal(res.body.text, 'abc.');\n                assert.equal(res.body.translation, \"Everything looks good to me!\");\n                done();\n            });\n    });\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1705444494164
  },
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "require('dotenv').config();\n\nconst express = require('express');\n\nconst bodyParser = require('body-parser');\n\nconst expect = require('chai').expect;\n\nconst cors = require('cors');\n\nconst fccTestingRoutes = require('./routes/fcctesting.js');\n\nconst runner = require('./test-runner');\n\nconst userRoutes = require('./routes/api.js');\n\nconst app = express();\napp.use('/public', express.static(process.cwd() + '/public'));\napp.use(cors({\n  origin: '*'\n})); //For FCC testing purposes only\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n})); // Index page (static HTML)\n\napp.route('/').get(function (req, res) {\n  res.sendFile(process.cwd() + '/views/index.html');\n}); //For FCC testing purposes\n\nfccTestingRoutes(app); // User routes\n\nuserRoutes(app); // 404 Not Found Middleware\n\napp.use(function (req, res, next) {\n  res.status(404).type('text').send('Not Found');\n});\nconst portNum = process.env.PORT || 5000; // Start our server and tests!\n\napp.listen(portNum, () => {\n  console.log(`Listening on port ${portNum}`);\n\n  if (process.env.NODE_ENV === 'test') {\n    console.log('Running Tests...');\n    setTimeout(function () {\n      try {\n        runner.run();\n      } catch (error) {\n        console.log('Tests are not valid:');\n        console.error(error);\n      }\n    }, 1500);\n  }\n});\nmodule.exports = app; // For testing\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiZXhwcmVzcyIsImJvZHlQYXJzZXIiLCJleHBlY3QiLCJjb3JzIiwiZmNjVGVzdGluZ1JvdXRlcyIsInJ1bm5lciIsInVzZXJSb3V0ZXMiLCJhcHAiLCJ1c2UiLCJzdGF0aWMiLCJwcm9jZXNzIiwiY3dkIiwib3JpZ2luIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInJvdXRlIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZEZpbGUiLCJuZXh0Iiwic3RhdHVzIiwidHlwZSIsInNlbmQiLCJwb3J0TnVtIiwiZW52IiwiUE9SVCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJOT0RFX0VOViIsInNldFRpbWVvdXQiLCJydW4iLCJlcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFDQSxNQUFNQyxPQUFPLEdBQUdGLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1HLFVBQVUsR0FBR0gsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsTUFBTUksTUFBTSxHQUFRSixPQUFPLENBQUMsTUFBRCxDQUFQLENBQWdCSSxNQUFwQzs7QUFDQSxNQUFNQyxJQUFJLEdBQVVMLE9BQU8sQ0FBQyxNQUFELENBQTNCOztBQUVBLE1BQU1NLGdCQUFnQixHQUFJTixPQUFPLENBQUMsd0JBQUQsQ0FBakM7O0FBQ0EsTUFBTU8sTUFBTSxHQUFjUCxPQUFPLENBQUMsZUFBRCxDQUFqQzs7QUFDQSxNQUFNUSxVQUFVLEdBQVVSLE9BQU8sQ0FBQyxpQkFBRCxDQUFqQzs7QUFFQSxNQUFNUyxHQUFHLEdBQUdQLE9BQU8sRUFBbkI7QUFFQU8sR0FBRyxDQUFDQyxHQUFKLENBQVEsU0FBUixFQUFtQlIsT0FBTyxDQUFDUyxNQUFSLENBQWVDLE9BQU8sQ0FBQ0MsR0FBUixLQUFnQixTQUEvQixDQUFuQjtBQUNBSixHQUFHLENBQUNDLEdBQUosQ0FBUUwsSUFBSSxDQUFDO0FBQUNTLEVBQUFBLE1BQU0sRUFBRTtBQUFULENBQUQsQ0FBWixFLENBQThCOztBQUU5QkwsR0FBRyxDQUFDQyxHQUFKLENBQVFQLFVBQVUsQ0FBQ1ksSUFBWCxFQUFSO0FBQ0FOLEdBQUcsQ0FBQ0MsR0FBSixDQUFRUCxVQUFVLENBQUNhLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUixFLENBRUE7O0FBQ0FSLEdBQUcsQ0FBQ1MsS0FBSixDQUFVLEdBQVYsRUFDR0MsR0FESCxDQUNPLFVBQVVDLEdBQVYsRUFBZUMsR0FBZixFQUFvQjtBQUN2QkEsRUFBQUEsR0FBRyxDQUFDQyxRQUFKLENBQWFWLE9BQU8sQ0FBQ0MsR0FBUixLQUFnQixtQkFBN0I7QUFDRCxDQUhILEUsQ0FLQTs7QUFDQVAsZ0JBQWdCLENBQUNHLEdBQUQsQ0FBaEIsQyxDQUVBOztBQUNBRCxVQUFVLENBQUNDLEdBQUQsQ0FBVixDLENBRUE7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFVBQVNVLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkUsSUFBbkIsRUFBeUI7QUFDL0JGLEVBQUFBLEdBQUcsQ0FBQ0csTUFBSixDQUFXLEdBQVgsRUFDR0MsSUFESCxDQUNRLE1BRFIsRUFFR0MsSUFGSCxDQUVRLFdBRlI7QUFHRCxDQUpEO0FBTUEsTUFBTUMsT0FBTyxHQUFHZixPQUFPLENBQUNnQixHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBcEMsQyxDQUVBOztBQUNBcEIsR0FBRyxDQUFDcUIsTUFBSixDQUFXSCxPQUFYLEVBQW9CLE1BQU07QUFDeEJJLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLHFCQUFvQkwsT0FBUSxFQUF6Qzs7QUFDQSxNQUFJZixPQUFPLENBQUNnQixHQUFSLENBQVlLLFFBQVosS0FBdUIsTUFBM0IsRUFBbUM7QUFDakNGLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtCQUFaO0FBQ0FFLElBQUFBLFVBQVUsQ0FBQyxZQUFZO0FBQ3JCLFVBQUk7QUFDRjNCLFFBQUFBLE1BQU0sQ0FBQzRCLEdBQVA7QUFDRCxPQUZELENBRUUsT0FBT0MsS0FBUCxFQUFjO0FBQ2RMLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNCQUFaO0FBQ0FELFFBQUFBLE9BQU8sQ0FBQ0ssS0FBUixDQUFjQSxLQUFkO0FBQ0Q7QUFDRixLQVBTLEVBT1AsSUFQTyxDQUFWO0FBUUQ7QUFDRixDQWJEO0FBZUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjdCLEdBQWpCLEMsQ0FBc0IiLCJzb3VyY2VSb290IjoiL1VzZXJzL25ld19uYW1lL0Rlc2t0b3AvYnJpdGlzaCB0cmFuc2xhdG9yLyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpO1xuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuY29uc3QgZXhwZWN0ICAgICAgPSByZXF1aXJlKCdjaGFpJykuZXhwZWN0O1xuY29uc3QgY29ycyAgICAgICAgPSByZXF1aXJlKCdjb3JzJyk7XG5cbmNvbnN0IGZjY1Rlc3RpbmdSb3V0ZXMgID0gcmVxdWlyZSgnLi9yb3V0ZXMvZmNjdGVzdGluZy5qcycpO1xuY29uc3QgcnVubmVyICAgICAgICAgICAgPSByZXF1aXJlKCcuL3Rlc3QtcnVubmVyJyk7XG5jb25zdCB1c2VyUm91dGVzICAgICAgICA9IHJlcXVpcmUoJy4vcm91dGVzL2FwaS5qcycpO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmFwcC51c2UoJy9wdWJsaWMnLCBleHByZXNzLnN0YXRpYyhwcm9jZXNzLmN3ZCgpICsgJy9wdWJsaWMnKSk7XG5hcHAudXNlKGNvcnMoe29yaWdpbjogJyonfSkpOyAvL0ZvciBGQ0MgdGVzdGluZyBwdXJwb3NlcyBvbmx5XG5cbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG5cbi8vIEluZGV4IHBhZ2UgKHN0YXRpYyBIVE1MKVxuYXBwLnJvdXRlKCcvJylcbiAgLmdldChmdW5jdGlvbiAocmVxLCByZXMpIHtcbiAgICByZXMuc2VuZEZpbGUocHJvY2Vzcy5jd2QoKSArICcvdmlld3MvaW5kZXguaHRtbCcpO1xuICB9KTsgXG5cbi8vRm9yIEZDQyB0ZXN0aW5nIHB1cnBvc2VzXG5mY2NUZXN0aW5nUm91dGVzKGFwcCk7XG5cbi8vIFVzZXIgcm91dGVzXG51c2VyUm91dGVzKGFwcCk7XG4gICAgXG4vLyA0MDQgTm90IEZvdW5kIE1pZGRsZXdhcmVcbmFwcC51c2UoZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgcmVzLnN0YXR1cyg0MDQpXG4gICAgLnR5cGUoJ3RleHQnKVxuICAgIC5zZW5kKCdOb3QgRm91bmQnKTtcbn0pO1xuXG5jb25zdCBwb3J0TnVtID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA1MDAwO1xuXG4vLyBTdGFydCBvdXIgc2VydmVyIGFuZCB0ZXN0cyFcbmFwcC5saXN0ZW4ocG9ydE51bSwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhgTGlzdGVuaW5nIG9uIHBvcnQgJHtwb3J0TnVtfWApO1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlY9PT0ndGVzdCcpIHtcbiAgICBjb25zb2xlLmxvZygnUnVubmluZyBUZXN0cy4uLicpO1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcnVubmVyLnJ1bigpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1Rlc3RzIGFyZSBub3QgdmFsaWQ6Jyk7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgfVxuICAgIH0sIDE1MDApO1xuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7IC8vIEZvciB0ZXN0aW5nXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "require",
        "config",
        "express",
        "bodyParser",
        "expect",
        "cors",
        "fccTestingRoutes",
        "runner",
        "userRoutes",
        "app",
        "use",
        "static",
        "process",
        "cwd",
        "origin",
        "json",
        "urlencoded",
        "extended",
        "route",
        "get",
        "req",
        "res",
        "sendFile",
        "next",
        "status",
        "type",
        "send",
        "portNum",
        "env",
        "PORT",
        "listen",
        "console",
        "log",
        "NODE_ENV",
        "setTimeout",
        "run",
        "error",
        "module",
        "exports"
      ],
      "mappings": "AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMG,UAAU,GAAGH,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAMI,MAAM,GAAQJ,OAAO,CAAC,MAAD,CAAP,CAAgBI,MAApC;;AACA,MAAMC,IAAI,GAAUL,OAAO,CAAC,MAAD,CAA3B;;AAEA,MAAMM,gBAAgB,GAAIN,OAAO,CAAC,wBAAD,CAAjC;;AACA,MAAMO,MAAM,GAAcP,OAAO,CAAC,eAAD,CAAjC;;AACA,MAAMQ,UAAU,GAAUR,OAAO,CAAC,iBAAD,CAAjC;;AAEA,MAAMS,GAAG,GAAGP,OAAO,EAAnB;AAEAO,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBR,OAAO,CAACS,MAAR,CAAeC,OAAO,CAACC,GAAR,KAAgB,SAA/B,CAAnB;AACAJ,GAAG,CAACC,GAAJ,CAAQL,IAAI,CAAC;AAACS,EAAAA,MAAM,EAAE;AAAT,CAAD,CAAZ,E,CAA8B;;AAE9BL,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACY,IAAX,EAAR;AACAN,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACa,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAR,GAAG,CAACS,KAAJ,CAAU,GAAV,EACGC,GADH,CACO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACvBA,EAAAA,GAAG,CAACC,QAAJ,CAAaV,OAAO,CAACC,GAAR,KAAgB,mBAA7B;AACD,CAHH,E,CAKA;;AACAP,gBAAgB,CAACG,GAAD,CAAhB,C,CAEA;;AACAD,UAAU,CAACC,GAAD,CAAV,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,UAASU,GAAT,EAAcC,GAAd,EAAmBE,IAAnB,EAAyB;AAC/BF,EAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EACGC,IADH,CACQ,MADR,EAEGC,IAFH,CAEQ,WAFR;AAGD,CAJD;AAMA,MAAMC,OAAO,GAAGf,OAAO,CAACgB,GAAR,CAAYC,IAAZ,IAAoB,IAApC,C,CAEA;;AACApB,GAAG,CAACqB,MAAJ,CAAWH,OAAX,EAAoB,MAAM;AACxBI,EAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBL,OAAQ,EAAzC;;AACA,MAAIf,OAAO,CAACgB,GAAR,CAAYK,QAAZ,KAAuB,MAA3B,EAAmC;AACjCF,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAE,IAAAA,UAAU,CAAC,YAAY;AACrB,UAAI;AACF3B,QAAAA,MAAM,CAAC4B,GAAP;AACD,OAFD,CAEE,OAAOC,KAAP,EAAc;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,QAAAA,OAAO,CAACK,KAAR,CAAcA,KAAd;AACD;AACF,KAPS,EAOP,IAPO,CAAV;AAQD;AACF,CAbD;AAeAC,MAAM,CAACC,OAAP,GAAiB7B,GAAjB,C,CAAsB",
      "sourceRoot": "/Users/new_name/Desktop/british translator/",
      "sourcesContent": [
        "require('dotenv').config();\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst expect      = require('chai').expect;\nconst cors        = require('cors');\n\nconst fccTestingRoutes  = require('./routes/fcctesting.js');\nconst runner            = require('./test-runner');\nconst userRoutes        = require('./routes/api.js');\n\nconst app = express();\n\napp.use('/public', express.static(process.cwd() + '/public'));\napp.use(cors({origin: '*'})); //For FCC testing purposes only\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\n// Index page (static HTML)\napp.route('/')\n  .get(function (req, res) {\n    res.sendFile(process.cwd() + '/views/index.html');\n  }); \n\n//For FCC testing purposes\nfccTestingRoutes(app);\n\n// User routes\nuserRoutes(app);\n    \n// 404 Not Found Middleware\napp.use(function(req, res, next) {\n  res.status(404)\n    .type('text')\n    .send('Not Found');\n});\n\nconst portNum = process.env.PORT || 5000;\n\n// Start our server and tests!\napp.listen(portNum, () => {\n  console.log(`Listening on port ${portNum}`);\n  if (process.env.NODE_ENV==='test') {\n    console.log('Running Tests...');\n    setTimeout(function () {\n      try {\n        runner.run();\n      } catch (error) {\n        console.log('Tests are not valid:');\n        console.error(error);\n      }\n    }, 1500);\n  }\n});\n\nmodule.exports = app; // For testing\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1705432226327
  },
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/routes/fcctesting.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/routes/fcctesting.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/routes/fcctesting.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/routes/fcctesting.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/routes/",
        "sourceFileName": "fcctesting.js"
      }
    },
    "ast": null,
    "code": "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n'use strict';\n\nconst cors = require('cors');\n\nconst fs = require('fs');\n\nconst runner = require('../test-runner');\n\nmodule.exports = function (app) {\n  app.route('/_api/server.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/server.js', function (err, data) {\n      if (err) return next(err);\n      res.send(data.toString());\n    });\n  });\n  app.route('/_api/routes/api.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/routes/api.js', function (err, data) {\n      if (err) return next(err);\n      res.type('txt').send(data.toString());\n    });\n  });\n  app.route('/_api/controllers/convertHandler.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/controllers/convertHandler.js', function (err, data) {\n      if (err) return next(err);\n      res.type('txt').send(data.toString());\n    });\n  });\n  app.get('/_api/get-tests', cors(), function (req, res, next) {\n    console.log('requested');\n    if (process.env.NODE_ENV === 'test') return next();\n    res.json({\n      status: 'unavailable'\n    });\n  }, function (req, res, next) {\n    if (!runner.report) return next();\n    res.json(testFilter(runner.report, req.query.type, req.query.n));\n  }, function (req, res) {\n    runner.on('done', function (report) {\n      process.nextTick(() => res.json(testFilter(runner.report, req.query.type, req.query.n)));\n    });\n  });\n  app.get('/_api/app-info', function (req, res) {\n    let hs = Object.keys(res._headers).filter(h => !h.match(/^access-control-\\w+/));\n    let hObj = {};\n    hs.forEach(h => {\n      hObj[h] = res._headers[h];\n    });\n    delete res._headers['strict-transport-security'];\n    res.json({\n      headers: hObj\n    });\n  });\n};\n\nfunction testFilter(tests, type, n) {\n  let out;\n\n  switch (type) {\n    case 'unit':\n      out = tests.filter(t => t.context.match('Unit Tests'));\n      break;\n\n    case 'functional':\n      out = tests.filter(t => t.context.match('Functional Tests') && !t.title.match('#example'));\n      break;\n\n    default:\n      out = tests;\n  }\n\n  if (n !== undefined) {\n    return out[n] || out;\n  }\n\n  return out;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "fcctesting.js"
      ],
      "names": [
        "cors",
        "require",
        "fs",
        "runner",
        "module",
        "exports",
        "app",
        "route",
        "get",
        "req",
        "res",
        "next",
        "console",
        "log",
        "readFile",
        "__dirname",
        "err",
        "data",
        "send",
        "toString",
        "type",
        "process",
        "env",
        "NODE_ENV",
        "json",
        "status",
        "report",
        "testFilter",
        "query",
        "n",
        "on",
        "nextTick",
        "hs",
        "Object",
        "keys",
        "_headers",
        "filter",
        "h",
        "match",
        "hObj",
        "forEach",
        "headers",
        "tests",
        "out",
        "t",
        "context",
        "title",
        "undefined"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,gBAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAe;AAE9BA,EAAAA,GAAG,CAACC,KAAJ,CAAU,iBAAV,EACGC,GADH,CACO,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAX,IAAAA,EAAE,CAACY,QAAH,CAAYC,SAAS,GAAG,YAAxB,EAAsC,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACxD,UAAGD,GAAH,EAAQ,OAAOL,IAAI,CAACK,GAAD,CAAX;AACRN,MAAAA,GAAG,CAACQ,IAAJ,CAASD,IAAI,CAACE,QAAL,EAAT;AACD,KAHD;AAID,GAPH;AAQAb,EAAAA,GAAG,CAACC,KAAJ,CAAU,qBAAV,EACGC,GADH,CACO,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAX,IAAAA,EAAE,CAACY,QAAH,CAAYC,SAAS,GAAG,gBAAxB,EAA0C,UAASC,GAAT,EAAcC,IAAd,EAAoB;AAC5D,UAAGD,GAAH,EAAQ,OAAOL,IAAI,CAACK,GAAD,CAAX;AACRN,MAAAA,GAAG,CAACU,IAAJ,CAAS,KAAT,EAAgBF,IAAhB,CAAqBD,IAAI,CAACE,QAAL,EAArB;AACD,KAHD;AAID,GAPH;AAQAb,EAAAA,GAAG,CAACC,KAAJ,CAAU,qCAAV,EACGC,GADH,CACO,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAX,IAAAA,EAAE,CAACY,QAAH,CAAYC,SAAS,GAAG,gCAAxB,EAA0D,UAASC,GAAT,EAAcC,IAAd,EAAoB;AAC5E,UAAGD,GAAH,EAAQ,OAAOL,IAAI,CAACK,GAAD,CAAX;AACRN,MAAAA,GAAG,CAACU,IAAJ,CAAS,KAAT,EAAgBF,IAAhB,CAAqBD,IAAI,CAACE,QAAL,EAArB;AACD,KAHD;AAID,GAPH;AASAb,EAAAA,GAAG,CAACE,GAAJ,CAAQ,iBAAR,EAA2BR,IAAI,EAA/B,EAAmC,UAASS,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAwB;AACzDC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,QAAGQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA5B,EAAoC,OAAOZ,IAAI,EAAX;AACpCD,IAAAA,GAAG,CAACc,IAAJ,CAAS;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAT;AACD,GAJD,EAKA,UAAShB,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAwB;AACtB,QAAG,CAACR,MAAM,CAACuB,MAAX,EAAmB,OAAOf,IAAI,EAAX;AACnBD,IAAAA,GAAG,CAACc,IAAJ,CAASG,UAAU,CAACxB,MAAM,CAACuB,MAAR,EAAgBjB,GAAG,CAACmB,KAAJ,CAAUR,IAA1B,EAAgCX,GAAG,CAACmB,KAAJ,CAAUC,CAA1C,CAAnB;AACD,GARD,EASA,UAASpB,GAAT,EAAcC,GAAd,EAAkB;AAChBP,IAAAA,MAAM,CAAC2B,EAAP,CAAU,MAAV,EAAkB,UAASJ,MAAT,EAAgB;AAChCL,MAAAA,OAAO,CAACU,QAAR,CAAiB,MAAOrB,GAAG,CAACc,IAAJ,CAASG,UAAU,CAACxB,MAAM,CAACuB,MAAR,EAAgBjB,GAAG,CAACmB,KAAJ,CAAUR,IAA1B,EAAgCX,GAAG,CAACmB,KAAJ,CAAUC,CAA1C,CAAnB,CAAxB;AACD,KAFD;AAGD,GAbD;AAcAvB,EAAAA,GAAG,CAACE,GAAJ,CAAQ,gBAAR,EAA0B,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC3C,QAAIsB,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYxB,GAAG,CAACyB,QAAhB,EACNC,MADM,CACCC,CAAC,IAAI,CAACA,CAAC,CAACC,KAAF,CAAQ,qBAAR,CADP,CAAT;AAEA,QAAIC,IAAI,GAAG,EAAX;AACAP,IAAAA,EAAE,CAACQ,OAAH,CAAWH,CAAC,IAAI;AAACE,MAAAA,IAAI,CAACF,CAAD,CAAJ,GAAU3B,GAAG,CAACyB,QAAJ,CAAaE,CAAb,CAAV;AAA0B,KAA3C;AACA,WAAO3B,GAAG,CAACyB,QAAJ,CAAa,2BAAb,CAAP;AACAzB,IAAAA,GAAG,CAACc,IAAJ,CAAS;AAACiB,MAAAA,OAAO,EAAEF;AAAV,KAAT;AACD,GAPD;AASD,CAlDD;;AAoDA,SAASZ,UAAT,CAAoBe,KAApB,EAA2BtB,IAA3B,EAAiCS,CAAjC,EAAoC;AAClC,MAAIc,GAAJ;;AACA,UAAQvB,IAAR;AACE,SAAK,MAAL;AACEuB,MAAAA,GAAG,GAAGD,KAAK,CAACN,MAAN,CAAaQ,CAAC,IAAIA,CAAC,CAACC,OAAF,CAAUP,KAAV,CAAgB,YAAhB,CAAlB,CAAN;AACA;;AACF,SAAK,YAAL;AACEK,MAAAA,GAAG,GAAGD,KAAK,CAACN,MAAN,CAAaQ,CAAC,IAAIA,CAAC,CAACC,OAAF,CAAUP,KAAV,CAAgB,kBAAhB,KAAuC,CAACM,CAAC,CAACE,KAAF,CAAQR,KAAR,CAAc,UAAd,CAA1D,CAAN;AACA;;AACF;AACEK,MAAAA,GAAG,GAAGD,KAAN;AARJ;;AAUA,MAAGb,CAAC,KAAKkB,SAAT,EAAoB;AAClB,WAAOJ,GAAG,CAACd,CAAD,CAAH,IAAUc,GAAjB;AACD;;AACD,SAAOA,GAAP;AACD",
      "sourceRoot": "/Users/new_name/Desktop/british translator/routes/",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\n'use strict';\n\nconst cors = require('cors');\nconst fs = require('fs');\nconst runner = require('../test-runner');\n\nmodule.exports = function (app) {\n\n  app.route('/_api/server.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/server.js', function(err, data) {\n        if(err) return next(err);\n        res.send(data.toString());\n      });\n    });\n  app.route('/_api/routes/api.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/routes/api.js', function(err, data) {\n        if(err) return next(err);\n        res.type('txt').send(data.toString());\n      });\n    });\n  app.route('/_api/controllers/convertHandler.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/controllers/convertHandler.js', function(err, data) {\n        if(err) return next(err);\n        res.type('txt').send(data.toString());\n      });\n    });\n\n  app.get('/_api/get-tests', cors(), function(req, res, next){\n    console.log('requested');\n    if(process.env.NODE_ENV === 'test') return next();\n    res.json({status: 'unavailable'});\n  },\n  function(req, res, next){\n    if(!runner.report) return next();\n    res.json(testFilter(runner.report, req.query.type, req.query.n));\n  },\n  function(req, res){\n    runner.on('done', function(report){\n      process.nextTick(() =>  res.json(testFilter(runner.report, req.query.type, req.query.n)));\n    });\n  });\n  app.get('/_api/app-info', function(req, res) {\n    let hs = Object.keys(res._headers)\n      .filter(h => !h.match(/^access-control-\\w+/));\n    let hObj = {};\n    hs.forEach(h => {hObj[h] = res._headers[h]});\n    delete res._headers['strict-transport-security'];\n    res.json({headers: hObj});\n  });\n  \n};\n\nfunction testFilter(tests, type, n) {\n  let out;\n  switch (type) {\n    case 'unit' :\n      out = tests.filter(t => t.context.match('Unit Tests'));\n      break;\n    case 'functional':\n      out = tests.filter(t => t.context.match('Functional Tests') && !t.title.match('#example'));\n      break;\n    default:\n      out = tests;\n  }\n  if(n !== undefined) {\n    return out[n] || out;\n  }\n  return out;\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1705335515274
  },
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/test-runner.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/test-runner.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/test-runner.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/test-runner.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/",
        "sourceFileName": "test-runner.js"
      }
    },
    "ast": null,
    "code": "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\nconst analyser = require('./assertion-analyser');\n\nconst EventEmitter = require('events').EventEmitter;\n\nconst Mocha = require('mocha'),\n      fs = require('fs'),\n      path = require('path');\n\nrequire(\"@babel/register\");\n\nconst mocha = new Mocha({\n  timeout: 5000\n});\nconst testDir = './tests'; // Add each .js file to the mocha instance\n\nfs.readdirSync(testDir).filter(function (file) {\n  // Only keep the .js files\n  return file.substr(-3) === '.js';\n}).forEach(function (file) {\n  mocha.addFile(path.join(testDir, file));\n});\nlet emitter = new EventEmitter();\n\nemitter.run = function () {\n  let tests = [];\n  let context = \"\";\n  let separator = ' -> '; // Run the tests.\n\n  try {\n    let runner = mocha.ui('tdd').run().on('test end', function (test) {\n      // remove comments\n      let body = test.body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, ''); // collapse spaces\n\n      body = body.replace(/\\s+/g, ' ');\n      let obj = {\n        title: test.title,\n        context: context.slice(0, -separator.length),\n        state: test.state,\n        // body: body,\n        assertions: analyser(body)\n      };\n      tests.push(obj);\n    }).on('end', function () {\n      emitter.report = tests;\n      emitter.emit('done', tests);\n    }).on('suite', function (s) {\n      context += s.title + separator;\n    }).on('suite end', function (s) {\n      context = context.slice(0, -(s.title.length + separator.length));\n    });\n  } catch (e) {\n    throw e;\n  }\n};\n\nmodule.exports = emitter;\n/*\n * Mocha.runner Events:\n * can be used to build a better custom report\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QtcnVubmVyLmpzIl0sIm5hbWVzIjpbImFuYWx5c2VyIiwicmVxdWlyZSIsIkV2ZW50RW1pdHRlciIsIk1vY2hhIiwiZnMiLCJwYXRoIiwibW9jaGEiLCJ0aW1lb3V0IiwidGVzdERpciIsInJlYWRkaXJTeW5jIiwiZmlsdGVyIiwiZmlsZSIsInN1YnN0ciIsImZvckVhY2giLCJhZGRGaWxlIiwiam9pbiIsImVtaXR0ZXIiLCJydW4iLCJ0ZXN0cyIsImNvbnRleHQiLCJzZXBhcmF0b3IiLCJydW5uZXIiLCJ1aSIsIm9uIiwidGVzdCIsImJvZHkiLCJyZXBsYWNlIiwib2JqIiwidGl0bGUiLCJzbGljZSIsImxlbmd0aCIsInN0YXRlIiwiYXNzZXJ0aW9ucyIsInB1c2giLCJyZXBvcnQiLCJlbWl0IiwicyIsImUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsc0JBQUQsQ0FBeEI7O0FBQ0EsTUFBTUMsWUFBWSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxZQUF2Qzs7QUFFQSxNQUFNQyxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxPQUFELENBQXJCO0FBQUEsTUFDSUcsRUFBRSxHQUFHSCxPQUFPLENBQUMsSUFBRCxDQURoQjtBQUFBLE1BRUlJLElBQUksR0FBR0osT0FBTyxDQUFDLE1BQUQsQ0FGbEI7O0FBR0lBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQOztBQUVKLE1BQU1LLEtBQUssR0FBRyxJQUFJSCxLQUFKLENBQVU7QUFBRUksRUFBQUEsT0FBTyxFQUFFO0FBQVgsQ0FBVixDQUFkO0FBQ0EsTUFBTUMsT0FBTyxHQUFHLFNBQWhCLEMsQ0FHQTs7QUFDQUosRUFBRSxDQUFDSyxXQUFILENBQWVELE9BQWYsRUFBd0JFLE1BQXhCLENBQStCLFVBQVNDLElBQVQsRUFBYztBQUN6QztBQUNBLFNBQU9BLElBQUksQ0FBQ0MsTUFBTCxDQUFZLENBQUMsQ0FBYixNQUFvQixLQUEzQjtBQUVILENBSkQsRUFJR0MsT0FKSCxDQUlXLFVBQVNGLElBQVQsRUFBYztBQUNyQkwsRUFBQUEsS0FBSyxDQUFDUSxPQUFOLENBQ0lULElBQUksQ0FBQ1UsSUFBTCxDQUFVUCxPQUFWLEVBQW1CRyxJQUFuQixDQURKO0FBR0gsQ0FSRDtBQVVBLElBQUlLLE9BQU8sR0FBRyxJQUFJZCxZQUFKLEVBQWQ7O0FBQ0FjLE9BQU8sQ0FBQ0MsR0FBUixHQUFjLFlBQVc7QUFFdkIsTUFBSUMsS0FBSyxHQUFHLEVBQVo7QUFDQSxNQUFJQyxPQUFPLEdBQUcsRUFBZDtBQUNBLE1BQUlDLFNBQVMsR0FBRyxNQUFoQixDQUp1QixDQUt2Qjs7QUFDQSxNQUFJO0FBQ0osUUFBSUMsTUFBTSxHQUFHZixLQUFLLENBQUNnQixFQUFOLENBQVMsS0FBVCxFQUFnQkwsR0FBaEIsR0FDVk0sRUFEVSxDQUNQLFVBRE8sRUFDSyxVQUFTQyxJQUFULEVBQWU7QUFDM0I7QUFDQSxVQUFJQyxJQUFJLEdBQUdELElBQUksQ0FBQ0MsSUFBTCxDQUFVQyxPQUFWLENBQWtCLHNCQUFsQixFQUEwQyxFQUExQyxDQUFYLENBRjJCLENBRzNCOztBQUNBRCxNQUFBQSxJQUFJLEdBQUdBLElBQUksQ0FBQ0MsT0FBTCxDQUFhLE1BQWIsRUFBb0IsR0FBcEIsQ0FBUDtBQUNBLFVBQUlDLEdBQUcsR0FBRztBQUNSQyxRQUFBQSxLQUFLLEVBQUVKLElBQUksQ0FBQ0ksS0FESjtBQUVSVCxRQUFBQSxPQUFPLEVBQUVBLE9BQU8sQ0FBQ1UsS0FBUixDQUFjLENBQWQsRUFBaUIsQ0FBQ1QsU0FBUyxDQUFDVSxNQUE1QixDQUZEO0FBR1JDLFFBQUFBLEtBQUssRUFBRVAsSUFBSSxDQUFDTyxLQUhKO0FBSVI7QUFDQUMsUUFBQUEsVUFBVSxFQUFFaEMsUUFBUSxDQUFDeUIsSUFBRDtBQUxaLE9BQVY7QUFPQVAsTUFBQUEsS0FBSyxDQUFDZSxJQUFOLENBQVdOLEdBQVg7QUFDSCxLQWRVLEVBZVZKLEVBZlUsQ0FlUCxLQWZPLEVBZUEsWUFBVztBQUNsQlAsTUFBQUEsT0FBTyxDQUFDa0IsTUFBUixHQUFpQmhCLEtBQWpCO0FBQ0FGLE1BQUFBLE9BQU8sQ0FBQ21CLElBQVIsQ0FBYSxNQUFiLEVBQXFCakIsS0FBckI7QUFDSCxLQWxCVSxFQW1CVkssRUFuQlUsQ0FtQlAsT0FuQk8sRUFtQkUsVUFBU2EsQ0FBVCxFQUFZO0FBQ3ZCakIsTUFBQUEsT0FBTyxJQUFLaUIsQ0FBQyxDQUFDUixLQUFGLEdBQVVSLFNBQXRCO0FBRUQsS0F0QlUsRUF1QlZHLEVBdkJVLENBdUJQLFdBdkJPLEVBdUJNLFVBQVNhLENBQVQsRUFBWTtBQUMzQmpCLE1BQUFBLE9BQU8sR0FBR0EsT0FBTyxDQUFDVSxLQUFSLENBQWMsQ0FBZCxFQUFpQixFQUFFTyxDQUFDLENBQUNSLEtBQUYsQ0FBUUUsTUFBUixHQUFpQlYsU0FBUyxDQUFDVSxNQUE3QixDQUFqQixDQUFWO0FBQ0QsS0F6QlUsQ0FBYjtBQTBCQyxHQTNCRCxDQTJCRSxPQUFNTyxDQUFOLEVBQVM7QUFDVCxVQUFNQSxDQUFOO0FBQ0Q7QUFDRixDQXBDRDs7QUFzQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnZCLE9BQWpCO0FBRUEiLCJzb3VyY2VSb290IjoiL1VzZXJzL25ld19uYW1lL0Rlc2t0b3AvYnJpdGlzaCB0cmFuc2xhdG9yLyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qICAgICAgIERPIE5PVCBFRElUIFRISVMgRklMRVxuKiAgICAgICBGb3IgRkNDIHRlc3RpbmcgcHVycG9zZXMhXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qL1xuXG5jb25zdCBhbmFseXNlciA9IHJlcXVpcmUoJy4vYXNzZXJ0aW9uLWFuYWx5c2VyJyk7XG5jb25zdCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7XG5cbmNvbnN0IE1vY2hhID0gcmVxdWlyZSgnbW9jaGEnKSxcbiAgICBmcyA9IHJlcXVpcmUoJ2ZzJyksXG4gICAgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbiAgICByZXF1aXJlKFwiQGJhYmVsL3JlZ2lzdGVyXCIpO1xuXG5jb25zdCBtb2NoYSA9IG5ldyBNb2NoYSh7IHRpbWVvdXQ6IDUwMDAgfSk7XG5jb25zdCB0ZXN0RGlyID0gJy4vdGVzdHMnXG5cblxuLy8gQWRkIGVhY2ggLmpzIGZpbGUgdG8gdGhlIG1vY2hhIGluc3RhbmNlXG5mcy5yZWFkZGlyU3luYyh0ZXN0RGlyKS5maWx0ZXIoZnVuY3Rpb24oZmlsZSl7XG4gICAgLy8gT25seSBrZWVwIHRoZSAuanMgZmlsZXNcbiAgICByZXR1cm4gZmlsZS5zdWJzdHIoLTMpID09PSAnLmpzJztcblxufSkuZm9yRWFjaChmdW5jdGlvbihmaWxlKXtcbiAgICBtb2NoYS5hZGRGaWxlKFxuICAgICAgICBwYXRoLmpvaW4odGVzdERpciwgZmlsZSlcbiAgICApO1xufSk7XG5cbmxldCBlbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuZW1pdHRlci5ydW4gPSBmdW5jdGlvbigpIHtcblxuICBsZXQgdGVzdHMgPSBbXTtcbiAgbGV0IGNvbnRleHQgPSBcIlwiO1xuICBsZXQgc2VwYXJhdG9yID0gJyAtPiAnO1xuICAvLyBSdW4gdGhlIHRlc3RzLlxuICB0cnkge1xuICBsZXQgcnVubmVyID0gbW9jaGEudWkoJ3RkZCcpLnJ1bigpXG4gICAgLm9uKCd0ZXN0IGVuZCcsIGZ1bmN0aW9uKHRlc3QpIHtcbiAgICAgICAgLy8gcmVtb3ZlIGNvbW1lbnRzXG4gICAgICAgIGxldCBib2R5ID0gdGVzdC5ib2R5LnJlcGxhY2UoL1xcL1xcLy4qXFxufFxcL1xcKi4qXFwqXFwvL2csICcnKTtcbiAgICAgICAgLy8gY29sbGFwc2Ugc3BhY2VzXG4gICAgICAgIGJvZHkgPSBib2R5LnJlcGxhY2UoL1xccysvZywnICcpO1xuICAgICAgICBsZXQgb2JqID0ge1xuICAgICAgICAgIHRpdGxlOiB0ZXN0LnRpdGxlLFxuICAgICAgICAgIGNvbnRleHQ6IGNvbnRleHQuc2xpY2UoMCwgLXNlcGFyYXRvci5sZW5ndGgpLFxuICAgICAgICAgIHN0YXRlOiB0ZXN0LnN0YXRlLFxuICAgICAgICAgIC8vIGJvZHk6IGJvZHksXG4gICAgICAgICAgYXNzZXJ0aW9uczogYW5hbHlzZXIoYm9keSlcbiAgICAgICAgfTtcbiAgICAgICAgdGVzdHMucHVzaChvYmopO1xuICAgIH0pXG4gICAgLm9uKCdlbmQnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgZW1pdHRlci5yZXBvcnQgPSB0ZXN0cztcbiAgICAgICAgZW1pdHRlci5lbWl0KCdkb25lJywgdGVzdHMpXG4gICAgfSlcbiAgICAub24oJ3N1aXRlJywgZnVuY3Rpb24ocykge1xuICAgICAgY29udGV4dCArPSAocy50aXRsZSArIHNlcGFyYXRvcik7XG5cbiAgICB9KVxuICAgIC5vbignc3VpdGUgZW5kJywgZnVuY3Rpb24ocykge1xuICAgICAgY29udGV4dCA9IGNvbnRleHQuc2xpY2UoMCwgLShzLnRpdGxlLmxlbmd0aCArIHNlcGFyYXRvci5sZW5ndGgpKVxuICAgIH0pXG4gIH0gY2F0Y2goZSkge1xuICAgIHRocm93KGUpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVtaXR0ZXI7XG5cbi8qXG4gKiBNb2NoYS5ydW5uZXIgRXZlbnRzOlxuICogY2FuIGJlIHVzZWQgdG8gYnVpbGQgYSBiZXR0ZXIgY3VzdG9tIHJlcG9ydFxuICpcbiAqICAgLSBgc3RhcnRgICBleGVjdXRpb24gc3RhcnRlZFxuICogICAtIGBlbmRgICBleGVjdXRpb24gY29tcGxldGVcbiAqICAgLSBgc3VpdGVgICAoc3VpdGUpIHRlc3Qgc3VpdGUgZXhlY3V0aW9uIHN0YXJ0ZWRcbiAqICAgLSBgc3VpdGUgZW5kYCAgKHN1aXRlKSBhbGwgdGVzdHMgKGFuZCBzdWItc3VpdGVzKSBoYXZlIGZpbmlzaGVkXG4gKiAgIC0gYHRlc3RgICAodGVzdCkgdGVzdCBleGVjdXRpb24gc3RhcnRlZFxuICogICAtIGB0ZXN0IGVuZGAgICh0ZXN0KSB0ZXN0IGNvbXBsZXRlZFxuICogICAtIGBob29rYCAgKGhvb2spIGhvb2sgZXhlY3V0aW9uIHN0YXJ0ZWRcbiAqICAgLSBgaG9vayBlbmRgICAoaG9vaykgaG9vayBjb21wbGV0ZVxuICogICAtIGBwYXNzYCAgKHRlc3QpIHRlc3QgcGFzc2VkXG4gKiAgIC0gYGZhaWxgICAodGVzdCwgZXJyKSB0ZXN0IGZhaWxlZFxuICogICAtIGBwZW5kaW5nYCAgKHRlc3QpIHRlc3QgcGVuZGluZ1xuICovIl19",
    "map": {
      "version": 3,
      "sources": [
        "test-runner.js"
      ],
      "names": [
        "analyser",
        "require",
        "EventEmitter",
        "Mocha",
        "fs",
        "path",
        "mocha",
        "timeout",
        "testDir",
        "readdirSync",
        "filter",
        "file",
        "substr",
        "forEach",
        "addFile",
        "join",
        "emitter",
        "run",
        "tests",
        "context",
        "separator",
        "runner",
        "ui",
        "on",
        "test",
        "body",
        "replace",
        "obj",
        "title",
        "slice",
        "length",
        "state",
        "assertions",
        "push",
        "report",
        "emit",
        "s",
        "e",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,YAAvC;;AAEA,MAAMC,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;AAAA,MACIG,EAAE,GAAGH,OAAO,CAAC,IAAD,CADhB;AAAA,MAEII,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAFlB;;AAGIA,OAAO,CAAC,iBAAD,CAAP;;AAEJ,MAAMK,KAAK,GAAG,IAAIH,KAAJ,CAAU;AAAEI,EAAAA,OAAO,EAAE;AAAX,CAAV,CAAd;AACA,MAAMC,OAAO,GAAG,SAAhB,C,CAGA;;AACAJ,EAAE,CAACK,WAAH,CAAeD,OAAf,EAAwBE,MAAxB,CAA+B,UAASC,IAAT,EAAc;AACzC;AACA,SAAOA,IAAI,CAACC,MAAL,CAAY,CAAC,CAAb,MAAoB,KAA3B;AAEH,CAJD,EAIGC,OAJH,CAIW,UAASF,IAAT,EAAc;AACrBL,EAAAA,KAAK,CAACQ,OAAN,CACIT,IAAI,CAACU,IAAL,CAAUP,OAAV,EAAmBG,IAAnB,CADJ;AAGH,CARD;AAUA,IAAIK,OAAO,GAAG,IAAId,YAAJ,EAAd;;AACAc,OAAO,CAACC,GAAR,GAAc,YAAW;AAEvB,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,SAAS,GAAG,MAAhB,CAJuB,CAKvB;;AACA,MAAI;AACJ,QAAIC,MAAM,GAAGf,KAAK,CAACgB,EAAN,CAAS,KAAT,EAAgBL,GAAhB,GACVM,EADU,CACP,UADO,EACK,UAASC,IAAT,EAAe;AAC3B;AACA,UAAIC,IAAI,GAAGD,IAAI,CAACC,IAAL,CAAUC,OAAV,CAAkB,sBAAlB,EAA0C,EAA1C,CAAX,CAF2B,CAG3B;;AACAD,MAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAoB,GAApB,CAAP;AACA,UAAIC,GAAG,GAAG;AACRC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KADJ;AAERT,QAAAA,OAAO,EAAEA,OAAO,CAACU,KAAR,CAAc,CAAd,EAAiB,CAACT,SAAS,CAACU,MAA5B,CAFD;AAGRC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAHJ;AAIR;AACAC,QAAAA,UAAU,EAAEhC,QAAQ,CAACyB,IAAD;AALZ,OAAV;AAOAP,MAAAA,KAAK,CAACe,IAAN,CAAWN,GAAX;AACH,KAdU,EAeVJ,EAfU,CAeP,KAfO,EAeA,YAAW;AAClBP,MAAAA,OAAO,CAACkB,MAAR,GAAiBhB,KAAjB;AACAF,MAAAA,OAAO,CAACmB,IAAR,CAAa,MAAb,EAAqBjB,KAArB;AACH,KAlBU,EAmBVK,EAnBU,CAmBP,OAnBO,EAmBE,UAASa,CAAT,EAAY;AACvBjB,MAAAA,OAAO,IAAKiB,CAAC,CAACR,KAAF,GAAUR,SAAtB;AAED,KAtBU,EAuBVG,EAvBU,CAuBP,WAvBO,EAuBM,UAASa,CAAT,EAAY;AAC3BjB,MAAAA,OAAO,GAAGA,OAAO,CAACU,KAAR,CAAc,CAAd,EAAiB,EAAEO,CAAC,CAACR,KAAF,CAAQE,MAAR,GAAiBV,SAAS,CAACU,MAA7B,CAAjB,CAAV;AACD,KAzBU,CAAb;AA0BC,GA3BD,CA2BE,OAAMO,CAAN,EAAS;AACT,UAAMA,CAAN;AACD;AACF,CApCD;;AAsCAC,MAAM,CAACC,OAAP,GAAiBvB,OAAjB;AAEA",
      "sourceRoot": "/Users/new_name/Desktop/british translator/",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nconst analyser = require('./assertion-analyser');\nconst EventEmitter = require('events').EventEmitter;\n\nconst Mocha = require('mocha'),\n    fs = require('fs'),\n    path = require('path');\n    require(\"@babel/register\");\n\nconst mocha = new Mocha({ timeout: 5000 });\nconst testDir = './tests'\n\n\n// Add each .js file to the mocha instance\nfs.readdirSync(testDir).filter(function(file){\n    // Only keep the .js files\n    return file.substr(-3) === '.js';\n\n}).forEach(function(file){\n    mocha.addFile(\n        path.join(testDir, file)\n    );\n});\n\nlet emitter = new EventEmitter();\nemitter.run = function() {\n\n  let tests = [];\n  let context = \"\";\n  let separator = ' -> ';\n  // Run the tests.\n  try {\n  let runner = mocha.ui('tdd').run()\n    .on('test end', function(test) {\n        // remove comments\n        let body = test.body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n        // collapse spaces\n        body = body.replace(/\\s+/g,' ');\n        let obj = {\n          title: test.title,\n          context: context.slice(0, -separator.length),\n          state: test.state,\n          // body: body,\n          assertions: analyser(body)\n        };\n        tests.push(obj);\n    })\n    .on('end', function() {\n        emitter.report = tests;\n        emitter.emit('done', tests)\n    })\n    .on('suite', function(s) {\n      context += (s.title + separator);\n\n    })\n    .on('suite end', function(s) {\n      context = context.slice(0, -(s.title.length + separator.length))\n    })\n  } catch(e) {\n    throw(e);\n  }\n};\n\nmodule.exports = emitter;\n\n/*\n * Mocha.runner Events:\n * can be used to build a better custom report\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n */"
      ]
    },
    "sourceType": "module",
    "mtime": 1705335515275
  },
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/assertion-analyser.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/assertion-analyser.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/assertion-analyser.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/assertion-analyser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/",
        "sourceFileName": "assertion-analyser.js"
      }
    },
    "ast": null,
    "code": "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\nfunction objParser(str, init) {\n  // finds objects, arrays, strings, and function arguments\n  // between parens, because they may contain ','\n  let openSym = ['[', '{', '\"', \"'\", '('];\n  let closeSym = [']', '}', '\"', \"'\", ')'];\n  let type;\n  let i;\n\n  for (i = init || 0; i < str.length; i++) {\n    type = openSym.indexOf(str[i]);\n    if (type !== -1) break;\n  }\n\n  if (type === -1) return null;\n  let open = openSym[type];\n  let close = closeSym[type];\n  let count = 1;\n  let k;\n\n  for (k = i + 1; k < str.length; k++) {\n    if (open === '\"' || open === \"'\") {\n      if (str[k] === close) count--;\n      if (str[k] === '\\\\') k++;\n    } else {\n      if (str[k] === open) count++;\n      if (str[k] === close) count--;\n    }\n\n    if (count === 0) break;\n  }\n\n  if (count !== 0) return null;\n  let obj = str.slice(i, k + 1);\n  return {\n    start: i,\n    end: k,\n    obj: obj\n  };\n}\n\nfunction replacer(str) {\n  // replace objects with a symbol ( __#n)\n  let obj;\n  let cnt = 0;\n  let data = [];\n\n  while (obj = objParser(str)) {\n    data[cnt] = obj.obj;\n    str = str.substring(0, obj.start) + '__#' + cnt++ + str.substring(obj.end + 1);\n  }\n\n  return {\n    str: str,\n    dictionary: data\n  };\n}\n\nfunction splitter(str) {\n  // split on commas, then restore the objects\n  let strObj = replacer(str);\n  let args = strObj.str.split(',');\n  args = args.map(function (a) {\n    let m = a.match(/__#(\\d+)/);\n\n    while (m) {\n      a = a.replace(/__#(\\d+)/, strObj.dictionary[m[1]]);\n      m = a.match(/__#(\\d+)/);\n    }\n\n    return a.trim();\n  });\n  return args;\n}\n\nfunction assertionAnalyser(body) {\n  // already filtered in the test runner\n  // // remove comments\n  // body = body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n  // // get test function body\n  // body = body.match(/\\{\\s*([\\s\\S]*)\\}\\s*$/)[1];\n  if (!body) return \"invalid assertion\"; // replace assertions bodies, so that they cannot\n  // contain the word 'assertion'\n\n  let cleanedBody = body.match(/(?:browser\\s*\\.\\s*)?assert\\s*\\.\\s*\\w*\\([\\s\\S]*\\)/);\n\n  if (cleanedBody && Array.isArray(cleanedBody)) {\n    body = cleanedBody[0];\n  } else {\n    // No assertions present\n    return [];\n  }\n\n  let s = replacer(body); // split on 'assertion'\n\n  let splittedAssertions = s.str.split('assert');\n  let assertions = splittedAssertions.slice(1); // match the METHODS\n\n  let assertionBodies = [];\n  let methods = assertions.map(function (a, i) {\n    let m = a.match(/^\\s*\\.\\s*(\\w+)__#(\\d+)/);\n    assertionBodies.push(parseInt(m[2]));\n    let pre = splittedAssertions[i].match(/browser\\s*\\.\\s*/) ? 'browser.' : '';\n    return pre + m[1];\n  });\n  if (methods.some(function (m) {\n    return !m;\n  })) return \"invalid assertion\"; // remove parens from the assertions bodies\n\n  let bodies = assertionBodies.map(function (b) {\n    return s.dictionary[b].slice(1, -1).trim();\n  });\n  assertions = methods.map(function (m, i) {\n    return {\n      method: m,\n      args: splitter(bodies[i]) //replace objects, split on ',' ,then restore objects\n\n    };\n  });\n  return assertions;\n}\n\nmodule.exports = assertionAnalyser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "assertion-analyser.js"
      ],
      "names": [
        "objParser",
        "str",
        "init",
        "openSym",
        "closeSym",
        "type",
        "i",
        "length",
        "indexOf",
        "open",
        "close",
        "count",
        "k",
        "obj",
        "slice",
        "start",
        "end",
        "replacer",
        "cnt",
        "data",
        "substring",
        "dictionary",
        "splitter",
        "strObj",
        "args",
        "split",
        "map",
        "a",
        "m",
        "match",
        "replace",
        "trim",
        "assertionAnalyser",
        "body",
        "cleanedBody",
        "Array",
        "isArray",
        "s",
        "splittedAssertions",
        "assertions",
        "assertionBodies",
        "methods",
        "push",
        "parseInt",
        "pre",
        "some",
        "bodies",
        "b",
        "method",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAASA,SAAT,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AAC5B;AACA;AACA,MAAIC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAd;AACA,MAAIC,QAAQ,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAf;AACA,MAAIC,IAAJ;AACA,MAAIC,CAAJ;;AACA,OAAIA,CAAC,GAAIJ,IAAI,IAAI,CAAjB,EAAqBI,CAAC,GAAGL,GAAG,CAACM,MAA7B,EAAqCD,CAAC,EAAtC,EAA2C;AACzCD,IAAAA,IAAI,GAAGF,OAAO,CAACK,OAAR,CAAgBP,GAAG,CAACK,CAAD,CAAnB,CAAP;AACA,QAAID,IAAI,KAAK,CAAC,CAAd,EAAkB;AACnB;;AACD,MAAIA,IAAI,KAAK,CAAC,CAAd,EAAiB,OAAO,IAAP;AACjB,MAAII,IAAI,GAAGN,OAAO,CAACE,IAAD,CAAlB;AACA,MAAIK,KAAK,GAAGN,QAAQ,CAACC,IAAD,CAApB;AACA,MAAIM,KAAK,GAAG,CAAZ;AACA,MAAIC,CAAJ;;AACA,OAAIA,CAAC,GAAGN,CAAC,GAAC,CAAV,EAAaM,CAAC,GAAGX,GAAG,CAACM,MAArB,EAA6BK,CAAC,EAA9B,EAAkC;AAChC,QAAGH,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,GAA5B,EAAiC;AAC/B,UAAGR,GAAG,CAACW,CAAD,CAAH,KAAWF,KAAd,EAAqBC,KAAK;AAC1B,UAAGV,GAAG,CAACW,CAAD,CAAH,KAAW,IAAd,EAAoBA,CAAC;AACtB,KAHD,MAGO;AACL,UAAGX,GAAG,CAACW,CAAD,CAAH,KAAWH,IAAd,EAAoBE,KAAK;AACzB,UAAGV,GAAG,CAACW,CAAD,CAAH,KAAWF,KAAd,EAAqBC,KAAK;AAC3B;;AACD,QAAGA,KAAK,KAAK,CAAb,EAAgB;AACjB;;AACD,MAAGA,KAAK,KAAK,CAAb,EAAgB,OAAO,IAAP;AAChB,MAAIE,GAAG,GAAGZ,GAAG,CAACa,KAAJ,CAAUR,CAAV,EAAaM,CAAC,GAAC,CAAf,CAAV;AACA,SAAO;AACLG,IAAAA,KAAK,EAAGT,CADH;AAELU,IAAAA,GAAG,EAAEJ,CAFA;AAGLC,IAAAA,GAAG,EAAEA;AAHA,GAAP;AAKD;;AAED,SAASI,QAAT,CAAkBhB,GAAlB,EAAuB;AACrB;AACA,MAAIY,GAAJ;AACA,MAAIK,GAAG,GAAG,CAAV;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,SAAMN,GAAG,GAAGb,SAAS,CAACC,GAAD,CAArB,EAA4B;AAC1BkB,IAAAA,IAAI,CAACD,GAAD,CAAJ,GAAYL,GAAG,CAACA,GAAhB;AACAZ,IAAAA,GAAG,GAAGA,GAAG,CAACmB,SAAJ,CAAc,CAAd,EAAiBP,GAAG,CAACE,KAArB,IAA8B,KAA9B,GAAsCG,GAAG,EAAzC,GAA8CjB,GAAG,CAACmB,SAAJ,CAAcP,GAAG,CAACG,GAAJ,GAAQ,CAAtB,CAApD;AACD;;AACD,SAAO;AACLf,IAAAA,GAAG,EAAGA,GADD;AAELoB,IAAAA,UAAU,EAAGF;AAFR,GAAP;AAID;;AAED,SAASG,QAAT,CAAkBrB,GAAlB,EAAuB;AACrB;AACA,MAAIsB,MAAM,GAAGN,QAAQ,CAAChB,GAAD,CAArB;AACA,MAAIuB,IAAI,GAAGD,MAAM,CAACtB,GAAP,CAAWwB,KAAX,CAAiB,GAAjB,CAAX;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACE,GAAL,CAAS,UAASC,CAAT,EAAW;AACzB,QAAIC,CAAC,GAAGD,CAAC,CAACE,KAAF,CAAQ,UAAR,CAAR;;AACA,WAAOD,CAAP,EAAU;AACRD,MAAAA,CAAC,GAAGA,CAAC,CAACG,OAAF,CAAU,UAAV,EAAsBP,MAAM,CAACF,UAAP,CAAkBO,CAAC,CAAC,CAAD,CAAnB,CAAtB,CAAJ;AACAA,MAAAA,CAAC,GAAGD,CAAC,CAACE,KAAF,CAAQ,UAAR,CAAJ;AACD;;AACD,WAAOF,CAAC,CAACI,IAAF,EAAP;AACD,GAPM,CAAP;AAQA,SAAOP,IAAP;AACD;;AAED,SAASQ,iBAAT,CAA2BC,IAA3B,EAAiC;AAE/B;AACA;AACA;AACA;AACA;AAEA,MAAG,CAACA,IAAJ,EAAU,OAAO,mBAAP,CARqB,CAS/B;AACA;;AAEA,MAAIC,WAAW,GAAGD,IAAI,CAACJ,KAAL,CAAW,kDAAX,CAAlB;;AACA,MAAGK,WAAW,IAAIC,KAAK,CAACC,OAAN,CAAcF,WAAd,CAAlB,EAA8C;AAC5CD,IAAAA,IAAI,GAAGC,WAAW,CAAC,CAAD,CAAlB;AACD,GAFD,MAEO;AACL;AACA,WAAO,EAAP;AACD;;AACD,MAAIG,CAAC,GAAGpB,QAAQ,CAACgB,IAAD,CAAhB,CAnB+B,CAoB/B;;AACA,MAAIK,kBAAkB,GAAGD,CAAC,CAACpC,GAAF,CAAMwB,KAAN,CAAY,QAAZ,CAAzB;AACA,MAAIc,UAAU,GAAGD,kBAAkB,CAACxB,KAAnB,CAAyB,CAAzB,CAAjB,CAtB+B,CAuB/B;;AAEA,MAAI0B,eAAe,GAAG,EAAtB;AACA,MAAIC,OAAO,GAAGF,UAAU,CAACb,GAAX,CAAe,UAASC,CAAT,EAAYrB,CAAZ,EAAc;AACzC,QAAIsB,CAAC,GAAGD,CAAC,CAACE,KAAF,CAAQ,wBAAR,CAAR;AACAW,IAAAA,eAAe,CAACE,IAAhB,CAAqBC,QAAQ,CAACf,CAAC,CAAC,CAAD,CAAF,CAA7B;AACA,QAAIgB,GAAG,GAAGN,kBAAkB,CAAChC,CAAD,CAAlB,CAAsBuB,KAAtB,CAA4B,iBAA5B,IAAiD,UAAjD,GAA8D,EAAxE;AACA,WAAOe,GAAG,GAAGhB,CAAC,CAAC,CAAD,CAAd;AACD,GALa,CAAd;AAMA,MAAGa,OAAO,CAACI,IAAR,CAAa,UAASjB,CAAT,EAAW;AAAE,WAAO,CAACA,CAAR;AAAW,GAArC,CAAH,EAA2C,OAAO,mBAAP,CAhCZ,CAiC/B;;AACA,MAAIkB,MAAM,GAAGN,eAAe,CAACd,GAAhB,CAAoB,UAASqB,CAAT,EAAW;AAC1C,WAAOV,CAAC,CAAChB,UAAF,CAAa0B,CAAb,EAAgBjC,KAAhB,CAAsB,CAAtB,EAAwB,CAAC,CAAzB,EAA4BiB,IAA5B,EAAP;AACD,GAFY,CAAb;AAGAQ,EAAAA,UAAU,GAAGE,OAAO,CAACf,GAAR,CAAY,UAASE,CAAT,EAAYtB,CAAZ,EAAe;AACtC,WAAO;AACL0C,MAAAA,MAAM,EAAEpB,CADH;AAELJ,MAAAA,IAAI,EAAEF,QAAQ,CAACwB,MAAM,CAACxC,CAAD,CAAP,CAFT,CAEqB;;AAFrB,KAAP;AAID,GALY,CAAb;AAMA,SAAOiC,UAAP;AACD;;AAEDU,MAAM,CAACC,OAAP,GAAiBlB,iBAAjB",
      "sourceRoot": "/Users/new_name/Desktop/british translator/",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nfunction objParser(str, init) {\n  // finds objects, arrays, strings, and function arguments\n  // between parens, because they may contain ','\n  let openSym = ['[', '{', '\"', \"'\", '('];\n  let closeSym = [']', '}', '\"', \"'\", ')'];\n  let type;\n  let i;\n  for(i = (init || 0); i < str.length; i++ ) {\n    type = openSym.indexOf(str[i]);\n    if( type !== -1)  break;\n  }\n  if (type === -1) return null;\n  let open = openSym[type];\n  let close = closeSym[type];\n  let count = 1;\n  let k;\n  for(k = i+1; k < str.length; k++) {\n    if(open === '\"' || open === \"'\") {\n      if(str[k] === close) count--;\n      if(str[k] === '\\\\') k++;\n    } else {\n      if(str[k] === open) count++;\n      if(str[k] === close) count--;\n    }\n    if(count === 0) break;\n  }\n  if(count !== 0) return null;\n  let obj = str.slice(i, k+1);\n  return {\n    start : i,\n    end: k,\n    obj: obj\n  };\n}\n\nfunction replacer(str) {\n  // replace objects with a symbol ( __#n)\n  let obj;\n  let cnt = 0;\n  let data = [];\n  while(obj = objParser(str)) {\n    data[cnt] = obj.obj;\n    str = str.substring(0, obj.start) + '__#' + cnt++ + str.substring(obj.end+1)\n  }\n  return {\n    str : str,\n    dictionary : data\n  }\n}\n\nfunction splitter(str) {\n  // split on commas, then restore the objects\n  let strObj = replacer(str);\n  let args = strObj.str.split(',');\n  args = args.map(function(a){\n    let m = a.match(/__#(\\d+)/);\n    while (m) {\n      a = a.replace(/__#(\\d+)/, strObj.dictionary[m[1]]);\n      m = a.match(/__#(\\d+)/);\n    }\n    return a.trim();\n  })\n  return args;\n}\n\nfunction assertionAnalyser(body) {\n  \n  // already filtered in the test runner\n  // // remove comments\n  // body = body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n  // // get test function body\n  // body = body.match(/\\{\\s*([\\s\\S]*)\\}\\s*$/)[1];\n  \n  if(!body) return \"invalid assertion\";\n  // replace assertions bodies, so that they cannot\n  // contain the word 'assertion'\n\n  let cleanedBody = body.match(/(?:browser\\s*\\.\\s*)?assert\\s*\\.\\s*\\w*\\([\\s\\S]*\\)/)\n  if(cleanedBody && Array.isArray(cleanedBody)) {\n    body = cleanedBody[0];\n  } else {\n    // No assertions present\n    return [];\n  }\n  let s = replacer(body);\n  // split on 'assertion'\n  let splittedAssertions = s.str.split('assert');\n  let assertions = splittedAssertions.slice(1);\n  // match the METHODS\n\n  let assertionBodies = [];\n  let methods = assertions.map(function(a, i){\n    let m = a.match(/^\\s*\\.\\s*(\\w+)__#(\\d+)/);\n    assertionBodies.push(parseInt(m[2]));\n    let pre = splittedAssertions[i].match(/browser\\s*\\.\\s*/) ? 'browser.' : '';\n    return pre + m[1];\n  });\n  if(methods.some(function(m){ return !m })) return \"invalid assertion\";\n  // remove parens from the assertions bodies\n  let bodies = assertionBodies.map(function(b){\n    return s.dictionary[b].slice(1,-1).trim();\n  });\n  assertions = methods.map(function(m, i) {\n    return {\n      method: m,\n      args: splitter(bodies[i]) //replace objects, split on ',' ,then restore objects\n    }\n  })\n  return assertions;\n}\n\nmodule.exports = assertionAnalyser;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1705335515271
  },
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/routes/fcctesting.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/routes/fcctesting.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/routes/fcctesting.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/routes/fcctesting.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/routes/",
        "sourceFileName": "fcctesting.js"
      }
    },
    "ast": null,
    "code": "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n'use strict';\n\nconst cors = require('cors');\n\nconst fs = require('fs');\n\nconst runner = require('../test-runner');\n\nmodule.exports = function (app) {\n  app.route('/_api/server.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/server.js', function (err, data) {\n      if (err) return next(err);\n      res.send(data.toString());\n    });\n  });\n  app.route('/_api/routes/api.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/routes/api.js', function (err, data) {\n      if (err) return next(err);\n      res.type('txt').send(data.toString());\n    });\n  });\n  app.route('/_api/controllers/convertHandler.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/controllers/convertHandler.js', function (err, data) {\n      if (err) return next(err);\n      res.type('txt').send(data.toString());\n    });\n  });\n  app.get('/_api/get-tests', cors(), function (req, res, next) {\n    console.log('requested');\n    if (process.env.NODE_ENV === 'test') return next();\n    res.json({\n      status: 'unavailable'\n    });\n  }, function (req, res, next) {\n    if (!runner.report) return next();\n    res.json(testFilter(runner.report, req.query.type, req.query.n));\n  }, function (req, res) {\n    runner.on('done', function (report) {\n      process.nextTick(() => res.json(testFilter(runner.report, req.query.type, req.query.n)));\n    });\n  });\n  app.get('/_api/app-info', function (req, res) {\n    let hs = Object.keys(res._headers).filter(h => !h.match(/^access-control-\\w+/));\n    let hObj = {};\n    hs.forEach(h => {\n      hObj[h] = res._headers[h];\n    });\n    delete res._headers['strict-transport-security'];\n    res.json({\n      headers: hObj\n    });\n  });\n};\n\nfunction testFilter(tests, type, n) {\n  let out;\n\n  switch (type) {\n    case 'unit':\n      out = tests.filter(t => t.context.match('Unit Tests'));\n      break;\n\n    case 'functional':\n      out = tests.filter(t => t.context.match('Functional Tests') && !t.title.match('#example'));\n      break;\n\n    default:\n      out = tests;\n  }\n\n  if (n !== undefined) {\n    return out[n] || out;\n  }\n\n  return out;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "fcctesting.js"
      ],
      "names": [
        "cors",
        "require",
        "fs",
        "runner",
        "module",
        "exports",
        "app",
        "route",
        "get",
        "req",
        "res",
        "next",
        "console",
        "log",
        "readFile",
        "__dirname",
        "err",
        "data",
        "send",
        "toString",
        "type",
        "process",
        "env",
        "NODE_ENV",
        "json",
        "status",
        "report",
        "testFilter",
        "query",
        "n",
        "on",
        "nextTick",
        "hs",
        "Object",
        "keys",
        "_headers",
        "filter",
        "h",
        "match",
        "hObj",
        "forEach",
        "headers",
        "tests",
        "out",
        "t",
        "context",
        "title",
        "undefined"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/new_name/Desktop/british translator/routes/",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\n'use strict';\n\nconst cors = require('cors');\nconst fs = require('fs');\nconst runner = require('../test-runner');\n\nmodule.exports = function (app) {\n\n  app.route('/_api/server.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/server.js', function(err, data) {\n        if(err) return next(err);\n        res.send(data.toString());\n      });\n    });\n  app.route('/_api/routes/api.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/routes/api.js', function(err, data) {\n        if(err) return next(err);\n        res.type('txt').send(data.toString());\n      });\n    });\n  app.route('/_api/controllers/convertHandler.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/controllers/convertHandler.js', function(err, data) {\n        if(err) return next(err);\n        res.type('txt').send(data.toString());\n      });\n    });\n\n  app.get('/_api/get-tests', cors(), function(req, res, next){\n    console.log('requested');\n    if(process.env.NODE_ENV === 'test') return next();\n    res.json({status: 'unavailable'});\n  },\n  function(req, res, next){\n    if(!runner.report) return next();\n    res.json(testFilter(runner.report, req.query.type, req.query.n));\n  },\n  function(req, res){\n    runner.on('done', function(report){\n      process.nextTick(() =>  res.json(testFilter(runner.report, req.query.type, req.query.n)));\n    });\n  });\n  app.get('/_api/app-info', function(req, res) {\n    let hs = Object.keys(res._headers)\n      .filter(h => !h.match(/^access-control-\\w+/));\n    let hObj = {};\n    hs.forEach(h => {hObj[h] = res._headers[h]});\n    delete res._headers['strict-transport-security'];\n    res.json({headers: hObj});\n  });\n  \n};\n\nfunction testFilter(tests, type, n) {\n  let out;\n  switch (type) {\n    case 'unit' :\n      out = tests.filter(t => t.context.match('Unit Tests'));\n      break;\n    case 'functional':\n      out = tests.filter(t => t.context.match('Functional Tests') && !t.title.match('#example'));\n      break;\n    default:\n      out = tests;\n  }\n  if(n !== undefined) {\n    return out[n] || out;\n  }\n  return out;\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1705335515274
  },
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/test-runner.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/test-runner.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/test-runner.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/test-runner.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/",
        "sourceFileName": "test-runner.js"
      }
    },
    "ast": null,
    "code": "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\nconst analyser = require('./assertion-analyser');\n\nconst EventEmitter = require('events').EventEmitter;\n\nconst Mocha = require('mocha'),\n      fs = require('fs'),\n      path = require('path');\n\nrequire(\"@babel/register\");\n\nconst mocha = new Mocha({\n  timeout: 5000\n});\nconst testDir = './tests'; // Add each .js file to the mocha instance\n\nfs.readdirSync(testDir).filter(function (file) {\n  // Only keep the .js files\n  return file.substr(-3) === '.js';\n}).forEach(function (file) {\n  mocha.addFile(path.join(testDir, file));\n});\nlet emitter = new EventEmitter();\n\nemitter.run = function () {\n  let tests = [];\n  let context = \"\";\n  let separator = ' -> '; // Run the tests.\n\n  try {\n    let runner = mocha.ui('tdd').run().on('test end', function (test) {\n      // remove comments\n      let body = test.body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, ''); // collapse spaces\n\n      body = body.replace(/\\s+/g, ' ');\n      let obj = {\n        title: test.title,\n        context: context.slice(0, -separator.length),\n        state: test.state,\n        // body: body,\n        assertions: analyser(body)\n      };\n      tests.push(obj);\n    }).on('end', function () {\n      emitter.report = tests;\n      emitter.emit('done', tests);\n    }).on('suite', function (s) {\n      context += s.title + separator;\n    }).on('suite end', function (s) {\n      context = context.slice(0, -(s.title.length + separator.length));\n    });\n  } catch (e) {\n    throw e;\n  }\n};\n\nmodule.exports = emitter;\n/*\n * Mocha.runner Events:\n * can be used to build a better custom report\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QtcnVubmVyLmpzIl0sIm5hbWVzIjpbImFuYWx5c2VyIiwicmVxdWlyZSIsIkV2ZW50RW1pdHRlciIsIk1vY2hhIiwiZnMiLCJwYXRoIiwibW9jaGEiLCJ0aW1lb3V0IiwidGVzdERpciIsInJlYWRkaXJTeW5jIiwiZmlsdGVyIiwiZmlsZSIsInN1YnN0ciIsImZvckVhY2giLCJhZGRGaWxlIiwiam9pbiIsImVtaXR0ZXIiLCJydW4iLCJ0ZXN0cyIsImNvbnRleHQiLCJzZXBhcmF0b3IiLCJydW5uZXIiLCJ1aSIsIm9uIiwidGVzdCIsImJvZHkiLCJyZXBsYWNlIiwib2JqIiwidGl0bGUiLCJzbGljZSIsImxlbmd0aCIsInN0YXRlIiwiYXNzZXJ0aW9ucyIsInB1c2giLCJyZXBvcnQiLCJlbWl0IiwicyIsImUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsc0JBQUQsQ0FBeEI7O0FBQ0EsTUFBTUMsWUFBWSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxZQUF2Qzs7QUFFQSxNQUFNQyxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxPQUFELENBQXJCO0FBQUEsTUFDSUcsRUFBRSxHQUFHSCxPQUFPLENBQUMsSUFBRCxDQURoQjtBQUFBLE1BRUlJLElBQUksR0FBR0osT0FBTyxDQUFDLE1BQUQsQ0FGbEI7O0FBR0lBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQOztBQUVKLE1BQU1LLEtBQUssR0FBRyxJQUFJSCxLQUFKLENBQVU7QUFBRUksRUFBQUEsT0FBTyxFQUFFO0FBQVgsQ0FBVixDQUFkO0FBQ0EsTUFBTUMsT0FBTyxHQUFHLFNBQWhCLEMsQ0FHQTs7QUFDQUosRUFBRSxDQUFDSyxXQUFILENBQWVELE9BQWYsRUFBd0JFLE1BQXhCLENBQStCLFVBQVNDLElBQVQsRUFBYztBQUN6QztBQUNBLFNBQU9BLElBQUksQ0FBQ0MsTUFBTCxDQUFZLENBQUMsQ0FBYixNQUFvQixLQUEzQjtBQUVILENBSkQsRUFJR0MsT0FKSCxDQUlXLFVBQVNGLElBQVQsRUFBYztBQUNyQkwsRUFBQUEsS0FBSyxDQUFDUSxPQUFOLENBQ0lULElBQUksQ0FBQ1UsSUFBTCxDQUFVUCxPQUFWLEVBQW1CRyxJQUFuQixDQURKO0FBR0gsQ0FSRDtBQVVBLElBQUlLLE9BQU8sR0FBRyxJQUFJZCxZQUFKLEVBQWQ7O0FBQ0FjLE9BQU8sQ0FBQ0MsR0FBUixHQUFjLFlBQVc7QUFFdkIsTUFBSUMsS0FBSyxHQUFHLEVBQVo7QUFDQSxNQUFJQyxPQUFPLEdBQUcsRUFBZDtBQUNBLE1BQUlDLFNBQVMsR0FBRyxNQUFoQixDQUp1QixDQUt2Qjs7QUFDQSxNQUFJO0FBQ0osUUFBSUMsTUFBTSxHQUFHZixLQUFLLENBQUNnQixFQUFOLENBQVMsS0FBVCxFQUFnQkwsR0FBaEIsR0FDVk0sRUFEVSxDQUNQLFVBRE8sRUFDSyxVQUFTQyxJQUFULEVBQWU7QUFDM0I7QUFDQSxVQUFJQyxJQUFJLEdBQUdELElBQUksQ0FBQ0MsSUFBTCxDQUFVQyxPQUFWLENBQWtCLHNCQUFsQixFQUEwQyxFQUExQyxDQUFYLENBRjJCLENBRzNCOztBQUNBRCxNQUFBQSxJQUFJLEdBQUdBLElBQUksQ0FBQ0MsT0FBTCxDQUFhLE1BQWIsRUFBb0IsR0FBcEIsQ0FBUDtBQUNBLFVBQUlDLEdBQUcsR0FBRztBQUNSQyxRQUFBQSxLQUFLLEVBQUVKLElBQUksQ0FBQ0ksS0FESjtBQUVSVCxRQUFBQSxPQUFPLEVBQUVBLE9BQU8sQ0FBQ1UsS0FBUixDQUFjLENBQWQsRUFBaUIsQ0FBQ1QsU0FBUyxDQUFDVSxNQUE1QixDQUZEO0FBR1JDLFFBQUFBLEtBQUssRUFBRVAsSUFBSSxDQUFDTyxLQUhKO0FBSVI7QUFDQUMsUUFBQUEsVUFBVSxFQUFFaEMsUUFBUSxDQUFDeUIsSUFBRDtBQUxaLE9BQVY7QUFPQVAsTUFBQUEsS0FBSyxDQUFDZSxJQUFOLENBQVdOLEdBQVg7QUFDSCxLQWRVLEVBZVZKLEVBZlUsQ0FlUCxLQWZPLEVBZUEsWUFBVztBQUNsQlAsTUFBQUEsT0FBTyxDQUFDa0IsTUFBUixHQUFpQmhCLEtBQWpCO0FBQ0FGLE1BQUFBLE9BQU8sQ0FBQ21CLElBQVIsQ0FBYSxNQUFiLEVBQXFCakIsS0FBckI7QUFDSCxLQWxCVSxFQW1CVkssRUFuQlUsQ0FtQlAsT0FuQk8sRUFtQkUsVUFBU2EsQ0FBVCxFQUFZO0FBQ3ZCakIsTUFBQUEsT0FBTyxJQUFLaUIsQ0FBQyxDQUFDUixLQUFGLEdBQVVSLFNBQXRCO0FBRUQsS0F0QlUsRUF1QlZHLEVBdkJVLENBdUJQLFdBdkJPLEVBdUJNLFVBQVNhLENBQVQsRUFBWTtBQUMzQmpCLE1BQUFBLE9BQU8sR0FBR0EsT0FBTyxDQUFDVSxLQUFSLENBQWMsQ0FBZCxFQUFpQixFQUFFTyxDQUFDLENBQUNSLEtBQUYsQ0FBUUUsTUFBUixHQUFpQlYsU0FBUyxDQUFDVSxNQUE3QixDQUFqQixDQUFWO0FBQ0QsS0F6QlUsQ0FBYjtBQTBCQyxHQTNCRCxDQTJCRSxPQUFNTyxDQUFOLEVBQVM7QUFDVCxVQUFNQSxDQUFOO0FBQ0Q7QUFDRixDQXBDRDs7QUFzQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnZCLE9BQWpCO0FBRUEiLCJzb3VyY2VSb290IjoiL1VzZXJzL25ld19uYW1lL0Rlc2t0b3AvYnJpdGlzaCB0cmFuc2xhdG9yLyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qICAgICAgIERPIE5PVCBFRElUIFRISVMgRklMRVxuKiAgICAgICBGb3IgRkNDIHRlc3RpbmcgcHVycG9zZXMhXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qXG4qL1xuXG5jb25zdCBhbmFseXNlciA9IHJlcXVpcmUoJy4vYXNzZXJ0aW9uLWFuYWx5c2VyJyk7XG5jb25zdCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7XG5cbmNvbnN0IE1vY2hhID0gcmVxdWlyZSgnbW9jaGEnKSxcbiAgICBmcyA9IHJlcXVpcmUoJ2ZzJyksXG4gICAgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbiAgICByZXF1aXJlKFwiQGJhYmVsL3JlZ2lzdGVyXCIpO1xuXG5jb25zdCBtb2NoYSA9IG5ldyBNb2NoYSh7IHRpbWVvdXQ6IDUwMDAgfSk7XG5jb25zdCB0ZXN0RGlyID0gJy4vdGVzdHMnXG5cblxuLy8gQWRkIGVhY2ggLmpzIGZpbGUgdG8gdGhlIG1vY2hhIGluc3RhbmNlXG5mcy5yZWFkZGlyU3luYyh0ZXN0RGlyKS5maWx0ZXIoZnVuY3Rpb24oZmlsZSl7XG4gICAgLy8gT25seSBrZWVwIHRoZSAuanMgZmlsZXNcbiAgICByZXR1cm4gZmlsZS5zdWJzdHIoLTMpID09PSAnLmpzJztcblxufSkuZm9yRWFjaChmdW5jdGlvbihmaWxlKXtcbiAgICBtb2NoYS5hZGRGaWxlKFxuICAgICAgICBwYXRoLmpvaW4odGVzdERpciwgZmlsZSlcbiAgICApO1xufSk7XG5cbmxldCBlbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuZW1pdHRlci5ydW4gPSBmdW5jdGlvbigpIHtcblxuICBsZXQgdGVzdHMgPSBbXTtcbiAgbGV0IGNvbnRleHQgPSBcIlwiO1xuICBsZXQgc2VwYXJhdG9yID0gJyAtPiAnO1xuICAvLyBSdW4gdGhlIHRlc3RzLlxuICB0cnkge1xuICBsZXQgcnVubmVyID0gbW9jaGEudWkoJ3RkZCcpLnJ1bigpXG4gICAgLm9uKCd0ZXN0IGVuZCcsIGZ1bmN0aW9uKHRlc3QpIHtcbiAgICAgICAgLy8gcmVtb3ZlIGNvbW1lbnRzXG4gICAgICAgIGxldCBib2R5ID0gdGVzdC5ib2R5LnJlcGxhY2UoL1xcL1xcLy4qXFxufFxcL1xcKi4qXFwqXFwvL2csICcnKTtcbiAgICAgICAgLy8gY29sbGFwc2Ugc3BhY2VzXG4gICAgICAgIGJvZHkgPSBib2R5LnJlcGxhY2UoL1xccysvZywnICcpO1xuICAgICAgICBsZXQgb2JqID0ge1xuICAgICAgICAgIHRpdGxlOiB0ZXN0LnRpdGxlLFxuICAgICAgICAgIGNvbnRleHQ6IGNvbnRleHQuc2xpY2UoMCwgLXNlcGFyYXRvci5sZW5ndGgpLFxuICAgICAgICAgIHN0YXRlOiB0ZXN0LnN0YXRlLFxuICAgICAgICAgIC8vIGJvZHk6IGJvZHksXG4gICAgICAgICAgYXNzZXJ0aW9uczogYW5hbHlzZXIoYm9keSlcbiAgICAgICAgfTtcbiAgICAgICAgdGVzdHMucHVzaChvYmopO1xuICAgIH0pXG4gICAgLm9uKCdlbmQnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgZW1pdHRlci5yZXBvcnQgPSB0ZXN0cztcbiAgICAgICAgZW1pdHRlci5lbWl0KCdkb25lJywgdGVzdHMpXG4gICAgfSlcbiAgICAub24oJ3N1aXRlJywgZnVuY3Rpb24ocykge1xuICAgICAgY29udGV4dCArPSAocy50aXRsZSArIHNlcGFyYXRvcik7XG5cbiAgICB9KVxuICAgIC5vbignc3VpdGUgZW5kJywgZnVuY3Rpb24ocykge1xuICAgICAgY29udGV4dCA9IGNvbnRleHQuc2xpY2UoMCwgLShzLnRpdGxlLmxlbmd0aCArIHNlcGFyYXRvci5sZW5ndGgpKVxuICAgIH0pXG4gIH0gY2F0Y2goZSkge1xuICAgIHRocm93KGUpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVtaXR0ZXI7XG5cbi8qXG4gKiBNb2NoYS5ydW5uZXIgRXZlbnRzOlxuICogY2FuIGJlIHVzZWQgdG8gYnVpbGQgYSBiZXR0ZXIgY3VzdG9tIHJlcG9ydFxuICpcbiAqICAgLSBgc3RhcnRgICBleGVjdXRpb24gc3RhcnRlZFxuICogICAtIGBlbmRgICBleGVjdXRpb24gY29tcGxldGVcbiAqICAgLSBgc3VpdGVgICAoc3VpdGUpIHRlc3Qgc3VpdGUgZXhlY3V0aW9uIHN0YXJ0ZWRcbiAqICAgLSBgc3VpdGUgZW5kYCAgKHN1aXRlKSBhbGwgdGVzdHMgKGFuZCBzdWItc3VpdGVzKSBoYXZlIGZpbmlzaGVkXG4gKiAgIC0gYHRlc3RgICAodGVzdCkgdGVzdCBleGVjdXRpb24gc3RhcnRlZFxuICogICAtIGB0ZXN0IGVuZGAgICh0ZXN0KSB0ZXN0IGNvbXBsZXRlZFxuICogICAtIGBob29rYCAgKGhvb2spIGhvb2sgZXhlY3V0aW9uIHN0YXJ0ZWRcbiAqICAgLSBgaG9vayBlbmRgICAoaG9vaykgaG9vayBjb21wbGV0ZVxuICogICAtIGBwYXNzYCAgKHRlc3QpIHRlc3QgcGFzc2VkXG4gKiAgIC0gYGZhaWxgICAodGVzdCwgZXJyKSB0ZXN0IGZhaWxlZFxuICogICAtIGBwZW5kaW5nYCAgKHRlc3QpIHRlc3QgcGVuZGluZ1xuICovIl19",
    "map": {
      "version": 3,
      "sources": [
        "test-runner.js"
      ],
      "names": [
        "analyser",
        "require",
        "EventEmitter",
        "Mocha",
        "fs",
        "path",
        "mocha",
        "timeout",
        "testDir",
        "readdirSync",
        "filter",
        "file",
        "substr",
        "forEach",
        "addFile",
        "join",
        "emitter",
        "run",
        "tests",
        "context",
        "separator",
        "runner",
        "ui",
        "on",
        "test",
        "body",
        "replace",
        "obj",
        "title",
        "slice",
        "length",
        "state",
        "assertions",
        "push",
        "report",
        "emit",
        "s",
        "e",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,YAAvC;;AAEA,MAAMC,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;AAAA,MACIG,EAAE,GAAGH,OAAO,CAAC,IAAD,CADhB;AAAA,MAEII,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAFlB;;AAGIA,OAAO,CAAC,iBAAD,CAAP;;AAEJ,MAAMK,KAAK,GAAG,IAAIH,KAAJ,CAAU;AAAEI,EAAAA,OAAO,EAAE;AAAX,CAAV,CAAd;AACA,MAAMC,OAAO,GAAG,SAAhB,C,CAGA;;AACAJ,EAAE,CAACK,WAAH,CAAeD,OAAf,EAAwBE,MAAxB,CAA+B,UAASC,IAAT,EAAc;AACzC;AACA,SAAOA,IAAI,CAACC,MAAL,CAAY,CAAC,CAAb,MAAoB,KAA3B;AAEH,CAJD,EAIGC,OAJH,CAIW,UAASF,IAAT,EAAc;AACrBL,EAAAA,KAAK,CAACQ,OAAN,CACIT,IAAI,CAACU,IAAL,CAAUP,OAAV,EAAmBG,IAAnB,CADJ;AAGH,CARD;AAUA,IAAIK,OAAO,GAAG,IAAId,YAAJ,EAAd;;AACAc,OAAO,CAACC,GAAR,GAAc,YAAW;AAEvB,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,SAAS,GAAG,MAAhB,CAJuB,CAKvB;;AACA,MAAI;AACJ,QAAIC,MAAM,GAAGf,KAAK,CAACgB,EAAN,CAAS,KAAT,EAAgBL,GAAhB,GACVM,EADU,CACP,UADO,EACK,UAASC,IAAT,EAAe;AAC3B;AACA,UAAIC,IAAI,GAAGD,IAAI,CAACC,IAAL,CAAUC,OAAV,CAAkB,sBAAlB,EAA0C,EAA1C,CAAX,CAF2B,CAG3B;;AACAD,MAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAoB,GAApB,CAAP;AACA,UAAIC,GAAG,GAAG;AACRC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KADJ;AAERT,QAAAA,OAAO,EAAEA,OAAO,CAACU,KAAR,CAAc,CAAd,EAAiB,CAACT,SAAS,CAACU,MAA5B,CAFD;AAGRC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAHJ;AAIR;AACAC,QAAAA,UAAU,EAAEhC,QAAQ,CAACyB,IAAD;AALZ,OAAV;AAOAP,MAAAA,KAAK,CAACe,IAAN,CAAWN,GAAX;AACH,KAdU,EAeVJ,EAfU,CAeP,KAfO,EAeA,YAAW;AAClBP,MAAAA,OAAO,CAACkB,MAAR,GAAiBhB,KAAjB;AACAF,MAAAA,OAAO,CAACmB,IAAR,CAAa,MAAb,EAAqBjB,KAArB;AACH,KAlBU,EAmBVK,EAnBU,CAmBP,OAnBO,EAmBE,UAASa,CAAT,EAAY;AACvBjB,MAAAA,OAAO,IAAKiB,CAAC,CAACR,KAAF,GAAUR,SAAtB;AAED,KAtBU,EAuBVG,EAvBU,CAuBP,WAvBO,EAuBM,UAASa,CAAT,EAAY;AAC3BjB,MAAAA,OAAO,GAAGA,OAAO,CAACU,KAAR,CAAc,CAAd,EAAiB,EAAEO,CAAC,CAACR,KAAF,CAAQE,MAAR,GAAiBV,SAAS,CAACU,MAA7B,CAAjB,CAAV;AACD,KAzBU,CAAb;AA0BC,GA3BD,CA2BE,OAAMO,CAAN,EAAS;AACT,UAAMA,CAAN;AACD;AACF,CApCD;;AAsCAC,MAAM,CAACC,OAAP,GAAiBvB,OAAjB;AAEA",
      "sourceRoot": "/Users/new_name/Desktop/british translator/",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nconst analyser = require('./assertion-analyser');\nconst EventEmitter = require('events').EventEmitter;\n\nconst Mocha = require('mocha'),\n    fs = require('fs'),\n    path = require('path');\n    require(\"@babel/register\");\n\nconst mocha = new Mocha({ timeout: 5000 });\nconst testDir = './tests'\n\n\n// Add each .js file to the mocha instance\nfs.readdirSync(testDir).filter(function(file){\n    // Only keep the .js files\n    return file.substr(-3) === '.js';\n\n}).forEach(function(file){\n    mocha.addFile(\n        path.join(testDir, file)\n    );\n});\n\nlet emitter = new EventEmitter();\nemitter.run = function() {\n\n  let tests = [];\n  let context = \"\";\n  let separator = ' -> ';\n  // Run the tests.\n  try {\n  let runner = mocha.ui('tdd').run()\n    .on('test end', function(test) {\n        // remove comments\n        let body = test.body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n        // collapse spaces\n        body = body.replace(/\\s+/g,' ');\n        let obj = {\n          title: test.title,\n          context: context.slice(0, -separator.length),\n          state: test.state,\n          // body: body,\n          assertions: analyser(body)\n        };\n        tests.push(obj);\n    })\n    .on('end', function() {\n        emitter.report = tests;\n        emitter.emit('done', tests)\n    })\n    .on('suite', function(s) {\n      context += (s.title + separator);\n\n    })\n    .on('suite end', function(s) {\n      context = context.slice(0, -(s.title.length + separator.length))\n    })\n  } catch(e) {\n    throw(e);\n  }\n};\n\nmodule.exports = emitter;\n\n/*\n * Mocha.runner Events:\n * can be used to build a better custom report\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n */"
      ]
    },
    "sourceType": "module",
    "mtime": 1705335515275
  },
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/assertion-analyser.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/assertion-analyser.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/assertion-analyser.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/assertion-analyser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/",
        "sourceFileName": "assertion-analyser.js"
      }
    },
    "ast": null,
    "code": "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\nfunction objParser(str, init) {\n  // finds objects, arrays, strings, and function arguments\n  // between parens, because they may contain ','\n  let openSym = ['[', '{', '\"', \"'\", '('];\n  let closeSym = [']', '}', '\"', \"'\", ')'];\n  let type;\n  let i;\n\n  for (i = init || 0; i < str.length; i++) {\n    type = openSym.indexOf(str[i]);\n    if (type !== -1) break;\n  }\n\n  if (type === -1) return null;\n  let open = openSym[type];\n  let close = closeSym[type];\n  let count = 1;\n  let k;\n\n  for (k = i + 1; k < str.length; k++) {\n    if (open === '\"' || open === \"'\") {\n      if (str[k] === close) count--;\n      if (str[k] === '\\\\') k++;\n    } else {\n      if (str[k] === open) count++;\n      if (str[k] === close) count--;\n    }\n\n    if (count === 0) break;\n  }\n\n  if (count !== 0) return null;\n  let obj = str.slice(i, k + 1);\n  return {\n    start: i,\n    end: k,\n    obj: obj\n  };\n}\n\nfunction replacer(str) {\n  // replace objects with a symbol ( __#n)\n  let obj;\n  let cnt = 0;\n  let data = [];\n\n  while (obj = objParser(str)) {\n    data[cnt] = obj.obj;\n    str = str.substring(0, obj.start) + '__#' + cnt++ + str.substring(obj.end + 1);\n  }\n\n  return {\n    str: str,\n    dictionary: data\n  };\n}\n\nfunction splitter(str) {\n  // split on commas, then restore the objects\n  let strObj = replacer(str);\n  let args = strObj.str.split(',');\n  args = args.map(function (a) {\n    let m = a.match(/__#(\\d+)/);\n\n    while (m) {\n      a = a.replace(/__#(\\d+)/, strObj.dictionary[m[1]]);\n      m = a.match(/__#(\\d+)/);\n    }\n\n    return a.trim();\n  });\n  return args;\n}\n\nfunction assertionAnalyser(body) {\n  // already filtered in the test runner\n  // // remove comments\n  // body = body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n  // // get test function body\n  // body = body.match(/\\{\\s*([\\s\\S]*)\\}\\s*$/)[1];\n  if (!body) return \"invalid assertion\"; // replace assertions bodies, so that they cannot\n  // contain the word 'assertion'\n\n  let cleanedBody = body.match(/(?:browser\\s*\\.\\s*)?assert\\s*\\.\\s*\\w*\\([\\s\\S]*\\)/);\n\n  if (cleanedBody && Array.isArray(cleanedBody)) {\n    body = cleanedBody[0];\n  } else {\n    // No assertions present\n    return [];\n  }\n\n  let s = replacer(body); // split on 'assertion'\n\n  let splittedAssertions = s.str.split('assert');\n  let assertions = splittedAssertions.slice(1); // match the METHODS\n\n  let assertionBodies = [];\n  let methods = assertions.map(function (a, i) {\n    let m = a.match(/^\\s*\\.\\s*(\\w+)__#(\\d+)/);\n    assertionBodies.push(parseInt(m[2]));\n    let pre = splittedAssertions[i].match(/browser\\s*\\.\\s*/) ? 'browser.' : '';\n    return pre + m[1];\n  });\n  if (methods.some(function (m) {\n    return !m;\n  })) return \"invalid assertion\"; // remove parens from the assertions bodies\n\n  let bodies = assertionBodies.map(function (b) {\n    return s.dictionary[b].slice(1, -1).trim();\n  });\n  assertions = methods.map(function (m, i) {\n    return {\n      method: m,\n      args: splitter(bodies[i]) //replace objects, split on ',' ,then restore objects\n\n    };\n  });\n  return assertions;\n}\n\nmodule.exports = assertionAnalyser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "assertion-analyser.js"
      ],
      "names": [
        "objParser",
        "str",
        "init",
        "openSym",
        "closeSym",
        "type",
        "i",
        "length",
        "indexOf",
        "open",
        "close",
        "count",
        "k",
        "obj",
        "slice",
        "start",
        "end",
        "replacer",
        "cnt",
        "data",
        "substring",
        "dictionary",
        "splitter",
        "strObj",
        "args",
        "split",
        "map",
        "a",
        "m",
        "match",
        "replace",
        "trim",
        "assertionAnalyser",
        "body",
        "cleanedBody",
        "Array",
        "isArray",
        "s",
        "splittedAssertions",
        "assertions",
        "assertionBodies",
        "methods",
        "push",
        "parseInt",
        "pre",
        "some",
        "bodies",
        "b",
        "method",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/new_name/Desktop/british translator/",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nfunction objParser(str, init) {\n  // finds objects, arrays, strings, and function arguments\n  // between parens, because they may contain ','\n  let openSym = ['[', '{', '\"', \"'\", '('];\n  let closeSym = [']', '}', '\"', \"'\", ')'];\n  let type;\n  let i;\n  for(i = (init || 0); i < str.length; i++ ) {\n    type = openSym.indexOf(str[i]);\n    if( type !== -1)  break;\n  }\n  if (type === -1) return null;\n  let open = openSym[type];\n  let close = closeSym[type];\n  let count = 1;\n  let k;\n  for(k = i+1; k < str.length; k++) {\n    if(open === '\"' || open === \"'\") {\n      if(str[k] === close) count--;\n      if(str[k] === '\\\\') k++;\n    } else {\n      if(str[k] === open) count++;\n      if(str[k] === close) count--;\n    }\n    if(count === 0) break;\n  }\n  if(count !== 0) return null;\n  let obj = str.slice(i, k+1);\n  return {\n    start : i,\n    end: k,\n    obj: obj\n  };\n}\n\nfunction replacer(str) {\n  // replace objects with a symbol ( __#n)\n  let obj;\n  let cnt = 0;\n  let data = [];\n  while(obj = objParser(str)) {\n    data[cnt] = obj.obj;\n    str = str.substring(0, obj.start) + '__#' + cnt++ + str.substring(obj.end+1)\n  }\n  return {\n    str : str,\n    dictionary : data\n  }\n}\n\nfunction splitter(str) {\n  // split on commas, then restore the objects\n  let strObj = replacer(str);\n  let args = strObj.str.split(',');\n  args = args.map(function(a){\n    let m = a.match(/__#(\\d+)/);\n    while (m) {\n      a = a.replace(/__#(\\d+)/, strObj.dictionary[m[1]]);\n      m = a.match(/__#(\\d+)/);\n    }\n    return a.trim();\n  })\n  return args;\n}\n\nfunction assertionAnalyser(body) {\n  \n  // already filtered in the test runner\n  // // remove comments\n  // body = body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n  // // get test function body\n  // body = body.match(/\\{\\s*([\\s\\S]*)\\}\\s*$/)[1];\n  \n  if(!body) return \"invalid assertion\";\n  // replace assertions bodies, so that they cannot\n  // contain the word 'assertion'\n\n  let cleanedBody = body.match(/(?:browser\\s*\\.\\s*)?assert\\s*\\.\\s*\\w*\\([\\s\\S]*\\)/)\n  if(cleanedBody && Array.isArray(cleanedBody)) {\n    body = cleanedBody[0];\n  } else {\n    // No assertions present\n    return [];\n  }\n  let s = replacer(body);\n  // split on 'assertion'\n  let splittedAssertions = s.str.split('assert');\n  let assertions = splittedAssertions.slice(1);\n  // match the METHODS\n\n  let assertionBodies = [];\n  let methods = assertions.map(function(a, i){\n    let m = a.match(/^\\s*\\.\\s*(\\w+)__#(\\d+)/);\n    assertionBodies.push(parseInt(m[2]));\n    let pre = splittedAssertions[i].match(/browser\\s*\\.\\s*/) ? 'browser.' : '';\n    return pre + m[1];\n  });\n  if(methods.some(function(m){ return !m })) return \"invalid assertion\";\n  // remove parens from the assertions bodies\n  let bodies = assertionBodies.map(function(b){\n    return s.dictionary[b].slice(1,-1).trim();\n  });\n  assertions = methods.map(function(m, i) {\n    return {\n      method: m,\n      args: splitter(bodies[i]) //replace objects, split on ',' ,then restore objects\n    }\n  })\n  return assertions;\n}\n\nmodule.exports = assertionAnalyser;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1705335515271
  },
  "{\"sourceRoot\":\"/Users/new_name/Desktop/british translator/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/new_name/Desktop/british translator\",\"filename\":\"/Users/new_name/Desktop/british translator/routes/api.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/new_name/Desktop/british translator\",\"plugins\":[],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/new_name/Desktop/british translator/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/new_name/Desktop/british translator",
      "filename": "/Users/new_name/Desktop/british translator/routes/api.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/new_name/Desktop/british translator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/new_name/Desktop/british translator/routes/api.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/new_name/Desktop/british translator/routes/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/new_name/Desktop/british translator/routes/",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nconst Translator = require('../components/translator.js');\n\nmodule.exports = function (app) {\n  const translator = new Translator();\n  app.route('/api/translate').post((req, res) => {\n    let text = req.body.text;\n    let locale = req.body.locale;\n\n    if (text === \"\") {\n      res.json({\n        error: 'No text to translate'\n      });\n      return;\n    } else if (!locale || !text) {\n      res.json({\n        error: 'Required field(s) missing'\n      });\n      return;\n    }\n\n    if (locale === \"american-to-british\") {\n      let translation = translator.getAmericanTranslation(text);\n\n      if (!translation || translation === text) {\n        res.json({\n          text,\n          translation: \"Everything looks good to me!\"\n        });\n        return;\n      } else {\n        res.json({\n          text,\n          translation\n        });\n        return;\n      }\n    } else if (locale === \"british-to-american\") {\n      let translation = translator.getBritishTranslation(text);\n\n      if (!translation || translation === text) {\n        res.json({\n          text,\n          translation: \"Everything looks good to me!\"\n        });\n        return;\n      } else {\n        res.json({\n          text,\n          translation\n        });\n        return;\n      }\n    } else {\n      res.json({\n        error: \"Invalid value for locale field\"\n      });\n      return;\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJUcmFuc2xhdG9yIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJ0cmFuc2xhdG9yIiwicm91dGUiLCJwb3N0IiwicmVxIiwicmVzIiwidGV4dCIsImJvZHkiLCJsb2NhbGUiLCJqc29uIiwiZXJyb3IiLCJ0cmFuc2xhdGlvbiIsImdldEFtZXJpY2FuVHJhbnNsYXRpb24iLCJnZXRCcml0aXNoVHJhbnNsYXRpb24iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLFVBQVUsR0FBR0MsT0FBTyxDQUFDLDZCQUFELENBQTFCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsR0FBVixFQUFlO0FBRTlCLFFBQU1DLFVBQVUsR0FBRyxJQUFJTCxVQUFKLEVBQW5CO0FBRUFJLEVBQUFBLEdBQUcsQ0FBQ0UsS0FBSixDQUFVLGdCQUFWLEVBQ0dDLElBREgsQ0FDUSxDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNsQixRQUFJQyxJQUFJLEdBQUdGLEdBQUcsQ0FBQ0csSUFBSixDQUFTRCxJQUFwQjtBQUNBLFFBQUlFLE1BQU0sR0FBR0osR0FBRyxDQUFDRyxJQUFKLENBQVNDLE1BQXRCOztBQUVBLFFBQUlGLElBQUksS0FBSyxFQUFiLEVBQWlCO0FBQ2ZELE1BQUFBLEdBQUcsQ0FBQ0ksSUFBSixDQUFTO0FBQUVDLFFBQUFBLEtBQUssRUFBRTtBQUFULE9BQVQ7QUFDQTtBQUNELEtBSEQsTUFJSyxJQUFJLENBQUNGLE1BQUQsSUFBVyxDQUFDRixJQUFoQixFQUFzQjtBQUN6QkQsTUFBQUEsR0FBRyxDQUFDSSxJQUFKLENBQVM7QUFBRUMsUUFBQUEsS0FBSyxFQUFFO0FBQVQsT0FBVDtBQUNBO0FBQ0Q7O0FBRUQsUUFBSUYsTUFBTSxLQUFLLHFCQUFmLEVBQXNDO0FBQ3BDLFVBQUlHLFdBQVcsR0FBR1YsVUFBVSxDQUFDVyxzQkFBWCxDQUFrQ04sSUFBbEMsQ0FBbEI7O0FBQ0EsVUFBSSxDQUFDSyxXQUFELElBQWdCQSxXQUFXLEtBQUtMLElBQXBDLEVBQTBDO0FBQ3hDRCxRQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBUztBQUFDSCxVQUFBQSxJQUFEO0FBQU9LLFVBQUFBLFdBQVcsRUFBRTtBQUFwQixTQUFUO0FBQ0E7QUFDRCxPQUhELE1BR007QUFDSk4sUUFBQUEsR0FBRyxDQUFDSSxJQUFKLENBQVM7QUFBQ0gsVUFBQUEsSUFBRDtBQUFPSyxVQUFBQTtBQUFQLFNBQVQ7QUFDQTtBQUNEO0FBQ0YsS0FURCxNQVVLLElBQUlILE1BQU0sS0FBSyxxQkFBZixFQUFzQztBQUN6QyxVQUFJRyxXQUFXLEdBQUdWLFVBQVUsQ0FBQ1kscUJBQVgsQ0FBaUNQLElBQWpDLENBQWxCOztBQUNBLFVBQUksQ0FBQ0ssV0FBRCxJQUFnQkEsV0FBVyxLQUFLTCxJQUFwQyxFQUEwQztBQUN4Q0QsUUFBQUEsR0FBRyxDQUFDSSxJQUFKLENBQVM7QUFBQ0gsVUFBQUEsSUFBRDtBQUFPSyxVQUFBQSxXQUFXLEVBQUU7QUFBcEIsU0FBVDtBQUNBO0FBQ0QsT0FIRCxNQUdNO0FBQ0pOLFFBQUFBLEdBQUcsQ0FBQ0ksSUFBSixDQUFTO0FBQUNILFVBQUFBLElBQUQ7QUFBT0ssVUFBQUE7QUFBUCxTQUFUO0FBQ0E7QUFDRDtBQUNGLEtBVEksTUFVQTtBQUNITixNQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBUztBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBVCxPQUFUO0FBQ0E7QUFDRDtBQUVGLEdBdkNIO0FBd0NELENBNUNEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uZXdfbmFtZS9EZXNrdG9wL2JyaXRpc2ggdHJhbnNsYXRvci9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBUcmFuc2xhdG9yID0gcmVxdWlyZSgnLi4vY29tcG9uZW50cy90cmFuc2xhdG9yLmpzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFwcCkge1xuICBcbiAgY29uc3QgdHJhbnNsYXRvciA9IG5ldyBUcmFuc2xhdG9yKCk7XG5cbiAgYXBwLnJvdXRlKCcvYXBpL3RyYW5zbGF0ZScpXG4gICAgLnBvc3QoKHJlcSwgcmVzKSA9PiB7XG4gICAgICBsZXQgdGV4dCA9IHJlcS5ib2R5LnRleHQ7XG4gICAgICBsZXQgbG9jYWxlID0gcmVxLmJvZHkubG9jYWxlO1xuXG4gICAgICBpZiAodGV4dCA9PT0gXCJcIikge1xuICAgICAgICByZXMuanNvbih7IGVycm9yOiAnTm8gdGV4dCB0byB0cmFuc2xhdGUnIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBlbHNlIGlmICghbG9jYWxlIHx8ICF0ZXh0KSB7XG4gICAgICAgIHJlcy5qc29uKHsgZXJyb3I6ICdSZXF1aXJlZCBmaWVsZChzKSBtaXNzaW5nJyB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAobG9jYWxlID09PSBcImFtZXJpY2FuLXRvLWJyaXRpc2hcIikge1xuICAgICAgICBsZXQgdHJhbnNsYXRpb24gPSB0cmFuc2xhdG9yLmdldEFtZXJpY2FuVHJhbnNsYXRpb24odGV4dClcbiAgICAgICAgaWYgKCF0cmFuc2xhdGlvbiB8fCB0cmFuc2xhdGlvbiA9PT0gdGV4dCkge1xuICAgICAgICAgIHJlcy5qc29uKHt0ZXh0LCB0cmFuc2xhdGlvbjogXCJFdmVyeXRoaW5nIGxvb2tzIGdvb2QgdG8gbWUhXCJ9KVxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfWVsc2Uge1xuICAgICAgICAgIHJlcy5qc29uKHt0ZXh0LCB0cmFuc2xhdGlvbn0pO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZWxzZSBpZiAobG9jYWxlID09PSBcImJyaXRpc2gtdG8tYW1lcmljYW5cIikge1xuICAgICAgICBsZXQgdHJhbnNsYXRpb24gPSB0cmFuc2xhdG9yLmdldEJyaXRpc2hUcmFuc2xhdGlvbih0ZXh0KVxuICAgICAgICBpZiAoIXRyYW5zbGF0aW9uIHx8IHRyYW5zbGF0aW9uID09PSB0ZXh0KSB7XG4gICAgICAgICAgcmVzLmpzb24oe3RleHQsIHRyYW5zbGF0aW9uOiBcIkV2ZXJ5dGhpbmcgbG9va3MgZ29vZCB0byBtZSFcIn0pXG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9ZWxzZSB7XG4gICAgICAgICAgcmVzLmpzb24oe3RleHQsIHRyYW5zbGF0aW9ufSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgcmVzLmpzb24oeyBlcnJvcjogXCJJbnZhbGlkIHZhbHVlIGZvciBsb2NhbGUgZmllbGRcIiB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgfSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "Translator",
        "require",
        "module",
        "exports",
        "app",
        "translator",
        "route",
        "post",
        "req",
        "res",
        "text",
        "body",
        "locale",
        "json",
        "error",
        "translation",
        "getAmericanTranslation",
        "getBritishTranslation"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,6BAAD,CAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAe;AAE9B,QAAMC,UAAU,GAAG,IAAIL,UAAJ,EAAnB;AAEAI,EAAAA,GAAG,CAACE,KAAJ,CAAU,gBAAV,EACGC,IADH,CACQ,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClB,QAAIC,IAAI,GAAGF,GAAG,CAACG,IAAJ,CAASD,IAApB;AACA,QAAIE,MAAM,GAAGJ,GAAG,CAACG,IAAJ,CAASC,MAAtB;;AAEA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AACfD,MAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT;AACA;AACD,KAHD,MAIK,IAAI,CAACF,MAAD,IAAW,CAACF,IAAhB,EAAsB;AACzBD,MAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT;AACA;AACD;;AAED,QAAIF,MAAM,KAAK,qBAAf,EAAsC;AACpC,UAAIG,WAAW,GAAGV,UAAU,CAACW,sBAAX,CAAkCN,IAAlC,CAAlB;;AACA,UAAI,CAACK,WAAD,IAAgBA,WAAW,KAAKL,IAApC,EAA0C;AACxCD,QAAAA,GAAG,CAACI,IAAJ,CAAS;AAACH,UAAAA,IAAD;AAAOK,UAAAA,WAAW,EAAE;AAApB,SAAT;AACA;AACD,OAHD,MAGM;AACJN,QAAAA,GAAG,CAACI,IAAJ,CAAS;AAACH,UAAAA,IAAD;AAAOK,UAAAA;AAAP,SAAT;AACA;AACD;AACF,KATD,MAUK,IAAIH,MAAM,KAAK,qBAAf,EAAsC;AACzC,UAAIG,WAAW,GAAGV,UAAU,CAACY,qBAAX,CAAiCP,IAAjC,CAAlB;;AACA,UAAI,CAACK,WAAD,IAAgBA,WAAW,KAAKL,IAApC,EAA0C;AACxCD,QAAAA,GAAG,CAACI,IAAJ,CAAS;AAACH,UAAAA,IAAD;AAAOK,UAAAA,WAAW,EAAE;AAApB,SAAT;AACA;AACD,OAHD,MAGM;AACJN,QAAAA,GAAG,CAACI,IAAJ,CAAS;AAACH,UAAAA,IAAD;AAAOK,UAAAA;AAAP,SAAT;AACA;AACD;AACF,KATI,MAUA;AACHN,MAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAT;AACA;AACD;AAEF,GAvCH;AAwCD,CA5CD",
      "sourceRoot": "/Users/new_name/Desktop/british translator/routes/",
      "sourcesContent": [
        "'use strict';\n\nconst Translator = require('../components/translator.js');\n\nmodule.exports = function (app) {\n  \n  const translator = new Translator();\n\n  app.route('/api/translate')\n    .post((req, res) => {\n      let text = req.body.text;\n      let locale = req.body.locale;\n\n      if (text === \"\") {\n        res.json({ error: 'No text to translate' });\n        return;\n      }\n      else if (!locale || !text) {\n        res.json({ error: 'Required field(s) missing' });\n        return;\n      }\n\n      if (locale === \"american-to-british\") {\n        let translation = translator.getAmericanTranslation(text)\n        if (!translation || translation === text) {\n          res.json({text, translation: \"Everything looks good to me!\"})\n          return;\n        }else {\n          res.json({text, translation});\n          return;\n        }\n      }\n      else if (locale === \"british-to-american\") {\n        let translation = translator.getBritishTranslation(text)\n        if (!translation || translation === text) {\n          res.json({text, translation: \"Everything looks good to me!\"})\n          return;\n        }else {\n          res.json({text, translation});\n          return;\n        }\n      }\n      else {\n        res.json({ error: \"Invalid value for locale field\" });\n        return;\n      }\n\n    });\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1705353737843
  }
}